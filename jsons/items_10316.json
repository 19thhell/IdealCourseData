[{"detail": [{"content": "NYU Linguistics V61.0024 Syllabus                  Computational Principles of Sentence Construction V61.0024  - 001 73128 SYLLABUS    Prof. Ray C.  Dougherty New York University |    Linguistics Department    This course description is available in   postscript   and in   zipped  postscript .   HELP ||   LING ||   COURSES || Basics   | Overview |   Syllabus | Project |   Students                   Preliminary Version Final Version Will be Given Out In  Class    The course lectures are organized into five topics. At the end of each set  of lectures, there is a student project due. The project may be given to me on  an IBM compatible disk or placed into your WWW directory.    I. What is Natural Language Computing? ( Project I )    II. Chomsky's Grammar, Prolog and the WWW. ( Project II )    III. Basic Tools for Computational Linguistics. ( Project III )    IV. Computing the Data Structures of Human Language. ( Project IV )    V. Computing Human Sentence Structures. ( Final Project )    (RES) means the article in on reserve in Bobst and at 719  Broadway, fifth floor. (HARD) means this article is difficult  and is for reference. ( SCRIPT ) is a scriptfile handed out in class. ( WORKBOOK )  is an except from the Introductory  Workbook in Computational Linguistics .          I. What is Natural Language Computing ?    1. Introduction to Computational Linguistics and Sentence  Processing In Part I, students will run existing programs  provided in class, from the disk provided with the book Natural Language  Computing, and from the WWW. In Parts II-V students will modify existing  programs and write their own.          Dougherty, Preface, pp. i-xviii.    Dougherty, Introduction, What is Computational Linguistics?, pp. xix-xxix.    Chomsky, The Minimalist Program, Introduction, pp. 1-11 (RES)    Introduction to NYU ACF UNIX, ACF documentation    Introduction to parsing sentences in Prolog (SCRIPT)    http://www.nyu.edu/pages/linguistics/parsers.html    2. Diagramming Sentences: Representations and  Derivations. We will begin the course by following  Chomsky's ideas about phrase markers, constituent structure, and derivations.  Later we will develop a bottom-up parser that projects all structures from  lexical items.          Dougherty, How to Use This Book: A Pictorial Essay, pp. xxix-xliv.    Chomsky, Lang and Mind, The Formal Nature of Language, pp. 139-155. (RES)    How to use the existing programs on the UNIX ACF (SCRIPT)    Introduction to NYU ACF UNIX, ACF documentation    3. Animal, Human, and Machine Intelligence.    Crucial in Chomsky's theory is the idea of level. Each level is defined by a  lexicon of elements and principles of combination that define the possible  adjunctions and merges of elements. This course focuses on implementing the  permutation (displacement) and combination (merge, adjunction) operations that  function in human language into Prolog relations.          Dougherty, Chapter 1. Natural Intelligence, Linguistics, and Prolog,  pp. 1-23    Chomsky, Lang and Mind, The Formal Nature of Language, pp. 115-127. (RES)    Gorrell, Syntax and Parsing, Introduction, pp. 1-9. (RES)    How to print your results on the NYU ACF UNIX (SCRIPT)    Pretty printers developed to print trees resulting from parsers (SCRIPT)    4. The Role of Intelligent Machines in the Information  Society. The readings provide resource materials for the  course final project. We discuss Chomsky's idea that an I-language (grammar) is  like a switch. We show how a parser links a written (orthographic) string with a  logical form (meaning).          Dougherty, Chapter 1. Natural Intelligence, Linguistics, and Prolog,  pp. 1-23    Dougherty, A Grammar of Coordinate Conjoined Structures, Part I.  (RES)(HARD)    Dougherty, A Grammar of Coordinate Conjoined Structures, Part II.  (RES)(HARD)    Using the NYU Prolog programs to parse sentences (SCRIPT)    5. Working Examples of Artificial Intelligence Machines. We  discuss websites that provide rather complicated examples of parsers,  translation machines, pronouncing dictionaries, and so on.          http://www.nyu.edu/pages/linguistics/parsers.html    http://www.lingsoft.fi    http://www.nyu.edu/pages/linguistics/htmlclub.html    Morphological parsers available on the WWW (SCRIPT)    Syntactic parsers available on the WWW (SCRIPT)    Semantic/Logical Form parsers available on the WWW (SCRIPT)    Translation parsers available on the WWW (SCRIPT)       PROJECT I IS DUE AT THE NEXT CLASS    For this project, you have been given a set of sentences in a file on the  NYU web sever. You are required to run these through the parsers discussed in  class, output the results to a file, and print the file. You are expected to  turn in the printout resulting from parsing the sentences.          II. Chomsky's Grammar, Prolog, and the WWW    6. How to Read and Write in Prolog.           Dougherty, 2.1. Six Characteristics of Prolog Programs, pp. 24-30.    Dougherty, 2.2. How to Read and Write in Prolog, pp. 31-39.    Dougherty, 2.3. Four Steps to Running a Prolog Program, pp. 40-43.    Dougherty, 2.4. Running Shareware Prolog on an IBM PC, pp. 44-51.    How to make scriptfiles in UNIX (SCRIPT)    7. How to Load, Run, and Edit a Prolog Program.           Dougherty, 3.1. The Prolog Interpreter and Work Space, pp. 52-64.    Dougherty, 3.2. How to Load and Run a Prolog Program, pp. 65-72.    Dougherty, 3.3. Running Prolog on an IBM PC, pp. 73-74.    8. Prolog as a Tool for Linguistic Research.           Dougherty, 3.4. Modifying the Word Squares Program, pp. 73-79.    Dougherty, 3.5. The Edit-Prolog-Edit Loop, pp. 80-82.    Introduction to NYU ACF UNIX, ACF documentation    9. Tables of Data as Prolog Facts and Relations.           Dougherty, 4.1. Converting Tables into Facts and Relations, pp. 83-92.    Dougherty, 4.2. How to Extract Information from Tables, pp. 92-93.    Dougherty, 4.3. Variables in a Query, pp. 94-96.    10. German and French Agreement: Tense and Case. We  focus on agreement phenomena such as: (English) I am/*are, you *am/are;  (French) je suis/*est, elle *suis/est; and (German) das alte Buch, ein altes  Buch, *eine altes Buch, *dem alter Buch. We examine agreement of person, number,  gender, case, tense, and so on between NP and VP and internal to NP and VP.          Dougherty, 4.4. Variables in the Database, pp. 97-101.    Dougherty, 4.5. Tables with Holes: cut, fail and an empty category, pp.  102-110.       PROJECT II IS DUE AT THE NEXT CLASS    You are expected to write a short Prolog program in which the quantifiers  (each, all, etc.), the coordinating conjunctions (and, or, nor), and some  distributional adverbs (simultaneously, together, etc.) are presented as facts  (simple or complex) in a Prolog database. You should also define some relations  that indicate selection and cooccurrence restrictions between the quantifiers,  coordinations, and adverbs.          III. Basic Tools for Computational Linguistics    11. How Prolog Backtracks in Searches. We  discuss the computational, linguistic, and psycho-linguistic significance of   'garden path sentences' such as: 'The horse raced past the barn died,' and 'The  artist sold the painting admired it.'          Dougherty, 5.1. Information Retrieval: Bibliographic Searches, pp.  111-116.    Dougherty, 5.2. Searches with and without Backtracking, pp. 117-120.    Dougherty, 5.3. Backtracking Caused by Filters, pp. 121-128.    Dougherty, 5.4. Bound and Unbound Variables, pp. 129-131.    12. Pretty Printers: Formatting a Bibliography.           Dougherty, 5.4. Bound and Unbound Variables, pp. 129-131.    Dougherty, 5.5. Bounded and Unbounded Variables, pp. 132-136.    Dougherty, 5.6. A Blunder Popular with Beginning Programmers, pp. 137-138.    Dougherty, 5.7. Report Generation: Formatting Output and 'write', pp.  139-146.    13. Irregular Verb Morphology in English.           Dougherty, 6.1. Some Irregular Verbs in English, pp. 147-149.    Dougherty, 6.2. The Six Modules of a Prolog Program, pp. 150-155.    14. Prolog and Logical Constraint Based Grammars.           Dougherty, 6.3. The Bracketing of Logical Constituents, pp. 156-160.       PROJECT III IS DUE AT THE NEXT CLASS    You will write a short Prolog grammar (database/lexicon) and principles of  combination that defines strings of quantifiers, coordinations, and adverbs that  cooccur. It will recognize: (each, and, independently), as in John and Mary each  will leave independently, but not *(each,and,simultaneously), as in *John and  Mary each will leave simultaneously. It will recognize (all, and), but not  *(all, or). I am mainly concerned that you realize how to use the unfication  properties of Prolog to insure cooccurrence and selection. If you feel  ambitious, you may write a program to parse sentences and phrases incorporating  these quantifiers, coordinations, and adverbs.          IV. Computing the Data Structures of Human Language.    15. Computational Tools for Language Processing.           Dougherty, 7.1. The Levels of Human Language Structure, pp. 161-179    Dougherty, 7.2. Morphological Parsers, pp. 180-194    O.Grady, William, Michael Dobrovolsky, and Mark Aronoff. 1989. Contemporary  Linguistics: An Introduction. New York: St. Martin's Press. Chapter 4.  Morphology: The Study of Word Structure, pp. 89-123. (RES)    Fromkin, Victoria and Robert Rodman. 1978. An Introduction to Language.   New York: Holt, Reinhart and Winston. Chapter 6. The Wonder of Words. pp.  138-163 (RES)           16. Morphological Parsers: Affixes, Suffixes, Stems, and  Roots.           Dougherty, 7.2. Morphological Parsers, pp.180-194    Halle and Maranz. 1994. Distributed Morphology and the Pieces of  Information. In Hale and Keyser (eds.), The View from Building 20. MIT Press.  pp. 111-176. (HARD) (RES)    Hendrick, Randall. 1995. Morphosyntax. In Webelhuth (ed.), 1995. Government  and Binding Theory and the Minimalist Program. Cambridge: Blackwell. (HARD)  (RES)    17. Recursion: The Analysis and Decomposition of Words           Dougherty, 7.3. Recursion: Affixes on the Affixes, pp. 195-216       18. The Lexicon, Exceptions, and Productive Principles.           Dougherty, 7.4. Regular and Irregular Morphology, pp. 216-228.    Gorrell, Syntax and Parsing, Analysis of Previous Work, pp. 65-93. (HARD)    Introduction to NYU ACF UNIX, ACF documentation    19. Chomsky's Minimalist Program: Morphology and the  Lexicon.           Dougherty, 7.5. The Minimalist Framework, pp. 229-238. (HARD)    Chomsky, The Minimalist Program, ####    Introduction to NYU ACF UNIX, ACF documentation       PROJECT IV IS DUE AT THE NEXT CLASS    You will produce a Prolog program that parses coordinations of noun phrases  and plural noun phrase constructions that may incorporate quantifiers,  coordinations, plurals, and adverbs. Your parser will recognize:  (john,and,mary,each,independently) but not *(john,or,mary,each,simultaneously).  If you wish, you may include a parser that provides pretty printer to indicate  the scope of the quantifiers and adverbs. Such pretty printers have been  discussed in class and are readily available on the web, but you may write your  own if you wish.          V. Computing Human Sentence Structures.    20. Computational Tools for Sentence Processing.             Dougherty, 8.1. Syntax: Representations and Parsers, pp. 239-253    Dougherty, 8.2. Rule Governed Creativity: Derivations, pp. 245-265    Gorrell, Parsing and Syntax, Propeties of the Parser, pp.94-147 (HARD)  (RES)    21. Lexically Driven Syntactic and Semantic Parsers.           Dougherty, 8.3. Parsers Assign Structure to an Ordered String, pp.  266-276    Dougherty, 8.4. Top-Down and Bottom-Up Parsing, pp. 276-302    Gorrell, Parsing and Syntax, Conclusion, pp. 149-166. (HARD) (RES)    22. Top-Down Versus Bottom-Up Parsing.           Dougherty, 8.4. Top-Down and Bottom-Up Parsing, pp. 276-302    Dougherty, 8.5. Horizontal Appends: Complement Structures, pp. 303-318       23. Lexically Specified Complements and Selection.           Dougherty, 8.5 Horizontal Appends: Complement Structures, pp. 303-318    Dougherty, 8.6. Vertical Appends: Selection Restrictions, pp. 319-327       24. Computational Linguistics on the WWW.           Readings to be announced.          FINAL PROJECT The final project is due the day, hour,  and minute that the registrar has scheduled the final exam. You may turn it in  earlier than this, but not later.    You will write a Prolog program (lexicon and principles of combination)  that parses embedded noun phrase coordinations such as: (mary,and,sue,or,jane),  which might have a logical form like ((mary and sue) or jane) or (mary and (sue  or jane)). The input to your parser will be strings of nouns, the coordinations  (and, or, nor), and quantifiers (each, all, etc.), such as:  (either,tess,or,tracy,and,sean), (neither,tess,and,tracy,nor,sean), and so on.  Your parser will assign each of these the correct logical form(s), indicating  ambiguities where relevant. It will fail to link strings like this to any  logical form: *(and,or,tess,tracy,neither,sean). Use the pretty printers to  output a readable logical form for the input sentences."}]},
{"detail": [{"content": "NYU Linguistics V61.0024 Syllabus                  Computational Principles of Sentence Construction V61.0024  - 001 73128 SYLLABUS    Prof. Ray C.  Dougherty New York University |    Linguistics Department    This course description is available in   postscript   and in   zipped  postscript .   HELP ||   LING ||   COURSES || Basics   | Overview |   Syllabus | Project |   Students                   Preliminary Version Final Version Will be Given Out In  Class    The course lectures are organized into five topics. At the end of each set  of lectures, there is a student project due. The project may be given to me on  an IBM compatible disk or placed into your WWW directory.    I. What is Natural Language Computing? ( Project I )    II. Chomsky's Grammar, Prolog and the WWW. ( Project II )    III. Basic Tools for Computational Linguistics. ( Project III )    IV. Computing the Data Structures of Human Language. ( Project IV )    V. Computing Human Sentence Structures. ( Final Project )    (RES) means the article in on reserve in Bobst and at 719  Broadway, fifth floor. (HARD) means this article is difficult  and is for reference. ( SCRIPT ) is a scriptfile handed out in class. ( WORKBOOK )  is an except from the Introductory  Workbook in Computational Linguistics .          I. What is Natural Language Computing ?    1. Introduction to Computational Linguistics and Sentence  Processing In Part I, students will run existing programs  provided in class, from the disk provided with the book Natural Language  Computing, and from the WWW. In Parts II-V students will modify existing  programs and write their own.          Dougherty, Preface, pp. i-xviii.    Dougherty, Introduction, What is Computational Linguistics?, pp. xix-xxix.    Chomsky, The Minimalist Program, Introduction, pp. 1-11 (RES)    Introduction to NYU ACF UNIX, ACF documentation    Introduction to parsing sentences in Prolog (SCRIPT)    http://www.nyu.edu/pages/linguistics/parsers.html    2. Diagramming Sentences: Representations and  Derivations. We will begin the course by following  Chomsky's ideas about phrase markers, constituent structure, and derivations.  Later we will develop a bottom-up parser that projects all structures from  lexical items.          Dougherty, How to Use This Book: A Pictorial Essay, pp. xxix-xliv.    Chomsky, Lang and Mind, The Formal Nature of Language, pp. 139-155. (RES)    How to use the existing programs on the UNIX ACF (SCRIPT)    Introduction to NYU ACF UNIX, ACF documentation    3. Animal, Human, and Machine Intelligence.    Crucial in Chomsky's theory is the idea of level. Each level is defined by a  lexicon of elements and principles of combination that define the possible  adjunctions and merges of elements. This course focuses on implementing the  permutation (displacement) and combination (merge, adjunction) operations that  function in human language into Prolog relations.          Dougherty, Chapter 1. Natural Intelligence, Linguistics, and Prolog,  pp. 1-23    Chomsky, Lang and Mind, The Formal Nature of Language, pp. 115-127. (RES)    Gorrell, Syntax and Parsing, Introduction, pp. 1-9. (RES)    How to print your results on the NYU ACF UNIX (SCRIPT)    Pretty printers developed to print trees resulting from parsers (SCRIPT)    4. The Role of Intelligent Machines in the Information  Society. The readings provide resource materials for the  course final project. We discuss Chomsky's idea that an I-language (grammar) is  like a switch. We show how a parser links a written (orthographic) string with a  logical form (meaning).          Dougherty, Chapter 1. Natural Intelligence, Linguistics, and Prolog,  pp. 1-23    Dougherty, A Grammar of Coordinate Conjoined Structures, Part I.  (RES)(HARD)    Dougherty, A Grammar of Coordinate Conjoined Structures, Part II.  (RES)(HARD)    Using the NYU Prolog programs to parse sentences (SCRIPT)    5. Working Examples of Artificial Intelligence Machines. We  discuss websites that provide rather complicated examples of parsers,  translation machines, pronouncing dictionaries, and so on.          http://www.nyu.edu/pages/linguistics/parsers.html    http://www.lingsoft.fi    http://www.nyu.edu/pages/linguistics/htmlclub.html    Morphological parsers available on the WWW (SCRIPT)    Syntactic parsers available on the WWW (SCRIPT)    Semantic/Logical Form parsers available on the WWW (SCRIPT)    Translation parsers available on the WWW (SCRIPT)       PROJECT I IS DUE AT THE NEXT CLASS    For this project, you have been given a set of sentences in a file on the  NYU web sever. You are required to run these through the parsers discussed in  class, output the results to a file, and print the file. You are expected to  turn in the printout resulting from parsing the sentences.          II. Chomsky's Grammar, Prolog, and the WWW    6. How to Read and Write in Prolog.           Dougherty, 2.1. Six Characteristics of Prolog Programs, pp. 24-30.    Dougherty, 2.2. How to Read and Write in Prolog, pp. 31-39.    Dougherty, 2.3. Four Steps to Running a Prolog Program, pp. 40-43.    Dougherty, 2.4. Running Shareware Prolog on an IBM PC, pp. 44-51.    How to make scriptfiles in UNIX (SCRIPT)    7. How to Load, Run, and Edit a Prolog Program.           Dougherty, 3.1. The Prolog Interpreter and Work Space, pp. 52-64.    Dougherty, 3.2. How to Load and Run a Prolog Program, pp. 65-72.    Dougherty, 3.3. Running Prolog on an IBM PC, pp. 73-74.    8. Prolog as a Tool for Linguistic Research.           Dougherty, 3.4. Modifying the Word Squares Program, pp. 73-79.    Dougherty, 3.5. The Edit-Prolog-Edit Loop, pp. 80-82.    Introduction to NYU ACF UNIX, ACF documentation    9. Tables of Data as Prolog Facts and Relations.           Dougherty, 4.1. Converting Tables into Facts and Relations, pp. 83-92.    Dougherty, 4.2. How to Extract Information from Tables, pp. 92-93.    Dougherty, 4.3. Variables in a Query, pp. 94-96.    10. German and French Agreement: Tense and Case. We  focus on agreement phenomena such as: (English) I am/*are, you *am/are;  (French) je suis/*est, elle *suis/est; and (German) das alte Buch, ein altes  Buch, *eine altes Buch, *dem alter Buch. We examine agreement of person, number,  gender, case, tense, and so on between NP and VP and internal to NP and VP.          Dougherty, 4.4. Variables in the Database, pp. 97-101.    Dougherty, 4.5. Tables with Holes: cut, fail and an empty category, pp.  102-110.       PROJECT II IS DUE AT THE NEXT CLASS    You are expected to write a short Prolog program in which the quantifiers  (each, all, etc.), the coordinating conjunctions (and, or, nor), and some  distributional adverbs (simultaneously, together, etc.) are presented as facts  (simple or complex) in a Prolog database. You should also define some relations  that indicate selection and cooccurrence restrictions between the quantifiers,  coordinations, and adverbs.          III. Basic Tools for Computational Linguistics    11. How Prolog Backtracks in Searches. We  discuss the computational, linguistic, and psycho-linguistic significance of   'garden path sentences' such as: 'The horse raced past the barn died,' and 'The  artist sold the painting admired it.'          Dougherty, 5.1. Information Retrieval: Bibliographic Searches, pp.  111-116.    Dougherty, 5.2. Searches with and without Backtracking, pp. 117-120.    Dougherty, 5.3. Backtracking Caused by Filters, pp. 121-128.    Dougherty, 5.4. Bound and Unbound Variables, pp. 129-131.    12. Pretty Printers: Formatting a Bibliography.           Dougherty, 5.4. Bound and Unbound Variables, pp. 129-131.    Dougherty, 5.5. Bounded and Unbounded Variables, pp. 132-136.    Dougherty, 5.6. A Blunder Popular with Beginning Programmers, pp. 137-138.    Dougherty, 5.7. Report Generation: Formatting Output and 'write', pp.  139-146.    13. Irregular Verb Morphology in English.           Dougherty, 6.1. Some Irregular Verbs in English, pp. 147-149.    Dougherty, 6.2. The Six Modules of a Prolog Program, pp. 150-155.    14. Prolog and Logical Constraint Based Grammars.           Dougherty, 6.3. The Bracketing of Logical Constituents, pp. 156-160.       PROJECT III IS DUE AT THE NEXT CLASS    You will write a short Prolog grammar (database/lexicon) and principles of  combination that defines strings of quantifiers, coordinations, and adverbs that  cooccur. It will recognize: (each, and, independently), as in John and Mary each  will leave independently, but not *(each,and,simultaneously), as in *John and  Mary each will leave simultaneously. It will recognize (all, and), but not  *(all, or). I am mainly concerned that you realize how to use the unfication  properties of Prolog to insure cooccurrence and selection. If you feel  ambitious, you may write a program to parse sentences and phrases incorporating  these quantifiers, coordinations, and adverbs.          IV. Computing the Data Structures of Human Language.    15. Computational Tools for Language Processing.           Dougherty, 7.1. The Levels of Human Language Structure, pp. 161-179    Dougherty, 7.2. Morphological Parsers, pp. 180-194    O.Grady, William, Michael Dobrovolsky, and Mark Aronoff. 1989. Contemporary  Linguistics: An Introduction. New York: St. Martin's Press. Chapter 4.  Morphology: The Study of Word Structure, pp. 89-123. (RES)    Fromkin, Victoria and Robert Rodman. 1978. An Introduction to Language.   New York: Holt, Reinhart and Winston. Chapter 6. The Wonder of Words. pp.  138-163 (RES)           16. Morphological Parsers: Affixes, Suffixes, Stems, and  Roots.           Dougherty, 7.2. Morphological Parsers, pp.180-194    Halle and Maranz. 1994. Distributed Morphology and the Pieces of  Information. In Hale and Keyser (eds.), The View from Building 20. MIT Press.  pp. 111-176. (HARD) (RES)    Hendrick, Randall. 1995. Morphosyntax. In Webelhuth (ed.), 1995. Government  and Binding Theory and the Minimalist Program. Cambridge: Blackwell. (HARD)  (RES)    17. Recursion: The Analysis and Decomposition of Words           Dougherty, 7.3. Recursion: Affixes on the Affixes, pp. 195-216       18. The Lexicon, Exceptions, and Productive Principles.           Dougherty, 7.4. Regular and Irregular Morphology, pp. 216-228.    Gorrell, Syntax and Parsing, Analysis of Previous Work, pp. 65-93. (HARD)    Introduction to NYU ACF UNIX, ACF documentation    19. Chomsky's Minimalist Program: Morphology and the  Lexicon.           Dougherty, 7.5. The Minimalist Framework, pp. 229-238. (HARD)    Chomsky, The Minimalist Program, ####    Introduction to NYU ACF UNIX, ACF documentation       PROJECT IV IS DUE AT THE NEXT CLASS    You will produce a Prolog program that parses coordinations of noun phrases  and plural noun phrase constructions that may incorporate quantifiers,  coordinations, plurals, and adverbs. Your parser will recognize:  (john,and,mary,each,independently) but not *(john,or,mary,each,simultaneously).  If you wish, you may include a parser that provides pretty printer to indicate  the scope of the quantifiers and adverbs. Such pretty printers have been  discussed in class and are readily available on the web, but you may write your  own if you wish.          V. Computing Human Sentence Structures.    20. Computational Tools for Sentence Processing.             Dougherty, 8.1. Syntax: Representations and Parsers, pp. 239-253    Dougherty, 8.2. Rule Governed Creativity: Derivations, pp. 245-265    Gorrell, Parsing and Syntax, Propeties of the Parser, pp.94-147 (HARD)  (RES)    21. Lexically Driven Syntactic and Semantic Parsers.           Dougherty, 8.3. Parsers Assign Structure to an Ordered String, pp.  266-276    Dougherty, 8.4. Top-Down and Bottom-Up Parsing, pp. 276-302    Gorrell, Parsing and Syntax, Conclusion, pp. 149-166. (HARD) (RES)    22. Top-Down Versus Bottom-Up Parsing.           Dougherty, 8.4. Top-Down and Bottom-Up Parsing, pp. 276-302    Dougherty, 8.5. Horizontal Appends: Complement Structures, pp. 303-318       23. Lexically Specified Complements and Selection.           Dougherty, 8.5 Horizontal Appends: Complement Structures, pp. 303-318    Dougherty, 8.6. Vertical Appends: Selection Restrictions, pp. 319-327       24. Computational Linguistics on the WWW.           Readings to be announced.          FINAL PROJECT The final project is due the day, hour,  and minute that the registrar has scheduled the final exam. You may turn it in  earlier than this, but not later.    You will write a Prolog program (lexicon and principles of combination)  that parses embedded noun phrase coordinations such as: (mary,and,sue,or,jane),  which might have a logical form like ((mary and sue) or jane) or (mary and (sue  or jane)). The input to your parser will be strings of nouns, the coordinations  (and, or, nor), and quantifiers (each, all, etc.), such as:  (either,tess,or,tracy,and,sean), (neither,tess,and,tracy,nor,sean), and so on.  Your parser will assign each of these the correct logical form(s), indicating  ambiguities where relevant. It will fail to link strings like this to any  logical form: *(and,or,tess,tracy,neither,sean). Use the pretty printers to  output a readable logical form for the input sentences."}, {"content": "Course List    | LAMD | NYU                                 Language and Mind                                      Back to  previous page                Printer Friendly       Course List Language and Mind LING-UA 3 (formerly LING-UA 28 / V61.0028)   This course deals with what our knowledge of language can tell us about  the nature of the mind, and vice versa. It is offered jointly by  Psychology and Linguistics, presenting methodology and results from  both fields. It is well known that language is a social phenomenon;  this course will focus on some aspects of language that make its study  more like a natural science. We discuss the structure of sentences  (syntax), words (morphology), and sound shape (phonetics, phonology),  and ask how these are acquired, mentally represented, and processed by  humans. sample syllabus *Language and Mind can be taken without the listed prerequisite  Cognition (PSYCH-UA 29 / V89.0029). The Cognition prerequisite is for psychology  majors who are taking the Language &amp; Mind course as an advanced  elective. We recommend enrolling through the Linguistics department in  order to avoid any problems with registration. 3 Courses in Linguistics  Requirement Course Name  Number  Semester Typically Offered    2 Courses Chosen From:   Grammatical Analysis LING-UA 13 / V61.0013 Fall    Phonological   Analysis LING-UA 12 / V61.0012 Spring    Introduction to Semantics LING-UA 4 / V61.0004     1 Course Chosen From: Sound   and Language LING-UA 11 / V61.0011 Fall    Intro     to Morphology at Advanced Level LING-UA 55 / V61.0055     Form,     Meaning, and the Mind LING-UA 31 / V61.0031     Propositional Attitudes LING-UA 35 / V61.0035     Computational Principles of Sentence Construction (aka Patterns in Language) LING-UA 24 / V61.0024 Spring    Psycholinguistics LING-UA 5 / V61.0005     Neural Bases of Language LING-UA 43 / V61.0043 or PSYCH-UA 300 / V89.0300.001 Fall    Linguistics   as Cognitive Science LING-UA 48 / V61.0048 Spring    Learning to Speak LING-UA 54 / V61.0054      Grammatical   Analysis LING-UA 13 / V61.0013 Fall     Phonological     Analysis LING-UA 12 / V61.0012 Fall     Introduction   to Semantics LING-UA 4 / V61.0004              1 Course in Philosophy          Requirement Course Name  Number  Semester Typically Offered     1 Course Chosen From:  Minds and Machines PHIL-UA 15 / V83.0015 Spring    Philosophy of Language PHIL-UA 85 / V83.0085 Fall, Spring    Logic PHIL-UA 70 / V83.0070 Fall, Spring, Summer             4 Courses in Psychology          Requirement Course Name  Number  Semester Typically Offered     Required Cognition PSYCH-UA 29 / V89.0029 Fall, Spring    Required Statistical Reasoning for the Behavioral Sciences PSYCH-UA 10 / V89.0010 Fall, Spring          Elective A, 1 Course Chosen From: Neural   Bases of Language PSYCH-UA 300-1 / V89.0300.001 or LING-UA 43 / V61.0043 Fall    The     Psychology of Language PSYCH-UA 56 / V89.0056 Every other year     Speech: A window into the developing mind PSYCH-UA 300-13 / V89.0300.013      Language Acquisition and Cognitive Development PSYCH-UA 300-11 / V89.0300.011             Elective B, 1 Course Chosen From: Introduction to Cognitive Neuroscience  PSYCH-UA 25 / V89.0025     Perception  PSYCH-UA 22 / V89.0022     Laboratory in Perception PSYCH-UA 44 / V89.0044     Laboratory in Cognitive Neuroscience PSYCH-UA 300-9 / V89.0300.009     Laboratory   in Human Cognition (currently numbered V89.0046) PSYCH-UA 28 / V89.0028 Fall    Neural     Bases of Language (if not taken for Elective A)  PSYCH-UA 300-1 / V89.0300.001 or LING-UA 43 / V61.0043 Fall    The   Psychology of Language (if not taken for Elective A) PSYCH-UA 56 / V89.0056 Every other year    Speech: A window into the developing mind (if not taken for Elective A)  PSYCH-UA 300-13 / V89.0300.013     Language Acquisition and Cognitive Development (if not taken for Elective A) PSYCH-UA 300-11 / V89.0300.011 Fall             1 Final Course The 10th course will be one of the above listed courses that has not already been chosen to satisfy the departmental components .   For information about additional courses offered by the three departments: Linguistics Course List Psychology Course List Philosophy Course List                                         Back to Top                   Contact Us | &copy; New York University , Arts and Science"}]},
{"detail": [{"content": "NYU Linguistics V61.0024 Syllabus                  Computational Principles of Sentence Construction V61.0024  - 001 73128 SYLLABUS    Prof. Ray C.  Dougherty New York University |    Linguistics Department    This course description is available in   postscript   and in   zipped  postscript .   HELP ||   LING ||   COURSES || Basics   | Overview |   Syllabus | Project |   Students                   Preliminary Version Final Version Will be Given Out In  Class    The course lectures are organized into five topics. At the end of each set  of lectures, there is a student project due. The project may be given to me on  an IBM compatible disk or placed into your WWW directory.    I. What is Natural Language Computing? ( Project I )    II. Chomsky's Grammar, Prolog and the WWW. ( Project II )    III. Basic Tools for Computational Linguistics. ( Project III )    IV. Computing the Data Structures of Human Language. ( Project IV )    V. Computing Human Sentence Structures. ( Final Project )    (RES) means the article in on reserve in Bobst and at 719  Broadway, fifth floor. (HARD) means this article is difficult  and is for reference. ( SCRIPT ) is a scriptfile handed out in class. ( WORKBOOK )  is an except from the Introductory  Workbook in Computational Linguistics .          I. What is Natural Language Computing ?    1. Introduction to Computational Linguistics and Sentence  Processing In Part I, students will run existing programs  provided in class, from the disk provided with the book Natural Language  Computing, and from the WWW. In Parts II-V students will modify existing  programs and write their own.          Dougherty, Preface, pp. i-xviii.    Dougherty, Introduction, What is Computational Linguistics?, pp. xix-xxix.    Chomsky, The Minimalist Program, Introduction, pp. 1-11 (RES)    Introduction to NYU ACF UNIX, ACF documentation    Introduction to parsing sentences in Prolog (SCRIPT)    http://www.nyu.edu/pages/linguistics/parsers.html    2. Diagramming Sentences: Representations and  Derivations. We will begin the course by following  Chomsky's ideas about phrase markers, constituent structure, and derivations.  Later we will develop a bottom-up parser that projects all structures from  lexical items.          Dougherty, How to Use This Book: A Pictorial Essay, pp. xxix-xliv.    Chomsky, Lang and Mind, The Formal Nature of Language, pp. 139-155. (RES)    How to use the existing programs on the UNIX ACF (SCRIPT)    Introduction to NYU ACF UNIX, ACF documentation    3. Animal, Human, and Machine Intelligence.    Crucial in Chomsky's theory is the idea of level. Each level is defined by a  lexicon of elements and principles of combination that define the possible  adjunctions and merges of elements. This course focuses on implementing the  permutation (displacement) and combination (merge, adjunction) operations that  function in human language into Prolog relations.          Dougherty, Chapter 1. Natural Intelligence, Linguistics, and Prolog,  pp. 1-23    Chomsky, Lang and Mind, The Formal Nature of Language, pp. 115-127. (RES)    Gorrell, Syntax and Parsing, Introduction, pp. 1-9. (RES)    How to print your results on the NYU ACF UNIX (SCRIPT)    Pretty printers developed to print trees resulting from parsers (SCRIPT)    4. The Role of Intelligent Machines in the Information  Society. The readings provide resource materials for the  course final project. We discuss Chomsky's idea that an I-language (grammar) is  like a switch. We show how a parser links a written (orthographic) string with a  logical form (meaning).          Dougherty, Chapter 1. Natural Intelligence, Linguistics, and Prolog,  pp. 1-23    Dougherty, A Grammar of Coordinate Conjoined Structures, Part I.  (RES)(HARD)    Dougherty, A Grammar of Coordinate Conjoined Structures, Part II.  (RES)(HARD)    Using the NYU Prolog programs to parse sentences (SCRIPT)    5. Working Examples of Artificial Intelligence Machines. We  discuss websites that provide rather complicated examples of parsers,  translation machines, pronouncing dictionaries, and so on.          http://www.nyu.edu/pages/linguistics/parsers.html    http://www.lingsoft.fi    http://www.nyu.edu/pages/linguistics/htmlclub.html    Morphological parsers available on the WWW (SCRIPT)    Syntactic parsers available on the WWW (SCRIPT)    Semantic/Logical Form parsers available on the WWW (SCRIPT)    Translation parsers available on the WWW (SCRIPT)       PROJECT I IS DUE AT THE NEXT CLASS    For this project, you have been given a set of sentences in a file on the  NYU web sever. You are required to run these through the parsers discussed in  class, output the results to a file, and print the file. You are expected to  turn in the printout resulting from parsing the sentences.          II. Chomsky's Grammar, Prolog, and the WWW    6. How to Read and Write in Prolog.           Dougherty, 2.1. Six Characteristics of Prolog Programs, pp. 24-30.    Dougherty, 2.2. How to Read and Write in Prolog, pp. 31-39.    Dougherty, 2.3. Four Steps to Running a Prolog Program, pp. 40-43.    Dougherty, 2.4. Running Shareware Prolog on an IBM PC, pp. 44-51.    How to make scriptfiles in UNIX (SCRIPT)    7. How to Load, Run, and Edit a Prolog Program.           Dougherty, 3.1. The Prolog Interpreter and Work Space, pp. 52-64.    Dougherty, 3.2. How to Load and Run a Prolog Program, pp. 65-72.    Dougherty, 3.3. Running Prolog on an IBM PC, pp. 73-74.    8. Prolog as a Tool for Linguistic Research.           Dougherty, 3.4. Modifying the Word Squares Program, pp. 73-79.    Dougherty, 3.5. The Edit-Prolog-Edit Loop, pp. 80-82.    Introduction to NYU ACF UNIX, ACF documentation    9. Tables of Data as Prolog Facts and Relations.           Dougherty, 4.1. Converting Tables into Facts and Relations, pp. 83-92.    Dougherty, 4.2. How to Extract Information from Tables, pp. 92-93.    Dougherty, 4.3. Variables in a Query, pp. 94-96.    10. German and French Agreement: Tense and Case. We  focus on agreement phenomena such as: (English) I am/*are, you *am/are;  (French) je suis/*est, elle *suis/est; and (German) das alte Buch, ein altes  Buch, *eine altes Buch, *dem alter Buch. We examine agreement of person, number,  gender, case, tense, and so on between NP and VP and internal to NP and VP.          Dougherty, 4.4. Variables in the Database, pp. 97-101.    Dougherty, 4.5. Tables with Holes: cut, fail and an empty category, pp.  102-110.       PROJECT II IS DUE AT THE NEXT CLASS    You are expected to write a short Prolog program in which the quantifiers  (each, all, etc.), the coordinating conjunctions (and, or, nor), and some  distributional adverbs (simultaneously, together, etc.) are presented as facts  (simple or complex) in a Prolog database. You should also define some relations  that indicate selection and cooccurrence restrictions between the quantifiers,  coordinations, and adverbs.          III. Basic Tools for Computational Linguistics    11. How Prolog Backtracks in Searches. We  discuss the computational, linguistic, and psycho-linguistic significance of   'garden path sentences' such as: 'The horse raced past the barn died,' and 'The  artist sold the painting admired it.'          Dougherty, 5.1. Information Retrieval: Bibliographic Searches, pp.  111-116.    Dougherty, 5.2. Searches with and without Backtracking, pp. 117-120.    Dougherty, 5.3. Backtracking Caused by Filters, pp. 121-128.    Dougherty, 5.4. Bound and Unbound Variables, pp. 129-131.    12. Pretty Printers: Formatting a Bibliography.           Dougherty, 5.4. Bound and Unbound Variables, pp. 129-131.    Dougherty, 5.5. Bounded and Unbounded Variables, pp. 132-136.    Dougherty, 5.6. A Blunder Popular with Beginning Programmers, pp. 137-138.    Dougherty, 5.7. Report Generation: Formatting Output and 'write', pp.  139-146.    13. Irregular Verb Morphology in English.           Dougherty, 6.1. Some Irregular Verbs in English, pp. 147-149.    Dougherty, 6.2. The Six Modules of a Prolog Program, pp. 150-155.    14. Prolog and Logical Constraint Based Grammars.           Dougherty, 6.3. The Bracketing of Logical Constituents, pp. 156-160.       PROJECT III IS DUE AT THE NEXT CLASS    You will write a short Prolog grammar (database/lexicon) and principles of  combination that defines strings of quantifiers, coordinations, and adverbs that  cooccur. It will recognize: (each, and, independently), as in John and Mary each  will leave independently, but not *(each,and,simultaneously), as in *John and  Mary each will leave simultaneously. It will recognize (all, and), but not  *(all, or). I am mainly concerned that you realize how to use the unfication  properties of Prolog to insure cooccurrence and selection. If you feel  ambitious, you may write a program to parse sentences and phrases incorporating  these quantifiers, coordinations, and adverbs.          IV. Computing the Data Structures of Human Language.    15. Computational Tools for Language Processing.           Dougherty, 7.1. The Levels of Human Language Structure, pp. 161-179    Dougherty, 7.2. Morphological Parsers, pp. 180-194    O.Grady, William, Michael Dobrovolsky, and Mark Aronoff. 1989. Contemporary  Linguistics: An Introduction. New York: St. Martin's Press. Chapter 4.  Morphology: The Study of Word Structure, pp. 89-123. (RES)    Fromkin, Victoria and Robert Rodman. 1978. An Introduction to Language.   New York: Holt, Reinhart and Winston. Chapter 6. The Wonder of Words. pp.  138-163 (RES)           16. Morphological Parsers: Affixes, Suffixes, Stems, and  Roots.           Dougherty, 7.2. Morphological Parsers, pp.180-194    Halle and Maranz. 1994. Distributed Morphology and the Pieces of  Information. In Hale and Keyser (eds.), The View from Building 20. MIT Press.  pp. 111-176. (HARD) (RES)    Hendrick, Randall. 1995. Morphosyntax. In Webelhuth (ed.), 1995. Government  and Binding Theory and the Minimalist Program. Cambridge: Blackwell. (HARD)  (RES)    17. Recursion: The Analysis and Decomposition of Words           Dougherty, 7.3. Recursion: Affixes on the Affixes, pp. 195-216       18. The Lexicon, Exceptions, and Productive Principles.           Dougherty, 7.4. Regular and Irregular Morphology, pp. 216-228.    Gorrell, Syntax and Parsing, Analysis of Previous Work, pp. 65-93. (HARD)    Introduction to NYU ACF UNIX, ACF documentation    19. Chomsky's Minimalist Program: Morphology and the  Lexicon.           Dougherty, 7.5. The Minimalist Framework, pp. 229-238. (HARD)    Chomsky, The Minimalist Program, ####    Introduction to NYU ACF UNIX, ACF documentation       PROJECT IV IS DUE AT THE NEXT CLASS    You will produce a Prolog program that parses coordinations of noun phrases  and plural noun phrase constructions that may incorporate quantifiers,  coordinations, plurals, and adverbs. Your parser will recognize:  (john,and,mary,each,independently) but not *(john,or,mary,each,simultaneously).  If you wish, you may include a parser that provides pretty printer to indicate  the scope of the quantifiers and adverbs. Such pretty printers have been  discussed in class and are readily available on the web, but you may write your  own if you wish.          V. Computing Human Sentence Structures.    20. Computational Tools for Sentence Processing.             Dougherty, 8.1. Syntax: Representations and Parsers, pp. 239-253    Dougherty, 8.2. Rule Governed Creativity: Derivations, pp. 245-265    Gorrell, Parsing and Syntax, Propeties of the Parser, pp.94-147 (HARD)  (RES)    21. Lexically Driven Syntactic and Semantic Parsers.           Dougherty, 8.3. Parsers Assign Structure to an Ordered String, pp.  266-276    Dougherty, 8.4. Top-Down and Bottom-Up Parsing, pp. 276-302    Gorrell, Parsing and Syntax, Conclusion, pp. 149-166. (HARD) (RES)    22. Top-Down Versus Bottom-Up Parsing.           Dougherty, 8.4. Top-Down and Bottom-Up Parsing, pp. 276-302    Dougherty, 8.5. Horizontal Appends: Complement Structures, pp. 303-318       23. Lexically Specified Complements and Selection.           Dougherty, 8.5 Horizontal Appends: Complement Structures, pp. 303-318    Dougherty, 8.6. Vertical Appends: Selection Restrictions, pp. 319-327       24. Computational Linguistics on the WWW.           Readings to be announced.          FINAL PROJECT The final project is due the day, hour,  and minute that the registrar has scheduled the final exam. You may turn it in  earlier than this, but not later.    You will write a Prolog program (lexicon and principles of combination)  that parses embedded noun phrase coordinations such as: (mary,and,sue,or,jane),  which might have a logical form like ((mary and sue) or jane) or (mary and (sue  or jane)). The input to your parser will be strings of nouns, the coordinations  (and, or, nor), and quantifiers (each, all, etc.), such as:  (either,tess,or,tracy,and,sean), (neither,tess,and,tracy,nor,sean), and so on.  Your parser will assign each of these the correct logical form(s), indicating  ambiguities where relevant. It will fail to link strings like this to any  logical form: *(and,or,tess,tracy,neither,sean). Use the pretty printers to  output a readable logical form for the input sentences."}, {"content": "Course List    | LAMD | NYU                                 Language and Mind                                      Back to  previous page                Printer Friendly       Course List Language and Mind LING-UA 3 (formerly LING-UA 28 / V61.0028)   This course deals with what our knowledge of language can tell us about  the nature of the mind, and vice versa. It is offered jointly by  Psychology and Linguistics, presenting methodology and results from  both fields. It is well known that language is a social phenomenon;  this course will focus on some aspects of language that make its study  more like a natural science. We discuss the structure of sentences  (syntax), words (morphology), and sound shape (phonetics, phonology),  and ask how these are acquired, mentally represented, and processed by  humans. sample syllabus *Language and Mind can be taken without the listed prerequisite  Cognition (PSYCH-UA 29 / V89.0029). The Cognition prerequisite is for psychology  majors who are taking the Language &amp; Mind course as an advanced  elective. We recommend enrolling through the Linguistics department in  order to avoid any problems with registration. 3 Courses in Linguistics  Requirement Course Name  Number  Semester Typically Offered    2 Courses Chosen From:   Grammatical Analysis LING-UA 13 / V61.0013 Fall    Phonological   Analysis LING-UA 12 / V61.0012 Spring    Introduction to Semantics LING-UA 4 / V61.0004     1 Course Chosen From: Sound   and Language LING-UA 11 / V61.0011 Fall    Intro     to Morphology at Advanced Level LING-UA 55 / V61.0055     Form,     Meaning, and the Mind LING-UA 31 / V61.0031     Propositional Attitudes LING-UA 35 / V61.0035     Computational Principles of Sentence Construction (aka Patterns in Language) LING-UA 24 / V61.0024 Spring    Psycholinguistics LING-UA 5 / V61.0005     Neural Bases of Language LING-UA 43 / V61.0043 or PSYCH-UA 300 / V89.0300.001 Fall    Linguistics   as Cognitive Science LING-UA 48 / V61.0048 Spring    Learning to Speak LING-UA 54 / V61.0054      Grammatical   Analysis LING-UA 13 / V61.0013 Fall     Phonological     Analysis LING-UA 12 / V61.0012 Fall     Introduction   to Semantics LING-UA 4 / V61.0004              1 Course in Philosophy          Requirement Course Name  Number  Semester Typically Offered     1 Course Chosen From:  Minds and Machines PHIL-UA 15 / V83.0015 Spring    Philosophy of Language PHIL-UA 85 / V83.0085 Fall, Spring    Logic PHIL-UA 70 / V83.0070 Fall, Spring, Summer             4 Courses in Psychology          Requirement Course Name  Number  Semester Typically Offered     Required Cognition PSYCH-UA 29 / V89.0029 Fall, Spring    Required Statistical Reasoning for the Behavioral Sciences PSYCH-UA 10 / V89.0010 Fall, Spring          Elective A, 1 Course Chosen From: Neural   Bases of Language PSYCH-UA 300-1 / V89.0300.001 or LING-UA 43 / V61.0043 Fall    The     Psychology of Language PSYCH-UA 56 / V89.0056 Every other year     Speech: A window into the developing mind PSYCH-UA 300-13 / V89.0300.013      Language Acquisition and Cognitive Development PSYCH-UA 300-11 / V89.0300.011             Elective B, 1 Course Chosen From: Introduction to Cognitive Neuroscience  PSYCH-UA 25 / V89.0025     Perception  PSYCH-UA 22 / V89.0022     Laboratory in Perception PSYCH-UA 44 / V89.0044     Laboratory in Cognitive Neuroscience PSYCH-UA 300-9 / V89.0300.009     Laboratory   in Human Cognition (currently numbered V89.0046) PSYCH-UA 28 / V89.0028 Fall    Neural     Bases of Language (if not taken for Elective A)  PSYCH-UA 300-1 / V89.0300.001 or LING-UA 43 / V61.0043 Fall    The   Psychology of Language (if not taken for Elective A) PSYCH-UA 56 / V89.0056 Every other year    Speech: A window into the developing mind (if not taken for Elective A)  PSYCH-UA 300-13 / V89.0300.013     Language Acquisition and Cognitive Development (if not taken for Elective A) PSYCH-UA 300-11 / V89.0300.011 Fall             1 Final Course The 10th course will be one of the above listed courses that has not already been chosen to satisfy the departmental components .   For information about additional courses offered by the three departments: Linguistics Course List Psychology Course List Philosophy Course List                                         Back to Top                   Contact Us | &copy; New York University , Arts and Science"}, {"content": "NYU > Linguistics > Undergraduate Students                        New York University       Arts and Science       College of Arts and Science       Graduate School of Arts and Science         &amp;nbsp;     &amp;nbsp;             &amp;nbsp;             &amp;nbsp;                  Back to  previous page              &amp;nbsp;         &amp;nbsp;     Undergraduate Students        Linguistics Majors    Anthropology and Linguistics Majors    Language and Mind Majors    French and Linguistics Majors    Italian and Linguistics Majors    Spanish and Linguistics Majors    German and Linguistics Majors      Linguistics Majors            Boboc, Wellesley  Bouavichith, Dominique A.    Cook, Sarah  Flores, Ricardo E.  Fulman, David  Hill, Victoria  Hyman, Christopher  Joo, April  Kwon, Joyce  Nunez, Jonathan  Parody, Sofia  Pescovitz, Amanda  Queiroz, Stephanie  Sullivan, Reilly  Tabatowski, Michael  Taylor, Brynn N  Thompson, Laura  Wellstood, Zachary  Wheelock, Kane  Wu, Nancy  Xie, Tony            Anthropology and Linguistics Majors              Caceres, Marcia L.  Cohen, Natalie D.  Matthias, Mia  Papadopoulos, James  Rudolph, Hannah  Scott, Carson  Shin, Lynn  Talamonti, Abbi            Language and Mind Majors            Balaba, Naomi  Baskharoun, Samuel  Basta, Caroline  Castro, Alexis  Como, John M.  Delaney, Kathleen  Gardner, Jenna  Goldfarb, Samuel  Hu, Clarice S  Lang, Benjamin  Matthews, Steve  Mical, Steven  Miller, Paulina  Mormile, Isabel  Muller, Hanna  Naranjo, Kelly  Pecchio, Dominique  Peterson, Adam  Piper, Rebecca  Raboy, Elizabeth R.  Roman, Stefanie  Somani, Arpan  Tuyuc, Genesis  Wood, Emily  Yeung, Maggie          French and Linguistics majors            Dalgarno, Philip  Elkins, Anais  Khanna, Trisha  Maccallan-Finkelman, Tamar E   Mao, Alexandria  Warnke, Lena         German and Linguistics majors            Nobles, Nissa P         Italian and Linguistics majors            Jeffries, Skylar K  Solinas, Marc          Spanish and Linguistics majors          Bookman, Simone  Keselman, Dennis  Ovalle, Justin K  Prentice, Kira  Seminati, Helena S  Shakhnazaryan, Nana               Updated on 11&#047;21&#047;2014       Back to top             Contact us | &copy; New York University , Arts and Science"}]}]