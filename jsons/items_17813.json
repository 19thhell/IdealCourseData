[{"detail": [{"content": "NYU &gt; Courant Institute &gt; Software Configuration Management                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Software Configuration Management                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      Subversion and Mercurial are version control systems which introduce many features absent from CVS. The CIMS systems group operates an instance of Apache to serve subversion and mercurial repositories. While it is not neccesary to serve subversion or mercurial through Apache, doing so allows for greater flexibility in authenticaion and finer grained access control.    Repositories in home directories    If you don't intend to use subversion or mercurial with colloborators then there is no need to use the server. You may simply setup a repository in your home directory and access it through the local filesystem or over ssh. To create a repository simply execute the following command on a CIMS unix system (e.g., access.cims.nyu.edu), replacing path with the directory under which you would like to create the repository (for example, /home/username/repos):    For subversion:    svnadmin create --fs-type fsfs path    For mercurial    hg init path/project_name    Repositories hosted on CIMS SCM Server    To have a repository setup on the server submit our SCM Repo Request Form . A description of the available authentication and access control methods follows. This information applies only to repositories hosted on the CIMS SCM server and not to personal repositories.    Authentication    Except in cases where a repository is configured for anonymous access clients must authenticate to read or write to a repository. Authentication can be performed against CIMS accounts and/or accounts stored in a plain text file. The text file option is useful for situations where collaborators without CIMS accounts require access. When a repository is created you will be given the location of a text file to use for storing non-CIMS accounts. Insructions on how to manage this file are here .    Access Control    A repository can be configured to use one of two access control schemes: repository-wide access or path-based access. These schemes are mutually exclusive, it's either one or the other. Repository-wide access grants authenticated users read and write access to the entire contents of a repository. If repository-wide access is too coarse for your purposes, e.g., if you would like to grant some users read-only access, or limit the directories to which certain users can write, a repository can be configured with path-based access. It is possible to switch the access control scheme after a repository has been created, so if the access requirements change at some point it is not a problem. (Note: path-based control requires that the server perform access checks at each level of the repository, which produces a noticable delay for most operations. You should only request that a repository be configured with path-based access if it is absolutely necessary.)    Repository-wide Access    Repository wide access can be controlled through group information in LDAP (CIMS Unix groups) or a text file. Email helpdesk@cims.nyu.edu to grant a CIMS Unix group access to a repository. A plain text file can also be used to control access. The path of this file will be provided to you when the repository is created. Users can be added or removed with a text editor. The file will have the following form:     &lt;groupname&gt;: &lt;user&gt; [&lt;user&gt;...]    An example:     svn_users: peter kevin mary orlando    Do not change the group name, just the users included in the group. Valid users are either CIMS usernames or those specified in the non-CIMS account file described in the Authentication section of this document.    Path-Based Access Control    Path-based access control allows one to control access to a repository at the level of individual directories. Child directories inherit the permssions of parents unless they are explicitly overridden. Path-based permissions are defined in a text file whose location will be given to you when the repository is created. Path-based access have the following form:     [groups]  &lt;groupname&gt; = &lt;user&gt;[,&lt;user&gt;...]  ...  [&lt;path in repository&gt;]  @&lt;group&gt; = [rw|r]  &lt;user&gt; = [rw|r]  * = [rw|r]  [&lt;repository name&gt;:&lt;path in repository&gt;]  @&lt;group&gt; = [rw|r]  &lt;user&gt; = [rw|r]  * = [rw|r]     An example of an access control file follows:      [groups]   subversion = jimb,sussman,kfogel,gstein,brane,joe,ghudson,fitz, \\      daniel,cmpilato,kevin,philip,jerenkrantz,rooneg, \\      bcollins,blair,striker,naked,dwhedon,dlr,kraai,mbk, \\      epg,bdenny,jaa   subversion-doc = nsd,zbrown,fmatias,dimentiy,patrick   subversion-bindings = xela,yoshiki,morten,jespersm,knacke   subversion-rm = mprice   ...and so on and so on...   [/]   # Allow everyone read on the entire repository   * = r   # Allow devs with blanket commit to write to the entire repository   @subversion = rw   [/trunk/doc]   @subversion-doc = rw   [/trunk/subversion/bindings]   @subversion-bindings = rw   [/branches]   @subversion-rm = rw   [/tags]   @subversion-rm = rw   [/branches/issue-650-ssl-certs]   mass = rw   [/branches/pluggable-db]   gthompson = rw   ...   [/secrets]   # Just for demonstration   * =   @subversion = rw For more infomation on path-based access please see http://svnbook.red-bean.com/en/1.6/svn.serverconfig.pathbasedauthz.html.    Anonymous Access    If you would like to have anonymous access setup for a repository then the repository must also be configured with path-based access. Otherwise anonymous users will be able to read and write to the entire repository. If you would like to enable anonymous access to a repository contact helpdesk@courant.nyu.edu .    Using subversion    For information on how to use the subversion client you should consult the online documentation or download the PDF . Section 1 covers the fundamental concepts of working with subversion and section 2 describes basic usage of the subversion client. To access a repository on the CIMS server you will need to know its URL. This generally will be of the form https://subversive.cims.nyu.edu/ repository name / where repository name is the name of the repository.    Using mercurial    For information on how to use the mercurial client you should consult the online documentation . To access a repository on the CIMS server you will need to know its URL. This generally will be of the form https://subversive.cims.nyu.edu/ repository name / where repository name is the name of the repository.         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}]},
{"detail": [{"content": "NYU &gt; Courant Institute &gt; Software Configuration Management                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Software Configuration Management                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      Subversion and Mercurial are version control systems which introduce many features absent from CVS. The CIMS systems group operates an instance of Apache to serve subversion and mercurial repositories. While it is not neccesary to serve subversion or mercurial through Apache, doing so allows for greater flexibility in authenticaion and finer grained access control.    Repositories in home directories    If you don't intend to use subversion or mercurial with colloborators then there is no need to use the server. You may simply setup a repository in your home directory and access it through the local filesystem or over ssh. To create a repository simply execute the following command on a CIMS unix system (e.g., access.cims.nyu.edu), replacing path with the directory under which you would like to create the repository (for example, /home/username/repos):    For subversion:    svnadmin create --fs-type fsfs path    For mercurial    hg init path/project_name    Repositories hosted on CIMS SCM Server    To have a repository setup on the server submit our SCM Repo Request Form . A description of the available authentication and access control methods follows. This information applies only to repositories hosted on the CIMS SCM server and not to personal repositories.    Authentication    Except in cases where a repository is configured for anonymous access clients must authenticate to read or write to a repository. Authentication can be performed against CIMS accounts and/or accounts stored in a plain text file. The text file option is useful for situations where collaborators without CIMS accounts require access. When a repository is created you will be given the location of a text file to use for storing non-CIMS accounts. Insructions on how to manage this file are here .    Access Control    A repository can be configured to use one of two access control schemes: repository-wide access or path-based access. These schemes are mutually exclusive, it's either one or the other. Repository-wide access grants authenticated users read and write access to the entire contents of a repository. If repository-wide access is too coarse for your purposes, e.g., if you would like to grant some users read-only access, or limit the directories to which certain users can write, a repository can be configured with path-based access. It is possible to switch the access control scheme after a repository has been created, so if the access requirements change at some point it is not a problem. (Note: path-based control requires that the server perform access checks at each level of the repository, which produces a noticable delay for most operations. You should only request that a repository be configured with path-based access if it is absolutely necessary.)    Repository-wide Access    Repository wide access can be controlled through group information in LDAP (CIMS Unix groups) or a text file. Email helpdesk@cims.nyu.edu to grant a CIMS Unix group access to a repository. A plain text file can also be used to control access. The path of this file will be provided to you when the repository is created. Users can be added or removed with a text editor. The file will have the following form:     &lt;groupname&gt;: &lt;user&gt; [&lt;user&gt;...]    An example:     svn_users: peter kevin mary orlando    Do not change the group name, just the users included in the group. Valid users are either CIMS usernames or those specified in the non-CIMS account file described in the Authentication section of this document.    Path-Based Access Control    Path-based access control allows one to control access to a repository at the level of individual directories. Child directories inherit the permssions of parents unless they are explicitly overridden. Path-based permissions are defined in a text file whose location will be given to you when the repository is created. Path-based access have the following form:     [groups]  &lt;groupname&gt; = &lt;user&gt;[,&lt;user&gt;...]  ...  [&lt;path in repository&gt;]  @&lt;group&gt; = [rw|r]  &lt;user&gt; = [rw|r]  * = [rw|r]  [&lt;repository name&gt;:&lt;path in repository&gt;]  @&lt;group&gt; = [rw|r]  &lt;user&gt; = [rw|r]  * = [rw|r]     An example of an access control file follows:      [groups]   subversion = jimb,sussman,kfogel,gstein,brane,joe,ghudson,fitz, \\      daniel,cmpilato,kevin,philip,jerenkrantz,rooneg, \\      bcollins,blair,striker,naked,dwhedon,dlr,kraai,mbk, \\      epg,bdenny,jaa   subversion-doc = nsd,zbrown,fmatias,dimentiy,patrick   subversion-bindings = xela,yoshiki,morten,jespersm,knacke   subversion-rm = mprice   ...and so on and so on...   [/]   # Allow everyone read on the entire repository   * = r   # Allow devs with blanket commit to write to the entire repository   @subversion = rw   [/trunk/doc]   @subversion-doc = rw   [/trunk/subversion/bindings]   @subversion-bindings = rw   [/branches]   @subversion-rm = rw   [/tags]   @subversion-rm = rw   [/branches/issue-650-ssl-certs]   mass = rw   [/branches/pluggable-db]   gthompson = rw   ...   [/secrets]   # Just for demonstration   * =   @subversion = rw For more infomation on path-based access please see http://svnbook.red-bean.com/en/1.6/svn.serverconfig.pathbasedauthz.html.    Anonymous Access    If you would like to have anonymous access setup for a repository then the repository must also be configured with path-based access. Otherwise anonymous users will be able to read and write to the entire repository. If you would like to enable anonymous access to a repository contact helpdesk@courant.nyu.edu .    Using subversion    For information on how to use the subversion client you should consult the online documentation or download the PDF . Section 1 covers the fundamental concepts of working with subversion and section 2 describes basic usage of the subversion client. To access a repository on the CIMS server you will need to know its URL. This generally will be of the form https://subversive.cims.nyu.edu/ repository name / where repository name is the name of the repository.    Using mercurial    For information on how to use the mercurial client you should consult the online documentation . To access a repository on the CIMS server you will need to know its URL. This generally will be of the form https://subversive.cims.nyu.edu/ repository name / where repository name is the name of the repository.         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}, {"content": "NYU &gt; Courant Institute &gt; Computing Resources at Courant                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Computing Resources at Courant                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      The Courant Institute of Mathematical Sciences (CIMS) is NYU's center for research and advanced training in Mathematics and Computer Science. At Courant, education and research are closely intertwined, and highly dependent upon computing. CIMS has a large network of Solaris and Linux-based servers and workstations, as well as Apples and PCs running Windows, which are all maintained by a full-time systems staff.    Every desk within the Institute is equipped with a Linux workstation, Windows PC, or Mac. There are also convenient general purpose computer labs for use by students and researchers, and a variety of computing resources , ranging from single processor systems used for student assignments to linux clusters and a number of multiprocessor shared-memory systems used for research. All of these computing resources can be accessed either on-site or remotely via the network .    Please direct questions and report problems to helpdesk@cims.nyu.edu . If, for some reason, email is not an available option you can submit a request online , or call (212) 998-3037.         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}]},
{"detail": [{"content": "NYU &gt; Courant Institute &gt; Software Configuration Management                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Software Configuration Management                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      Subversion and Mercurial are version control systems which introduce many features absent from CVS. The CIMS systems group operates an instance of Apache to serve subversion and mercurial repositories. While it is not neccesary to serve subversion or mercurial through Apache, doing so allows for greater flexibility in authenticaion and finer grained access control.    Repositories in home directories    If you don't intend to use subversion or mercurial with colloborators then there is no need to use the server. You may simply setup a repository in your home directory and access it through the local filesystem or over ssh. To create a repository simply execute the following command on a CIMS unix system (e.g., access.cims.nyu.edu), replacing path with the directory under which you would like to create the repository (for example, /home/username/repos):    For subversion:    svnadmin create --fs-type fsfs path    For mercurial    hg init path/project_name    Repositories hosted on CIMS SCM Server    To have a repository setup on the server submit our SCM Repo Request Form . A description of the available authentication and access control methods follows. This information applies only to repositories hosted on the CIMS SCM server and not to personal repositories.    Authentication    Except in cases where a repository is configured for anonymous access clients must authenticate to read or write to a repository. Authentication can be performed against CIMS accounts and/or accounts stored in a plain text file. The text file option is useful for situations where collaborators without CIMS accounts require access. When a repository is created you will be given the location of a text file to use for storing non-CIMS accounts. Insructions on how to manage this file are here .    Access Control    A repository can be configured to use one of two access control schemes: repository-wide access or path-based access. These schemes are mutually exclusive, it's either one or the other. Repository-wide access grants authenticated users read and write access to the entire contents of a repository. If repository-wide access is too coarse for your purposes, e.g., if you would like to grant some users read-only access, or limit the directories to which certain users can write, a repository can be configured with path-based access. It is possible to switch the access control scheme after a repository has been created, so if the access requirements change at some point it is not a problem. (Note: path-based control requires that the server perform access checks at each level of the repository, which produces a noticable delay for most operations. You should only request that a repository be configured with path-based access if it is absolutely necessary.)    Repository-wide Access    Repository wide access can be controlled through group information in LDAP (CIMS Unix groups) or a text file. Email helpdesk@cims.nyu.edu to grant a CIMS Unix group access to a repository. A plain text file can also be used to control access. The path of this file will be provided to you when the repository is created. Users can be added or removed with a text editor. The file will have the following form:     &lt;groupname&gt;: &lt;user&gt; [&lt;user&gt;...]    An example:     svn_users: peter kevin mary orlando    Do not change the group name, just the users included in the group. Valid users are either CIMS usernames or those specified in the non-CIMS account file described in the Authentication section of this document.    Path-Based Access Control    Path-based access control allows one to control access to a repository at the level of individual directories. Child directories inherit the permssions of parents unless they are explicitly overridden. Path-based permissions are defined in a text file whose location will be given to you when the repository is created. Path-based access have the following form:     [groups]  &lt;groupname&gt; = &lt;user&gt;[,&lt;user&gt;...]  ...  [&lt;path in repository&gt;]  @&lt;group&gt; = [rw|r]  &lt;user&gt; = [rw|r]  * = [rw|r]  [&lt;repository name&gt;:&lt;path in repository&gt;]  @&lt;group&gt; = [rw|r]  &lt;user&gt; = [rw|r]  * = [rw|r]     An example of an access control file follows:      [groups]   subversion = jimb,sussman,kfogel,gstein,brane,joe,ghudson,fitz, \\      daniel,cmpilato,kevin,philip,jerenkrantz,rooneg, \\      bcollins,blair,striker,naked,dwhedon,dlr,kraai,mbk, \\      epg,bdenny,jaa   subversion-doc = nsd,zbrown,fmatias,dimentiy,patrick   subversion-bindings = xela,yoshiki,morten,jespersm,knacke   subversion-rm = mprice   ...and so on and so on...   [/]   # Allow everyone read on the entire repository   * = r   # Allow devs with blanket commit to write to the entire repository   @subversion = rw   [/trunk/doc]   @subversion-doc = rw   [/trunk/subversion/bindings]   @subversion-bindings = rw   [/branches]   @subversion-rm = rw   [/tags]   @subversion-rm = rw   [/branches/issue-650-ssl-certs]   mass = rw   [/branches/pluggable-db]   gthompson = rw   ...   [/secrets]   # Just for demonstration   * =   @subversion = rw For more infomation on path-based access please see http://svnbook.red-bean.com/en/1.6/svn.serverconfig.pathbasedauthz.html.    Anonymous Access    If you would like to have anonymous access setup for a repository then the repository must also be configured with path-based access. Otherwise anonymous users will be able to read and write to the entire repository. If you would like to enable anonymous access to a repository contact helpdesk@courant.nyu.edu .    Using subversion    For information on how to use the subversion client you should consult the online documentation or download the PDF . Section 1 covers the fundamental concepts of working with subversion and section 2 describes basic usage of the subversion client. To access a repository on the CIMS server you will need to know its URL. This generally will be of the form https://subversive.cims.nyu.edu/ repository name / where repository name is the name of the repository.    Using mercurial    For information on how to use the mercurial client you should consult the online documentation . To access a repository on the CIMS server you will need to know its URL. This generally will be of the form https://subversive.cims.nyu.edu/ repository name / where repository name is the name of the repository.         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}, {"content": "NYU &gt; Courant Institute &gt; Computing Resources at Courant                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Computing Resources at Courant                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      The Courant Institute of Mathematical Sciences (CIMS) is NYU's center for research and advanced training in Mathematics and Computer Science. At Courant, education and research are closely intertwined, and highly dependent upon computing. CIMS has a large network of Solaris and Linux-based servers and workstations, as well as Apples and PCs running Windows, which are all maintained by a full-time systems staff.    Every desk within the Institute is equipped with a Linux workstation, Windows PC, or Mac. There are also convenient general purpose computer labs for use by students and researchers, and a variety of computing resources , ranging from single processor systems used for student assignments to linux clusters and a number of multiprocessor shared-memory systems used for research. All of these computing resources can be accessed either on-site or remotely via the network .    Please direct questions and report problems to helpdesk@cims.nyu.edu . If, for some reason, email is not an available option you can submit a request online , or call (212) 998-3037.         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}, {"content": "NYU &gt; Courant Institute &gt; Compute Servers                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Compute Servers                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      Courant has a number of systems that can be used for CPU intensive jobs and programming assignments for courses. These machines are restricted to logins from within the Courant network, so if you are coming from outside of CIMS, you will have to first login to one of the remote access servers , then use ssh to get to them .    Please do not use access.cims.nyu.edu for cpu-intensive jobs or course work .    General Compute Nodes (See current status)    These machines have been allocated for generic number smashing and medium memory consumption :             Hostname    CPU    Memory    SSH Fingerprint          mauler.cims.nyu.edu    4 Core 2.6GHz AMD Opteron    8GB (7GB/user limit)    Verify Host Identity          brawler.cims.nyu.edu    4 Core 2.6GHz AMD Opteron    8GB (7GB/user limit)    Verify Host Identity                   These energy efficient cpu powerplants are for general compution with small memory footprints :             Hostname    CPU    Memory    SSH Fingerprint          energon1.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon2.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon3.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon4.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity                     These Sun Solaris systems should be used for class programming assignments . For mysql database related usage, see the creating a MySQL database instructions :             Hostname    CPU    Memory    SSH Fingerprint          courses1.cs.nyu.edu    Dual UltraSparc IIIi    2GB    Verify Host Identity                The following Linux systems should be used only for CPU and memory intensive processes :             Hostname    CPU    Memory    SSH Fingerprint          crunchy1.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity          crunchy3.cims.nyu.edu    4 8-Core 2.4GHz AMD Opteron 6136    128GB    Verify Host Identity          crunchy4.cims.nyu.edu    4 8-Core 2.4GHz AMD Opteron 6136    128GB    Verify Host Identity          crunchy5.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity          crunchy6.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity                The following Linux systems should be used for generic number crunching :             Hostname    CPU    Memory    SSH Fingerprint          crackle1.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle2.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle3.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle4.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle5.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle6.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB                   The following Solaris systems should be used only for CPU and memory intensive processes :             Hostname    CPU    Memory    SSH Fingerprint          crunchy12.cims.nyu.edu    4x900MHz UltraSparcIII    16GB    Verify Host Identity             Programs that use the Message Passing Interface (MPI) library can be compiled and run on the Crunchy HPC Cluster .       Specialty Nodes    Cluster Computing (See current status)    The EULER cluster is a small Linux cluster for submitting batch jobs and gridMathematica processes.       Management Node: euler01.cims.nyu.edu       Web Service Computing    The following machines are good for both internal and external web based development and deployment :             Hostname    CPU    Memory    SSH Fingerprint          linserv1.cims.nyu.edu    2 Core 1GHz AMD Opteron    2GB    Verify Host Identity                We have some general instructions for setting up an Apache Webserver, Apache Tomcat, MySQL, and other services.       GPU Computing - NVIDIA/CUDA (See current status)    A Tesla S1070 system that can run CUDA programs is available for parallel processing . This Tesla unit has 4 Tesla S10 GPUs. Each GPU has 240 streaming cores and 4GB of memory for a total of 960 processor cores and 16GB of memory. One Tesla unit is connected to each of energon3 and energon4. To use these systems please see the instructions . Host nodes are:             Hostname    CPU    Memory    SSH Fingerprint          cuda3.cims.nyu.edu    16 CPU cores, 2 Tesla S10 GPUs (480 streaming cores total)    16GB System Memory, 4GB Video Memory     Verify Host Identity          cuda4.cims.nyu.edu    16 CPU cores, 2 Tesla S10 GPUs (480 streaming cores total)    16GB System Memory, 4GB Video Memory     Verify Host Identity                GPU Computing - AMD/OpenCL (See current status)    A pair of OpenCL systems that supports AMD's Accellerated Parallel Processing (AMD APP) . Each OpenCL machines has 2 FirePro V7800 GPUs. Each GPU has 1440 streaming cores and 2GB of video memory. To use these systems please see the instructions . Host nodes are:                Hostname    CPU    Memory    SSH Fingerprint          opencl1.cims.nyu.edu    4 CPU cores, 2 AMD FirePro V7800s (2880 streaming cores)    6GB System Memory, 4GB Video Memory    Verify Host Identity          opencl2.cims.nyu.edu (out of service until June 2015)    4 CPU cores, 2 AMD FirePro V7800s (2880 streaming cores)    6GB System Memory, 4GB Video Memory    Verify Host Identity                   Virtual Architecture    Courant als provides a number of dedicated virtual nodes for some specialty computing needs. The virtual architecture is currently comprised of:       Self-Managed Compute Nodes (see virtual nodes for more information)    Public Cloud Computing (see virtual nodes for more information)    Private Cloud Computing (see virtual nodes for more information)       You can request your own private computing resources by submitting an online request .       Legacy Computing    We currently provide some legacy computing for use with software that will only run on legcay systems :             Hostname    Legacy Support    CPU    Memory    SSH Fingerprint          stratus-1-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-2-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-3-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-4-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity                Other Machines    There are also systems associated with research groups. They are restricted to users who have been approved by a faculty member associated with the relevant research group.    One such group of systems belongs to the Center for Atmosphere Ocean Science (CAOS) .         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}]}]