[{"detail": [{"content": "Numerical Methods II, MATH-GA 2020.001 and CSCI-GA 2421.001, home page                  Numerical Methods II            MATH-GA 2020.001 and CSCI-GA 2421.001     Courant Institute of Mathematical Sciences,     New York University     Spring Semester, 2012     Lectures: Thursday, 7:10 to 9 pm, Room 312, Warren Weaver Hall                  Instructor     Jonathan Goodman     goodman@cims.nyu.edu     212-998-3326     room 529 Warren Weaver Hall     office hours: 4 to 6 pm Tuesdays        or by appointment             Teaching Assistants     tba                                 Course home page      Details and Weekly schedule      Resources      Assignments              Course description      This is the second semester of Numerical Methods.     We focus on computational methods related to differential equations.     Solution of ordinary differential equations discussed in some detail, including     linear multistep and Runge Kutta methods, stability and barrier theorems, and      methods for stiff problems.     Introduction to solution of certain partial differential equations such as the     Poisson problem and the heat equation.     A very brief introduction to finite element methods.     Iterative methods for solving large systems of equations, including conjugate gradients,     gmres and the role of pre-conditioners.     Discrete Fourier analysis and applications to stability analysis, spectral methods,     and fast solvers.               There will be a regular coding and computational experiments along with the more     theoretical material.     We will emphasize basic principles of scientific software such as modularity, unit     testing, performance, robustness, and convergence analysis.     We will discuss use of software tools such as visualization and specialized computing      packages.         Prerequisites      Mathematical prerequisies include basic analysis, linear algebra and differential equations.     Students also should be able to program in a high level language such as C, C++, FORTRAN, or     Java. Students who only have worked in a scripting language (Matlab Python, R etc.)     should start learning C++ before the class starts or struggle in the first weeks."}]},
{"detail": [{"content": "Numerical Methods II, MATH-GA 2020.001 and CSCI-GA 2421.001, home page                  Numerical Methods II            MATH-GA 2020.001 and CSCI-GA 2421.001     Courant Institute of Mathematical Sciences,     New York University     Spring Semester, 2012     Lectures: Thursday, 7:10 to 9 pm, Room 312, Warren Weaver Hall                  Instructor     Jonathan Goodman     goodman@cims.nyu.edu     212-998-3326     room 529 Warren Weaver Hall     office hours: 4 to 6 pm Tuesdays        or by appointment             Teaching Assistants     tba                                 Course home page      Details and Weekly schedule      Resources      Assignments              Course description      This is the second semester of Numerical Methods.     We focus on computational methods related to differential equations.     Solution of ordinary differential equations discussed in some detail, including     linear multistep and Runge Kutta methods, stability and barrier theorems, and      methods for stiff problems.     Introduction to solution of certain partial differential equations such as the     Poisson problem and the heat equation.     A very brief introduction to finite element methods.     Iterative methods for solving large systems of equations, including conjugate gradients,     gmres and the role of pre-conditioners.     Discrete Fourier analysis and applications to stability analysis, spectral methods,     and fast solvers.               There will be a regular coding and computational experiments along with the more     theoretical material.     We will emphasize basic principles of scientific software such as modularity, unit     testing, performance, robustness, and convergence analysis.     We will discuss use of software tools such as visualization and specialized computing      packages.         Prerequisites      Mathematical prerequisies include basic analysis, linear algebra and differential equations.     Students also should be able to program in a high level language such as C, C++, FORTRAN, or     Java. Students who only have worked in a scripting language (Matlab Python, R etc.)     should start learning C++ before the class starts or struggle in the first weeks."}, {"content": "Numerical Methods I    Numerical Methods I    G22.2420, G63.2010  Fall 2004, Mondays 5-7 p.m., WWH Room 101      Note: the class will start at 5:10 p.m. on the first class meeting (Sept 13) and at 5:00 p.m. subsequent weeks.    Instructor: Michael L. Overton      Coordinates     Office: WWH 529   Telephone: 998-3121   Office Hours: Drop by any time except just before class, or send email or call for appointment  Email: information on my address and spam filtering.      Should you take this course?  The course lectures take place only once a week, and this means they will move fast. The lectures will be quite mathematical at times, but we will also use the computer a lot in class to illustrate the concepts. The course is mostly about numerical linear algebra, a surprisingly rich subject that lies at the heart of modern scientific computing, but we will also cover other  classical subjects of numerical analysis such as interpolation and quadrature.  (ODE's and PDE's are covered in Numerical Methods II.) Hopefully, if you like math and computers, you will like this class. On the other hand, if your math background is weak, or you have no experience with computing, you are likely to find it very difficult. Don't hesitate to discuss these issues with me, after class or in my office.    Prerequisites  A solid knowledge of undergraduate linear algebra, and experience with  writing computer programs (in C or other language). Prior knowledge of Matlab is not required, but you will be expected to learn it as the course progresses.    Requirements  Regular homework assignments, including programming assignments, primarily using Matlab, but also occasionally C  (alternatively, Fortran or Java).  It is important that you do the homework yourself, but when you get stuck, I encourage you to consult with other students, or the math computer  consultant, or me, to get help when necessary. However, when you get help, it's important to acknowledge it in writing. Passing off other people's  work as your own is called plagiarism and is not acceptable.    Homework   Homework may be given to me in class or in my office, or left under my office door.  Please do not leave homework in my lobby mailbox or send it by email.  Please staple all pages together. Late homework will be penalized 20%.  Homework will not be accepted more than one week late, except in special circumstances.    Homework 1, assigned Sept 13, due Sept 20   Homework 2, assigned Sept 20, due Sept 27   Homework 3, assigned Sept 27, due Oct 4   Homework 4, assigned Oct 4, due Oct 14   Homework 5, assigned Oct 11, due Oct 18   Homework 6, assigned Oct 18, due Oct 25   Homework 7, assigned Oct 25, due Nov 1   Homework 8, assigned Nov 1, due Nov 8   Homework 9, assigned Nov 8, due Nov 15   Homework 10, assigned Nov 15, due Nov 22   Homework 11, assigned Nov 22, due Dec 6   Homework 12, assigned Dec 6, due Dec 13        Matlab programs used in class    Tentative Lecture Schedule     (Sept 13) The Singular Value Decomposition; IEEE Floating Point Representation  (Sept 20) IEEE Arithmetic, including Inf, NaN; Low Rank Approx property of SVD and Image Compression  (Sept 27) The QR factorization, Gram-Schmidt, Orthogonal Polynomials, Modified Gram-Schmidt  (Oct 4) Householder Orthogonalization; calling C programs from Matlab via MEX  (Oct 11) Least-Squares via QR, Normal Equations, SVD. Polynomial interpolation and Approximation  (Oct 18) Conditioning   (Oct 25) Stability   (Nov 1) Gauss Elimination and LU Factorization  (Nov 8) Cholesky Factorization and the Eigenvalue Problem  (Nov 15) Householder reduction to Hessenberg form, and Power, Inverse Power, Block Power Methods for Eigenvalues  (Nov 22) QR Method for Eigenvalues  (Nov 29) Arnoldi Iteration for Eigenvalues  (Dec 6) GMRES, Lanczos and Gauss Quadrature  (Dec 13) Conjugate Gradients and Chebyshev Polynomials      ORAL FINAL EXAM: 25 minutes in my office.  The emphasis will be on what you did for the homework. You pick one of the following topics and I pick one, and we will talk about what you learned about it. You do not have to memorize complicated details, but you should be able to explain the main ideas that we talked about in class and that you explored in the homework.    SVD, QR factorization and Least Squares (Text Lectures 4-11, not 18-19)  Conditioning and Stability (Text Lectures 12-17, not 18-19, plus my book  Chapters 12-13)  Systems of Equations (Text Lectures 20-23)  Eigenvalues (Text Lectures 24-29, not 30-31), but generalized to the  general nonsymmetric case, as covered in class  Iterative Methods (Text Lectures 32-38, not 39-40)     Official Syllabus     Official Syllabus for Numerical Methods I (this course)   Official Syllabus for Numerical Methods II (spring semester)       Books      Numerical Linear Algebra, by Trefethen and Bau (primary text)  A wonderful text at just the right level; we will follow it quite closely.  Typos in the Text    Numerical Computing with IEEE Floating Point Arithmetic, by the instructor   (supplementary text)  Brief, easy to read and only $20, but covers a lot of important basic matters; we will cover some parts in class, but you will be expected to read the rest on your own.   Applied Numerical Linear Algebra, by Demmel (not required, but may be helpful)  More detailed coverage of various topics, especially computational issues such as the BLAS, and algorithms for the nonsymmeric eigenvalue problem.     Software      MATLAB  We will use Matlab for most of the computing that we do in this course. Matlab is by far the best environment for small-scale numerical computing. Although by itself it is not the most efficient choice for large-scale computing, it can be used to call compiled C and Fortran routines and experiment with the results. Matlab is a product of  The MathWorks . You can order your own copy of   Matlab for $99  or you can use Matlab on the Courant Sparcstation network (or dial in from home). For Matlab documentation, type \"helpdesk\" at the Matlab prompt. To get started, try out  A Free Matlab Online Tutorial or   Another Tuturial  or look for others by a web search. You may want to look at a very outdated but still useful   Introductory Matlab Primer (3rd and last edition, postscript file) . There are many books on Matlab; I recommend  Matlab Guide, by  Higham and Higham , but you will find many other resources on the web, including the latest information on Matlab 7.0.    C  The lingua franca of computing. You will learn how to call the BLAS from C and how to call  C routines from Matlab using the MEX interface.  Even if you are not a C programmer,  this is a good time to learn a little C.   More information .     Fortran  Fortran is traditionally the language of numerical computing and is no longer the dinosaur it used to be. It's still widely used in scientific applications. Fortran 90, 95 and 2003  support vector operations and dynamic allocation and look a lot like Matlab. But the updated versions of Fortran 77 are fine for most purposes, especially when using the BLAS. Fortran routines can be called from Matlab using the MEX interface. More information .  You don't need to use Fortran in this course, but it's an alternative to using C.    Java  Java is becoming a popular choice for numerical computing, but the strict language requirements make it difficult to get good performance. Java methods can be called directly from Matlab, without the complications of the MEX interface.  More information .  You don't need to use Java in this course, but it's an alternative to using C.     Math Computer Consultant  There is a volunteer    Math Computer Consultant (email: mconsult@cims.nyu.edu).  Please contact the consultant if you have trouble with the Courant computer facilities or questions about the software we are using. The consultant is there to help, but cannot debug programs for you.    Class Mailing List  Important: you must join the    class mailing list . There are two steps to joining the list; the first is to follow the instructions on the web page (including picking  a password), and the second is to REPLY TO the confirmation message sent to you by the system. This list will be used for important announcements. You can also send questions or comments to this list yourself (contact me if you have questions about when this is appropriate). If you do not want to use an NYU email address, be sure to notify me in person or by email from an NYU address about your preferred address, so I can add it to my spam filter.     Sun Account  If you don't have a Sun workstation account, please request one, even if you plan to do most of the homework on your home computer. You will need it later. Request this account from petagna@cs if you are registered in G22.2420  and from the math department if you are registered in G63.G22.2420.     SIAM  As an NYU graduate student you have the opportunity to join   SIAM for free. SIAM is the main professional organization for applied and computational math, and offers a number of  benefits to members. I've been a member since I was a graduate student, and have benefitted in many ways from my association with SIAM.     Don't Hesitate to Ask for Help  If you have questions, send me email, give me a call, or drop by my office. Don't wait until it's too late!"}]},
{"detail": [{"content": "Numerical Methods II, MATH-GA 2020.001 and CSCI-GA 2421.001, home page                  Numerical Methods II            MATH-GA 2020.001 and CSCI-GA 2421.001     Courant Institute of Mathematical Sciences,     New York University     Spring Semester, 2012     Lectures: Thursday, 7:10 to 9 pm, Room 312, Warren Weaver Hall                  Instructor     Jonathan Goodman     goodman@cims.nyu.edu     212-998-3326     room 529 Warren Weaver Hall     office hours: 4 to 6 pm Tuesdays        or by appointment             Teaching Assistants     tba                                 Course home page      Details and Weekly schedule      Resources      Assignments              Course description      This is the second semester of Numerical Methods.     We focus on computational methods related to differential equations.     Solution of ordinary differential equations discussed in some detail, including     linear multistep and Runge Kutta methods, stability and barrier theorems, and      methods for stiff problems.     Introduction to solution of certain partial differential equations such as the     Poisson problem and the heat equation.     A very brief introduction to finite element methods.     Iterative methods for solving large systems of equations, including conjugate gradients,     gmres and the role of pre-conditioners.     Discrete Fourier analysis and applications to stability analysis, spectral methods,     and fast solvers.               There will be a regular coding and computational experiments along with the more     theoretical material.     We will emphasize basic principles of scientific software such as modularity, unit     testing, performance, robustness, and convergence analysis.     We will discuss use of software tools such as visualization and specialized computing      packages.         Prerequisites      Mathematical prerequisies include basic analysis, linear algebra and differential equations.     Students also should be able to program in a high level language such as C, C++, FORTRAN, or     Java. Students who only have worked in a scripting language (Matlab Python, R etc.)     should start learning C++ before the class starts or struggle in the first weeks."}, {"content": "Numerical Methods I    Numerical Methods I    G22.2420, G63.2010  Fall 2004, Mondays 5-7 p.m., WWH Room 101      Note: the class will start at 5:10 p.m. on the first class meeting (Sept 13) and at 5:00 p.m. subsequent weeks.    Instructor: Michael L. Overton      Coordinates     Office: WWH 529   Telephone: 998-3121   Office Hours: Drop by any time except just before class, or send email or call for appointment  Email: information on my address and spam filtering.      Should you take this course?  The course lectures take place only once a week, and this means they will move fast. The lectures will be quite mathematical at times, but we will also use the computer a lot in class to illustrate the concepts. The course is mostly about numerical linear algebra, a surprisingly rich subject that lies at the heart of modern scientific computing, but we will also cover other  classical subjects of numerical analysis such as interpolation and quadrature.  (ODE's and PDE's are covered in Numerical Methods II.) Hopefully, if you like math and computers, you will like this class. On the other hand, if your math background is weak, or you have no experience with computing, you are likely to find it very difficult. Don't hesitate to discuss these issues with me, after class or in my office.    Prerequisites  A solid knowledge of undergraduate linear algebra, and experience with  writing computer programs (in C or other language). Prior knowledge of Matlab is not required, but you will be expected to learn it as the course progresses.    Requirements  Regular homework assignments, including programming assignments, primarily using Matlab, but also occasionally C  (alternatively, Fortran or Java).  It is important that you do the homework yourself, but when you get stuck, I encourage you to consult with other students, or the math computer  consultant, or me, to get help when necessary. However, when you get help, it's important to acknowledge it in writing. Passing off other people's  work as your own is called plagiarism and is not acceptable.    Homework   Homework may be given to me in class or in my office, or left under my office door.  Please do not leave homework in my lobby mailbox or send it by email.  Please staple all pages together. Late homework will be penalized 20%.  Homework will not be accepted more than one week late, except in special circumstances.    Homework 1, assigned Sept 13, due Sept 20   Homework 2, assigned Sept 20, due Sept 27   Homework 3, assigned Sept 27, due Oct 4   Homework 4, assigned Oct 4, due Oct 14   Homework 5, assigned Oct 11, due Oct 18   Homework 6, assigned Oct 18, due Oct 25   Homework 7, assigned Oct 25, due Nov 1   Homework 8, assigned Nov 1, due Nov 8   Homework 9, assigned Nov 8, due Nov 15   Homework 10, assigned Nov 15, due Nov 22   Homework 11, assigned Nov 22, due Dec 6   Homework 12, assigned Dec 6, due Dec 13        Matlab programs used in class    Tentative Lecture Schedule     (Sept 13) The Singular Value Decomposition; IEEE Floating Point Representation  (Sept 20) IEEE Arithmetic, including Inf, NaN; Low Rank Approx property of SVD and Image Compression  (Sept 27) The QR factorization, Gram-Schmidt, Orthogonal Polynomials, Modified Gram-Schmidt  (Oct 4) Householder Orthogonalization; calling C programs from Matlab via MEX  (Oct 11) Least-Squares via QR, Normal Equations, SVD. Polynomial interpolation and Approximation  (Oct 18) Conditioning   (Oct 25) Stability   (Nov 1) Gauss Elimination and LU Factorization  (Nov 8) Cholesky Factorization and the Eigenvalue Problem  (Nov 15) Householder reduction to Hessenberg form, and Power, Inverse Power, Block Power Methods for Eigenvalues  (Nov 22) QR Method for Eigenvalues  (Nov 29) Arnoldi Iteration for Eigenvalues  (Dec 6) GMRES, Lanczos and Gauss Quadrature  (Dec 13) Conjugate Gradients and Chebyshev Polynomials      ORAL FINAL EXAM: 25 minutes in my office.  The emphasis will be on what you did for the homework. You pick one of the following topics and I pick one, and we will talk about what you learned about it. You do not have to memorize complicated details, but you should be able to explain the main ideas that we talked about in class and that you explored in the homework.    SVD, QR factorization and Least Squares (Text Lectures 4-11, not 18-19)  Conditioning and Stability (Text Lectures 12-17, not 18-19, plus my book  Chapters 12-13)  Systems of Equations (Text Lectures 20-23)  Eigenvalues (Text Lectures 24-29, not 30-31), but generalized to the  general nonsymmetric case, as covered in class  Iterative Methods (Text Lectures 32-38, not 39-40)     Official Syllabus     Official Syllabus for Numerical Methods I (this course)   Official Syllabus for Numerical Methods II (spring semester)       Books      Numerical Linear Algebra, by Trefethen and Bau (primary text)  A wonderful text at just the right level; we will follow it quite closely.  Typos in the Text    Numerical Computing with IEEE Floating Point Arithmetic, by the instructor   (supplementary text)  Brief, easy to read and only $20, but covers a lot of important basic matters; we will cover some parts in class, but you will be expected to read the rest on your own.   Applied Numerical Linear Algebra, by Demmel (not required, but may be helpful)  More detailed coverage of various topics, especially computational issues such as the BLAS, and algorithms for the nonsymmeric eigenvalue problem.     Software      MATLAB  We will use Matlab for most of the computing that we do in this course. Matlab is by far the best environment for small-scale numerical computing. Although by itself it is not the most efficient choice for large-scale computing, it can be used to call compiled C and Fortran routines and experiment with the results. Matlab is a product of  The MathWorks . You can order your own copy of   Matlab for $99  or you can use Matlab on the Courant Sparcstation network (or dial in from home). For Matlab documentation, type \"helpdesk\" at the Matlab prompt. To get started, try out  A Free Matlab Online Tutorial or   Another Tuturial  or look for others by a web search. You may want to look at a very outdated but still useful   Introductory Matlab Primer (3rd and last edition, postscript file) . There are many books on Matlab; I recommend  Matlab Guide, by  Higham and Higham , but you will find many other resources on the web, including the latest information on Matlab 7.0.    C  The lingua franca of computing. You will learn how to call the BLAS from C and how to call  C routines from Matlab using the MEX interface.  Even if you are not a C programmer,  this is a good time to learn a little C.   More information .     Fortran  Fortran is traditionally the language of numerical computing and is no longer the dinosaur it used to be. It's still widely used in scientific applications. Fortran 90, 95 and 2003  support vector operations and dynamic allocation and look a lot like Matlab. But the updated versions of Fortran 77 are fine for most purposes, especially when using the BLAS. Fortran routines can be called from Matlab using the MEX interface. More information .  You don't need to use Fortran in this course, but it's an alternative to using C.    Java  Java is becoming a popular choice for numerical computing, but the strict language requirements make it difficult to get good performance. Java methods can be called directly from Matlab, without the complications of the MEX interface.  More information .  You don't need to use Java in this course, but it's an alternative to using C.     Math Computer Consultant  There is a volunteer    Math Computer Consultant (email: mconsult@cims.nyu.edu).  Please contact the consultant if you have trouble with the Courant computer facilities or questions about the software we are using. The consultant is there to help, but cannot debug programs for you.    Class Mailing List  Important: you must join the    class mailing list . There are two steps to joining the list; the first is to follow the instructions on the web page (including picking  a password), and the second is to REPLY TO the confirmation message sent to you by the system. This list will be used for important announcements. You can also send questions or comments to this list yourself (contact me if you have questions about when this is appropriate). If you do not want to use an NYU email address, be sure to notify me in person or by email from an NYU address about your preferred address, so I can add it to my spam filter.     Sun Account  If you don't have a Sun workstation account, please request one, even if you plan to do most of the homework on your home computer. You will need it later. Request this account from petagna@cs if you are registered in G22.2420  and from the math department if you are registered in G63.G22.2420.     SIAM  As an NYU graduate student you have the opportunity to join   SIAM for free. SIAM is the main professional organization for applied and computational math, and offers a number of  benefits to members. I've been a member since I was a graduate student, and have benefitted in many ways from my association with SIAM.     Don't Hesitate to Ask for Help  If you have questions, send me email, give me a call, or drop by my office. Don't wait until it's too late!"}, {"content": "Numerical Methods I graduate course, Fall 2010             G63.2010.001 (math) / G22.2420-001 (computer science)   Numerical Methods I       Warren Weaver Hall, room 101, Thursdays, 5:10 - 7 pm   Courant Institute of Mathematical Sciences   New York University  Fall Semester, 2010       Home     Syllabus     Lectures     Assignments           Instructor   Aleksandar Donev , 909 Warren Weaver Hall  E-mail: donev@courant.nyu.edu  ; Phone: (212) 992-7315  Office hours: 3 to 5 pm Tuesdays or by appointment   Grader  Doris Dobi, dobi@cims.nyu.edu   Course description   This course is part of a two-course series meant to introduce Ph.D. students in mathematics to the fundamentals of numerical mathematics (but any Ph.D. student seriously interested in applied mathematics should take it). It will be more technical (theoretical) than the Scientific Computing course, which is meant for masters students and covers similar materal as this two-course series but in less detail.     3 points per term     Topics covered include:       floating point arithmetic   conditioning and stability   direct methods for systems of linear equations, including LU, Cholesky, QR and SVD factorizations (dense and sparse)   matrix eigenvalue problems   interpolation by polynomials and cubic splines   Numerical quadrature   Nonlinear systems of equations and unconstrained optimization   Fourier and wavelet transforms   Monte Carlo methods.    This course will not cover differential equations, which form the core of the second part of this series, Numerical Methods II.     For a tentative  schedule download the syllabus .           Main Textbook (required)     Numerical Mathematics by Alfio Quarteroni, Riccardo Sacco &amp; Fausto Saleri, Springer, Second Edition (ISBN-10: 3642071015, ISBN-13: 978-3642071010), available in electronic form through the NYU library and on 2h reserve in the Courant Library.    Note that the online version available via the NYU library is the first edition while the print copy on reserve is the second edition. For the purposes of this course the difference is not important, so use either edition , especially if cost is a concern and you do not wish to purchase a paper copy. Unfortunately the electronic version is only available for online viewing and is not downloadable.    The Matlab scripts for the examples in the second edition of the book can be downloaded as a tarred gzip file here (use \"tar xvf &lt;filename &gt;\" in Linux to extract the files). There is also an errata for the book on the book website , and the programs for the first edition are also available.     Optional Textbook   Depending on your background, the technical exposition or Matlab source codes in the textbook may be difficult to follow at first. The text is however comprehensive and reading it will be useful practice. The main textbook does not offer an introduction to Matlab, which may be useful to some students. As a companion textbook that covers similar material but at a more basic and applied level, with lots of Matlab examples, is the optional textbook:    Scientific Computing with MATLAB and Octave , Alfio M. Quarteroni &amp; Fausto Saleri, Springer, whose  third edition just appeared in 2010 but older editions will do just as well. The second edition is available in PDF form through the library subscription to springerlink, so you don't even have to buy the paper copy. A paper copy is available on 2h reserve in the Courant Library.    The Matlab scripts for the examples in the second edition of the book can be downloaded as a zip archive (use \"unzip &lt; filename &gt;\" in Linux to extract the files). Erratas as well as the files for the recent third edition of the book can be found on the book website .     Additional Readings     There are many free online materials that can be consulted as additional reading, depending on your background and interests. Here are some suggestions (more may be added as the course progresses) that you have special access to through the NYU/Courant library:       Numerical Computing with MATLAB , by Cleve Moler, available for free in PDF form at the MATLAB site .   My colleagues Jonathan Goodman and David Bindel have a draft of an upcoming book Principles of Scientific Computing , to be found here as one PDF or as individual chapters .     An Introduction to Programming and Numerical Methods in MATLAB , Stephen R. Otto &amp; James P. Denier, Springer, 2005, available in PDF format through the library. This book provides an elementary introduction to Matlab with less focus on actual scientific computing.      Numerical Linear Algebra , David Bau III &amp; Lloyd N. Trefethen, SIAM, 2000; This is a more advanced book that focuses on numerical linear algebra. It is available on 24h reserve at the Courant Library.   Numerical Computing with IEEE Floating Point Arithmetic , by Michael L. Overton, SIAM, 2004.   The Cambridge Engineering guide to MATLAB has lots of useful information.       Prerequisites   A good background in linear algebra, and experience with writing computer programs (in Matlab, Python, Fortran, C, C++, or other language). Prior knowledge of Matlab is not required, but it will be used as the main language for the course. If you have experience with compiled languages (Fortran, C, C++), Matlab will be easy to learn and use, and comes with a great help facility.     You will not be required to learn and use a compiled language , especially if you are relatively new to computing, but I will strongly encourage you to and assist you in the learning process (I am a Fortran expert but will do my best to help you with other languages as well).    Computing   While the lectures and textbook are meant to be focused on theoretical numerical analysis, computing on your own will form an essential part of the learning process and your own applied mathematics training. I realize that some of you may be new to Linux, Matlab, compiled languages, LaTex, and other tools commonly used by computational scientists. Learning new tools, as tailored to your own background and interests, is an important component of this course!    The Courant Institute has computer labs with Linux workstations that have Matlab (matlab), Maple (xmaple), Mathematica (mathematica), the GNU (gcc,g++,gfortran), Intel and Pathscale C/C++/Fortran compiler suites, and other useful software installed.    You can purchase student edition Matlab from the NYU computer store if you want to use it on your own personal computer. If cost is a problem,  Octave (octave) provides a free alternative to Matlab that you can download for Linux, Windows or Mac OS X.    You are encouraged to submit reports as PDFs produced using LaTex (latex), as a good practice in learning how to use mathematical typesetting software for future papers and thesis reports. I recommend trying out the LyX word processor as a front-end GUI to LaTex, especially if you are new to LaTex.       Assignments and grading   There will be regular assignments and a final project. The assignments will be mostly computational but some will be theoretical problems and I will do my best to give you some freedom to modify the assignments depending on their interests and background.     The final project will consist of your own independent research on a topic that is related to the class material and that you choose in discussion with the instructor. A final report will be due at the end of finals week. The final \"exam\" will consist of presentations of your final project to the class, and will be scheduled in consultation with all of the participants (the official scheduled date is 5pm the day before Christmas break, December 23rd, which may be inconvenient for some).     Communication   There is a message board on the course Blackboard page that will be used for messages related to the assignments and any scheduling changes. If you register for the class, you automatically have access to the message board. Blackboard will also be used to post grades (for privacy) and you can use it to submit homeworks (or email me). I will post assignments on Blackboard as well but it is recommended that you use this website instead since I can post links and extra materials.     You should feel free to email the instructor with any questions, concerns, or special requests such as deadline extensions, meeting outside of office hours, etc."}]}]