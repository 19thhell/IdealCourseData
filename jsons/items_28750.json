[{"detail": [{"content": "Foundations of Machine Learning -- CSCI-GA.2566-001             Fall 2014    Foundations of Machine Learning      Course#: CSCI-GA.2566-001    Instructor: Mehryar Mohri   Graders/TAs:   Vitaly Kuznetsov ,  Andres Munoz Medina ,  Scott Yang .     Mailing List         Course Description       This course introduces the fundamental concepts and methods of machine learning, including the description and analysis of several modern algorithms, their theoretical basis, and the illustration of their applications. Many of the algorithms described have been successfully used in text and speech processing, bioinformatics, and other areas in real-world products and services. The main topics covered are:      Probability tools, concentration inequalities  PAC model  Rademacher complexity, growth function, VC-dimension  Perceptron, Winnow  Support vector machines (SVMs)  Kernel methods  Decision trees  Boosting  Density estimation, maximum entropy models  Logistic regression  Regression problems and algorithms  Ranking problems and algorithms  Halving algorithm, weighted majority algorithm, mistake bounds  Learning automata and transducers  Reinforcement learning, Markov decision processes (MDPs)     It is strongly recommended to those who can to also attend the  Machine Learning Seminar . Those interested in further pursuing the study of machine learning could also attend the Advanced  Machine Learning class.        Location and Time      Warren Weaver Hall Room 109,  251 Mercer Street.  Mondays 5:10 PM - 7:00 PM.        Prerequisite     Familiarity with basics in linear algebra, probability, and analysis of algorithms.       Projects and Assignments     There will be 3 to 4 assignments and a project. The final grade is essentially the average of the assignment and project grades. The standard high level of integrity  is expected from all students, as with all CS courses.       Lectures        Lecture 00 : Introduction to convex optimization.   Lecture 01 : Introduction to machine learning, basic definitions, probability tools.   Lecture 02 : PAC model, guarantees for learning with finite hypothesis sets.   Lecture 03 : Rademacher complexity, growth function, VC-dimension, learning bounds for infinite hypothesis sets.   Lecture 04 : Support vector machines (SVMs), margin bounds.   Lecture 05 : Kernel methods.   Lecture 06 : Boosting.   Lecture 07 : Density estimation, Maxent models, multinomial logistic regression.   Lecture 08 : On-line learning.   Lecture 09 : Ranking.   Lecture 10 : Multi-class classification.   Lecture 11 : Regression.   Lecture 12 : Reinforcement learning.   Lecture 13: Learning languages.            Textbook    The following is the required textbook for the class. It covers all the material presented (and a lot more):      Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar.  Foundations of Machine Learning . MIT Press, 2012.          Technical Papers    An extensive list of recommended papers for further reading is provided in the lecture slides.        Homework         Homework 1 [ solution ]  Homework 2 [ solution ]  Homework 3 [ solution ]  Projects           Previous years         2005   2006   2007   2008   2009   2010   2011   2012   2013   2014 (Spring)"}]},
{"detail": [{"content": "Foundations of Machine Learning -- CSCI-GA.2566-001             Fall 2014    Foundations of Machine Learning      Course#: CSCI-GA.2566-001    Instructor: Mehryar Mohri   Graders/TAs:   Vitaly Kuznetsov ,  Andres Munoz Medina ,  Scott Yang .     Mailing List         Course Description       This course introduces the fundamental concepts and methods of machine learning, including the description and analysis of several modern algorithms, their theoretical basis, and the illustration of their applications. Many of the algorithms described have been successfully used in text and speech processing, bioinformatics, and other areas in real-world products and services. The main topics covered are:      Probability tools, concentration inequalities  PAC model  Rademacher complexity, growth function, VC-dimension  Perceptron, Winnow  Support vector machines (SVMs)  Kernel methods  Decision trees  Boosting  Density estimation, maximum entropy models  Logistic regression  Regression problems and algorithms  Ranking problems and algorithms  Halving algorithm, weighted majority algorithm, mistake bounds  Learning automata and transducers  Reinforcement learning, Markov decision processes (MDPs)     It is strongly recommended to those who can to also attend the  Machine Learning Seminar . Those interested in further pursuing the study of machine learning could also attend the Advanced  Machine Learning class.        Location and Time      Warren Weaver Hall Room 109,  251 Mercer Street.  Mondays 5:10 PM - 7:00 PM.        Prerequisite     Familiarity with basics in linear algebra, probability, and analysis of algorithms.       Projects and Assignments     There will be 3 to 4 assignments and a project. The final grade is essentially the average of the assignment and project grades. The standard high level of integrity  is expected from all students, as with all CS courses.       Lectures        Lecture 00 : Introduction to convex optimization.   Lecture 01 : Introduction to machine learning, basic definitions, probability tools.   Lecture 02 : PAC model, guarantees for learning with finite hypothesis sets.   Lecture 03 : Rademacher complexity, growth function, VC-dimension, learning bounds for infinite hypothesis sets.   Lecture 04 : Support vector machines (SVMs), margin bounds.   Lecture 05 : Kernel methods.   Lecture 06 : Boosting.   Lecture 07 : Density estimation, Maxent models, multinomial logistic regression.   Lecture 08 : On-line learning.   Lecture 09 : Ranking.   Lecture 10 : Multi-class classification.   Lecture 11 : Regression.   Lecture 12 : Reinforcement learning.   Lecture 13: Learning languages.            Textbook    The following is the required textbook for the class. It covers all the material presented (and a lot more):      Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar.  Foundations of Machine Learning . MIT Press, 2012.          Technical Papers    An extensive list of recommended papers for further reading is provided in the lecture slides.        Homework         Homework 1 [ solution ]  Homework 2 [ solution ]  Homework 3 [ solution ]  Projects           Previous years         2005   2006   2007   2008   2009   2010   2011   2012   2013   2014 (Spring)"}, {"content": "NYU &gt; Courant Institute &gt; Compute Servers                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Compute Servers                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      Courant has a number of systems that can be used for CPU intensive jobs and programming assignments for courses. These machines are restricted to logins from within the Courant network, so if you are coming from outside of CIMS, you will have to first login to one of the remote access servers , then use ssh to get to them .    Please do not use access.cims.nyu.edu for cpu-intensive jobs or course work .    General Compute Nodes (See current status)    These machines have been allocated for generic number smashing and medium memory consumption :             Hostname    CPU    Memory    SSH Fingerprint          mauler.cims.nyu.edu    4 Core 2.6GHz AMD Opteron    8GB (7GB/user limit)    Verify Host Identity          brawler.cims.nyu.edu    4 Core 2.6GHz AMD Opteron    8GB (7GB/user limit)    Verify Host Identity                   These energy efficient cpu powerplants are for general compution with small memory footprints :             Hostname    CPU    Memory    SSH Fingerprint          energon1.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon2.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon3.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon4.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity                     These Sun Solaris systems should be used for class programming assignments . For mysql database related usage, see the creating a MySQL database instructions :             Hostname    CPU    Memory    SSH Fingerprint          courses1.cs.nyu.edu    Dual UltraSparc IIIi    2GB    Verify Host Identity                The following Linux systems should be used only for CPU and memory intensive processes :             Hostname    CPU    Memory    SSH Fingerprint          crunchy1.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity          crunchy3.cims.nyu.edu    4 8-Core 2.4GHz AMD Opteron 6136    128GB    Verify Host Identity          crunchy4.cims.nyu.edu    4 8-Core 2.4GHz AMD Opteron 6136    128GB    Verify Host Identity          crunchy5.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity          crunchy6.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity                The following Linux systems should be used for generic number crunching :             Hostname    CPU    Memory    SSH Fingerprint          crackle1.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle2.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle3.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle4.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle5.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle6.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB                   The following Solaris systems should be used only for CPU and memory intensive processes :             Hostname    CPU    Memory    SSH Fingerprint          crunchy12.cims.nyu.edu    4x900MHz UltraSparcIII    16GB    Verify Host Identity             Programs that use the Message Passing Interface (MPI) library can be compiled and run on the Crunchy HPC Cluster .       Specialty Nodes    Cluster Computing (See current status)    The EULER cluster is a small Linux cluster for submitting batch jobs and gridMathematica processes.       Management Node: euler01.cims.nyu.edu       Web Service Computing    The following machines are good for both internal and external web based development and deployment :             Hostname    CPU    Memory    SSH Fingerprint          linserv1.cims.nyu.edu    2 Core 1GHz AMD Opteron    2GB    Verify Host Identity                We have some general instructions for setting up an Apache Webserver, Apache Tomcat, MySQL, and other services.       GPU Computing - NVIDIA/CUDA (See current status)    A Tesla S1070 system that can run CUDA programs is available for parallel processing . This Tesla unit has 4 Tesla S10 GPUs. Each GPU has 240 streaming cores and 4GB of memory for a total of 960 processor cores and 16GB of memory. One Tesla unit is connected to each of energon3 and energon4. To use these systems please see the instructions . Host nodes are:             Hostname    CPU    Memory    SSH Fingerprint          cuda3.cims.nyu.edu    16 CPU cores, 2 Tesla S10 GPUs (480 streaming cores total)    16GB System Memory, 4GB Video Memory     Verify Host Identity          cuda4.cims.nyu.edu    16 CPU cores, 2 Tesla S10 GPUs (480 streaming cores total)    16GB System Memory, 4GB Video Memory     Verify Host Identity                GPU Computing - AMD/OpenCL (See current status)    A pair of OpenCL systems that supports AMD's Accellerated Parallel Processing (AMD APP) . Each OpenCL machines has 2 FirePro V7800 GPUs. Each GPU has 1440 streaming cores and 2GB of video memory. To use these systems please see the instructions . Host nodes are:                Hostname    CPU    Memory    SSH Fingerprint          opencl1.cims.nyu.edu    4 CPU cores, 2 AMD FirePro V7800s (2880 streaming cores)    6GB System Memory, 4GB Video Memory    Verify Host Identity          opencl2.cims.nyu.edu (out of service until June 2015)    4 CPU cores, 2 AMD FirePro V7800s (2880 streaming cores)    6GB System Memory, 4GB Video Memory    Verify Host Identity                   Virtual Architecture    Courant als provides a number of dedicated virtual nodes for some specialty computing needs. The virtual architecture is currently comprised of:       Self-Managed Compute Nodes (see virtual nodes for more information)    Public Cloud Computing (see virtual nodes for more information)    Private Cloud Computing (see virtual nodes for more information)       You can request your own private computing resources by submitting an online request .       Legacy Computing    We currently provide some legacy computing for use with software that will only run on legcay systems :             Hostname    Legacy Support    CPU    Memory    SSH Fingerprint          stratus-1-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-2-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-3-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-4-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity                Other Machines    There are also systems associated with research groups. They are restricted to users who have been approved by a faculty member associated with the relevant research group.    One such group of systems belongs to the Center for Atmosphere Ocean Science (CAOS) .         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}]},
{"detail": [{"content": "Foundations of Machine Learning -- CSCI-GA.2566-001             Fall 2014    Foundations of Machine Learning      Course#: CSCI-GA.2566-001    Instructor: Mehryar Mohri   Graders/TAs:   Vitaly Kuznetsov ,  Andres Munoz Medina ,  Scott Yang .     Mailing List         Course Description       This course introduces the fundamental concepts and methods of machine learning, including the description and analysis of several modern algorithms, their theoretical basis, and the illustration of their applications. Many of the algorithms described have been successfully used in text and speech processing, bioinformatics, and other areas in real-world products and services. The main topics covered are:      Probability tools, concentration inequalities  PAC model  Rademacher complexity, growth function, VC-dimension  Perceptron, Winnow  Support vector machines (SVMs)  Kernel methods  Decision trees  Boosting  Density estimation, maximum entropy models  Logistic regression  Regression problems and algorithms  Ranking problems and algorithms  Halving algorithm, weighted majority algorithm, mistake bounds  Learning automata and transducers  Reinforcement learning, Markov decision processes (MDPs)     It is strongly recommended to those who can to also attend the  Machine Learning Seminar . Those interested in further pursuing the study of machine learning could also attend the Advanced  Machine Learning class.        Location and Time      Warren Weaver Hall Room 109,  251 Mercer Street.  Mondays 5:10 PM - 7:00 PM.        Prerequisite     Familiarity with basics in linear algebra, probability, and analysis of algorithms.       Projects and Assignments     There will be 3 to 4 assignments and a project. The final grade is essentially the average of the assignment and project grades. The standard high level of integrity  is expected from all students, as with all CS courses.       Lectures        Lecture 00 : Introduction to convex optimization.   Lecture 01 : Introduction to machine learning, basic definitions, probability tools.   Lecture 02 : PAC model, guarantees for learning with finite hypothesis sets.   Lecture 03 : Rademacher complexity, growth function, VC-dimension, learning bounds for infinite hypothesis sets.   Lecture 04 : Support vector machines (SVMs), margin bounds.   Lecture 05 : Kernel methods.   Lecture 06 : Boosting.   Lecture 07 : Density estimation, Maxent models, multinomial logistic regression.   Lecture 08 : On-line learning.   Lecture 09 : Ranking.   Lecture 10 : Multi-class classification.   Lecture 11 : Regression.   Lecture 12 : Reinforcement learning.   Lecture 13: Learning languages.            Textbook    The following is the required textbook for the class. It covers all the material presented (and a lot more):      Mehryar Mohri, Afshin Rostamizadeh, and Ameet Talwalkar.  Foundations of Machine Learning . MIT Press, 2012.          Technical Papers    An extensive list of recommended papers for further reading is provided in the lecture slides.        Homework         Homework 1 [ solution ]  Homework 2 [ solution ]  Homework 3 [ solution ]  Projects           Previous years         2005   2006   2007   2008   2009   2010   2011   2012   2013   2014 (Spring)"}, {"content": "NYU &gt; Courant Institute &gt; Compute Servers                                                                                                                               New York University    Faculty of Arts and Science    College of Arts and Science    Graduate School of Arts and Science                    CIMS Login                                         go                   Institute     Home   Educational Programs   People   Publications   Seminars and Events   Alumni   Mathematics   Computer Science   Atmosphere Ocean Science   Research Centers       Resources     Academic Calendar   Computing Resources   Contact Info   Courant Library   Getting to Courant       In House     CIMS Committees   CIMS Directory    Classroom Calendar   Guide to Services              Compute Servers                            Announcements          General          Critical          System Maintenance          User Services          Computer Accounts          Network Access          Mail          Web Hosting          Databases          Version Control          Data Backups          Resources          Desktop Computing          Computer Labs          Compute Servers          Printing          Scanners, Copiers, Burning and Sending Faxes          Classroom Facilities          Frequently Asked Questions          Platforms          Linux          Solaris          Windows          Macs          Software          Overview          Linux          Solaris          Windows          Manual Pages             Edit Body      Courant has a number of systems that can be used for CPU intensive jobs and programming assignments for courses. These machines are restricted to logins from within the Courant network, so if you are coming from outside of CIMS, you will have to first login to one of the remote access servers , then use ssh to get to them .    Please do not use access.cims.nyu.edu for cpu-intensive jobs or course work .    General Compute Nodes (See current status)    These machines have been allocated for generic number smashing and medium memory consumption :             Hostname    CPU    Memory    SSH Fingerprint          mauler.cims.nyu.edu    4 Core 2.6GHz AMD Opteron    8GB (7GB/user limit)    Verify Host Identity          brawler.cims.nyu.edu    4 Core 2.6GHz AMD Opteron    8GB (7GB/user limit)    Verify Host Identity                   These energy efficient cpu powerplants are for general compution with small memory footprints :             Hostname    CPU    Memory    SSH Fingerprint          energon1.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon2.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon3.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity          energon4.cims.nyu.edu    8 Core 1.8GHz Intel Xeon    8GB (4GB/user limit)    Verify Host Identity                     These Sun Solaris systems should be used for class programming assignments . For mysql database related usage, see the creating a MySQL database instructions :             Hostname    CPU    Memory    SSH Fingerprint          courses1.cs.nyu.edu    Dual UltraSparc IIIi    2GB    Verify Host Identity                The following Linux systems should be used only for CPU and memory intensive processes :             Hostname    CPU    Memory    SSH Fingerprint          crunchy1.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity          crunchy3.cims.nyu.edu    4 8-Core 2.4GHz AMD Opteron 6136    128GB    Verify Host Identity          crunchy4.cims.nyu.edu    4 8-Core 2.4GHz AMD Opteron 6136    128GB    Verify Host Identity          crunchy5.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity          crunchy6.cims.nyu.edu    4 16-Core 2.1GHz AMD Opteron 6272    256GB    Verify Host Identity                The following Linux systems should be used for generic number crunching :             Hostname    CPU    Memory    SSH Fingerprint          crackle1.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle2.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle3.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle4.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle5.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB             crackle6.cims.nyu.edu    2 4-core 2.53GHz Intel Xeon E5630    16GB                   The following Solaris systems should be used only for CPU and memory intensive processes :             Hostname    CPU    Memory    SSH Fingerprint          crunchy12.cims.nyu.edu    4x900MHz UltraSparcIII    16GB    Verify Host Identity             Programs that use the Message Passing Interface (MPI) library can be compiled and run on the Crunchy HPC Cluster .       Specialty Nodes    Cluster Computing (See current status)    The EULER cluster is a small Linux cluster for submitting batch jobs and gridMathematica processes.       Management Node: euler01.cims.nyu.edu       Web Service Computing    The following machines are good for both internal and external web based development and deployment :             Hostname    CPU    Memory    SSH Fingerprint          linserv1.cims.nyu.edu    2 Core 1GHz AMD Opteron    2GB    Verify Host Identity                We have some general instructions for setting up an Apache Webserver, Apache Tomcat, MySQL, and other services.       GPU Computing - NVIDIA/CUDA (See current status)    A Tesla S1070 system that can run CUDA programs is available for parallel processing . This Tesla unit has 4 Tesla S10 GPUs. Each GPU has 240 streaming cores and 4GB of memory for a total of 960 processor cores and 16GB of memory. One Tesla unit is connected to each of energon3 and energon4. To use these systems please see the instructions . Host nodes are:             Hostname    CPU    Memory    SSH Fingerprint          cuda3.cims.nyu.edu    16 CPU cores, 2 Tesla S10 GPUs (480 streaming cores total)    16GB System Memory, 4GB Video Memory     Verify Host Identity          cuda4.cims.nyu.edu    16 CPU cores, 2 Tesla S10 GPUs (480 streaming cores total)    16GB System Memory, 4GB Video Memory     Verify Host Identity                GPU Computing - AMD/OpenCL (See current status)    A pair of OpenCL systems that supports AMD's Accellerated Parallel Processing (AMD APP) . Each OpenCL machines has 2 FirePro V7800 GPUs. Each GPU has 1440 streaming cores and 2GB of video memory. To use these systems please see the instructions . Host nodes are:                Hostname    CPU    Memory    SSH Fingerprint          opencl1.cims.nyu.edu    4 CPU cores, 2 AMD FirePro V7800s (2880 streaming cores)    6GB System Memory, 4GB Video Memory    Verify Host Identity          opencl2.cims.nyu.edu (out of service until June 2015)    4 CPU cores, 2 AMD FirePro V7800s (2880 streaming cores)    6GB System Memory, 4GB Video Memory    Verify Host Identity                   Virtual Architecture    Courant als provides a number of dedicated virtual nodes for some specialty computing needs. The virtual architecture is currently comprised of:       Self-Managed Compute Nodes (see virtual nodes for more information)    Public Cloud Computing (see virtual nodes for more information)    Private Cloud Computing (see virtual nodes for more information)       You can request your own private computing resources by submitting an online request .       Legacy Computing    We currently provide some legacy computing for use with software that will only run on legcay systems :             Hostname    Legacy Support    CPU    Memory    SSH Fingerprint          stratus-1-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-2-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-3-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity          stratus-4-11.cims.nyu.edu    RHEL5    6 Core    12GB    Verify Host Identity                Other Machines    There are also systems associated with research groups. They are restricted to users who have been approved by a faculty member associated with the relevant research group.    One such group of systems belongs to the Center for Atmosphere Ocean Science (CAOS) .         Edit All                  contact: webmaster at cims.nyu.edu   &#169; New York University"}, {"content": "NYU Computer Science Department &gt; Machine Learning and Knowledge Representation                                                                                                                                 Search                                                  go                         Location          Contacts      Directions      NYC Information            Admissions          Undergraduate Admissions      Graduate Admissions           People           Faculty        Researchers/Visitors      Administration/Staff      Students: PhD / MS      Alumni / In Memoriam             Research           Research Areas      Tech Reports      Theses: PhD / MS        Faculty Recognition      Student Recognition           Education           Undergraduate Program      Graduate Program : PhD / MS        Courses      Office Hours           News / Events           Colloquia        Calendar: Grad / Undergrad           Job Openings           Faculty Positions             Links           Libraries      Student Organizations      CIMS Computing                                                                                                                                                                               Machine Learning and Knowledge Representation   Edit Title                Edit Body      Faculty    Ernest Davis  Yann LeCun  Mehryar Mohri  Foster Provost  David Sontag    Machine learning is concerned with developing of mathematical foundations and algorithm design needed for computers to learn, that is, to adapt their responses based on information extracted from data. For example, learning algorithms may allow a robot to navigate an unknown environment, improving its performance as it acquires more and more data, or a voice-controlled system to improve its recognition of a person's speech after analysis of a sufficient number of samples. Machine learning techniques draw on many fundamental areas from statistics to theoretical computer science, and are used in a broad variety applications: robotics, speech analysis, finance, computer games, handwriting recognition to name just a few.    Ernest Davis studies the problem of representing commonsense knowledge: that is, the problem of taking the basic knowledge about the real world that is common to all humans; expressing it in a form that is systematic enough to be used by a computer program; and providing the program with techniques for effectively using that knowledge. The primary focus of his work is on spatial and physical reasoning (for example, a formalization of commonsense physical reasoning must capture our intuition about qualitative object behavior under gravity). Other directions of work include reasoning about knowledge, belief, plans, and goals, and their interaction with physical reasoning. Development of formal representations of this type has many potential applications in robotics, product and process design and automated training.    Yann LeCun 's research interests include the fundamental and practical aspects of machine learning. The main goal of his research is to devise methods through which computers can extract knowledge and automatically acquire \"skills\" from massive datasets or from experience. Application of learning to perception is a central theme of his work: how can we teach machines to detect and recognize everyday objects in images, how to teach robots to navigate and avoid obstacles solely from visual input. LeCun's group works on a number of fundamental techniques (energy-based models, \"deep learning\", relational graphical models, and others) which are applied solve problems in computer vision, robotics, image and signal processing, bioinformatics, medical informatics, and economics. LeCun's group also works with the Center for Neural Science on computational models of biological learning.    Mehryar Mohri's primary research areas are machine learning, theory and algorithms, text and speech processing, and computational biology. This includes in particular the study of the theoretical aspects of machine learning, the design of general and accurate learning algorithms, and their applications to large-scale learning problems such as those found in bioinformatics and language processing.    Foster Provost studies data mining, knowledge systems, and machine learning and their alignment with business problems. He has applied advanced technologies to a variety of business problems, including fraud detection and customer contact management. His research directions include robust modeling in the face of imprecision in the business environment, and profiling/monitoring on-line activity.    David Sontag's research interests include theoretical and practical aspects of machine learning and probabilistic inference, with applications to medicine, natural language processing, and information retrieval. In particular, he studies structured prediction, approximate inference in graphical models, unsupervised learning of latent variable models, and computational trade-offs between learning and inference.    Related Web Pages    Computational and Biological Learning Lab  ML Research Group  Machine Learning Seminar          Edit All                   top | contact webmaster"}]}]