[{"detail": [{"content": "Certificate in Java Programming                                                                                          The NYU School of Professional Studies Website    Faculty    Degrees    Professional Certificates    Upcoming Events        Search Courses     Credit Course     Non-Credit Course          Site    Noncredit Courses    Faculty                                                                       Management and Information Technology                                                                                           About             Director's Message Faculty                   Admissions                 Academics             Graduate Programs Noncredit Offerings                   Career                 Events                 Alumni                                                   Certificate in Java Programming                                            Academics &rsaquo;                Graduate Programs            Noncredit Offerings                 Certificate in Advanced Project Management          Certificate in Advanced Web Development          Certificate in AMP Web Development          Certificate in Android App Development          Certificate in Business Intelligence          Certificate in Business Technology          Certificate in C++ Programming          Certificate in Data Science with R          Certificate in Healthcare Informatics          Certificate in Healthcare Technology          Certificate in iOS App Development          Certificate in Java Programming          Certificate in Microsoft SQL Server Specialist          Certificate in Oracle Application Express          Certificate in Oracle Database 12c Administrator Certified Associate (OCA)          Certificate in Oracle Database 12c Administrator Certified Professional (OCP)          Certificate in Oracle Database 12c Developer Certified Associate (OCA)          Certificate in Oracle Database 12c Developer Certified Professional (OCP)          Certificate in Project Management          Certificate in Ruby on Rails          Certificate in Web Development          Certificate in Web Development-Full Stack                                      Ready to Proceed?           Register Now        Request Information        Events                                                                Ready to Proceed?        Register for Courses Now                                                                         Don't see what you're looking for?                                                         Declare Your Certificate Candidacy                  Ready to Proceed?          Register Now      Request Information      Attend an Information Session                                                                                                      QUICK LINKS                        About Us          Student Affairs          Visit Us          School-wide Policies          Contact Us                       ATTEND THE SCHOOL                        Graduate Admissions          Undergraduate Admissions          Noncredit Registration          Veteran Resource Center                             ON THE WEB                         On Facebook          On Twitter          On YouTube          Browser Requirements                                                        NYU Homepage   &copy; New York University School of Professional Studies | Privacy Policy"}]},
{"detail": [{"content": "Certificate in Java Programming                                                                                          The NYU School of Professional Studies Website    Faculty    Degrees    Professional Certificates    Upcoming Events        Search Courses     Credit Course     Non-Credit Course          Site    Noncredit Courses    Faculty                                                                       Management and Information Technology                                                                                           About             Director's Message Faculty                   Admissions                 Academics             Graduate Programs Noncredit Offerings                   Career                 Events                 Alumni                                                   Certificate in Java Programming                                            Academics &rsaquo;                Graduate Programs            Noncredit Offerings                 Certificate in Advanced Project Management          Certificate in Advanced Web Development          Certificate in AMP Web Development          Certificate in Android App Development          Certificate in Business Intelligence          Certificate in Business Technology          Certificate in C++ Programming          Certificate in Data Science with R          Certificate in Healthcare Informatics          Certificate in Healthcare Technology          Certificate in iOS App Development          Certificate in Java Programming          Certificate in Microsoft SQL Server Specialist          Certificate in Oracle Application Express          Certificate in Oracle Database 12c Administrator Certified Associate (OCA)          Certificate in Oracle Database 12c Administrator Certified Professional (OCP)          Certificate in Oracle Database 12c Developer Certified Associate (OCA)          Certificate in Oracle Database 12c Developer Certified Professional (OCP)          Certificate in Project Management          Certificate in Ruby on Rails          Certificate in Web Development          Certificate in Web Development-Full Stack                                      Ready to Proceed?           Register Now        Request Information        Events                                                                Ready to Proceed?        Register for Courses Now                                                                         Don't see what you're looking for?                                                         Declare Your Certificate Candidacy                  Ready to Proceed?          Register Now      Request Information      Attend an Information Session                                                                                                      QUICK LINKS                        About Us          Student Affairs          Visit Us          School-wide Policies          Contact Us                       ATTEND THE SCHOOL                        Graduate Admissions          Undergraduate Admissions          Noncredit Registration          Veteran Resource Center                             ON THE WEB                         On Facebook          On Twitter          On YouTube          Browser Requirements                                                        NYU Homepage   &copy; New York University School of Professional Studies | Privacy Policy"}, {"content": "Introduction to Java - Professor: Sam Sultan               Introduction to Java     Course Number - INFO1-CE9238 / ELEC1-DC1007    Friday - 6:00-9:30pm       Announcement(s):            Instructor:   Sam Sultan   [ sam.sultan@nyu.edu ]      [ Featured Professor ]     Class web site:   [ samsultan.com/java ] (or)   [ oit.scps.nyu.edu/~sultans/java ]                +   syllabus     +   books          +   grades policy     +   student listing          +   examples & demos     +   other classes          +   student feedback     +   student evaluation   & comments                Session -   1 &nbsp   2 &nbsp  3 &nbsp  4 &nbsp  5/6 &nbsp  7 &nbsp  8 &nbsp  9 &nbsp   10 &nbsp  Extra:   Swing &nbsp               ITS -  Java Resources -  Java Download   MAC Install Tutorial -  Java Documentation -  Eclipse IDE -   Java*Tester &copy      Site Helpful?                   COURSE DESCRIPTION & OBJECTIVE:    This course is a foundation course for learning software programming using the Java language. The course will introduce the student to programming concepts, programming techniques, and other software development fundamentals. Students will learn the concepts of Object Oriented programming using Java. The course will present an extensive coverage of the Java programming language including how to write, compile and run Java applications.    The purpose of this course is to learn programming concept and Object Oriented fundamentals using Java. Students will receive a solid understanding of the Java language syntax and semantics including Java program structure, data types, program control flow, defining classes and instantiating objects, information hiding and encapsulations, inheritance, exception handling, input/output data streams, memory management, Applets and Swing window components.   The focus of the course will be on the following topics:     Procedural vs. Object Oriented Programming.   Java Data Types  Program control flow  Objects and Classes  Abstraction, encapsulation, inheritance and polymorphism  Method overriding and overloading  Exception handling  Input/output streams  Creating windows and applets           BOOKS - (Required / Suggested)     Required Books -     Beginning Java (Java 7 Edition)    Author - Ivor Horton   Publisher - Wrox Press Inc.      Recommended Books -     Just Java 2 (6th Edition)     Author - Peter Van Der Linden   Publisher - Sun Microsystems Press        Thinking in Java (4th Edition)     Author - Bruce Eckel   Publisher - Prentice Hall           GRADES AND GRADING POLICY    Your final grade will be based on the following:    For Non-Credit and 2 Credit Students     Midterm Exam - 30%   Final Exam - 30%   Homeworks & Class Participation - 20%   Student Object Homework - 10%   Attendance - 10%       For 4 Credit Students     Midterm Exam - 25%   Final Exam - 25%   Homeworks & Class Participation - 20%   Student Object Homework - 10%   Additional OO Homework - 10%   Attendance - 10%       How to Submit Homeworks .      - Homework assignments are always due the next session we meet. Late homeworks will not be accepted.  - Print out your homework code and resulting output and bring with you to class the next time we meet.  - I will either collect, or will ask students to discuss their solutions in class.  - I will not accept homework via email unless you are not able to attend the class.  - Proper indentation is a must. If not properly indented I may return it without grading it.  - Multiple pages should be stapled together. (PS. no paper clip, no folding the corner, etc.)    Grades are FINAL .    Please do not negotiate for a better grade. If you are expecting to receive a grade of an \" A \"  at the end of the semester, then I expect you to attend all sessions (unless I am notified ahead of time),  to participate in these sessions, to keep up with the class reading material, and to complete your homework assigments.  This will ensure that you stay current with the class content, and will ensure that you get a good  grade on your test(s), project as well as your final grade.   If you are a non-credit student, and you are not interested in a grade, or you do not submit your homeworks/project or take the exams,  then you will receive a grade of an \" NE \" (Non-Evaluative). A grade of NE is final, and cannot be changed. A grade of NE cannot be applied as partial fulfillment for any NYU certificate program.         To receive your final grade at the end of the semester,  follow these steps:     click on http://www.scps.nyu.edu/academics/noncredit-offerings/academic-noncredit-policies-and-procedures.html#Obtaining_Grades  Log into Albert using your net id, at: https://admin.portal.nyu.edu/psp/paprod/EMPLOYEE/EMPL/h/?tab   Click on \"Student Center\"  Within your student center, in the \"academics\" section click on the dropdown: \"other academic\"   From the dropdown select \"grades\"  For complete instructions click here               SYLLABUS          D ATE      S ESSION      T OPIC[s] COVERED         [Week 1]   1    Introduction to Programming  What is a Programming Language  Compiled vs. Interpreted Languages  Procedural vs. Object Oriented Languages  The Java Environment  The Java Compiler, The JVM Java Virtual Machine  Downloading and Installing the SDK  What is Path and Classpath  Compiling and running a Java Program  The Java Language Keywords       Reading:   Chapter 1        &nbsp     [Week 2]   2    Declaring Variables  Java Primitive Data Types  Variable Assignment  Casting to another Data Type  Automatic Data Type Promotion  Mathematical Operators  Operator Precedence  Comments and Documentation       Reading:   Chapter 2       &nbsp     [Week 3]   3    Decision Making  The if statement, and the switch statement  Loops and Iterations  The for and while statements  Boolean Expressions  Logical Operators  Conditional Operators  Variable Scope  Creating and Using Methods       Reading:   Chapter 3       &nbsp     [Week 4]   4    The String class  String and Substring Operations  Comparing Strings for equality and inequality  Array of Strings  StringBuffer Objects  Declaring Arrays  Array of Arrays (Multi-dimensional Arrays)  Iterating through arrays  Sorting arrays  Sorting arrays with a comparator object       Reading:   Chapter 4        &nbsp     [Week 5/6]   5/6    Object Oriented Concepts  Defining Classes  Defining Variables and Methods in a CLass  Instantiating Objects  Defining Contructors     - Midterm Exam (week 6) -    Method Overloading  Packages  Access Control to Class Members  Abstaction and Encapsulation       Reading:   Chapter 5       &nbsp     [Week 7]   7    Class Inheritance  Abstract Classes  Extending Classes  What is a Superclass, what is a Subclass  The Universal Superclass  The toString( ) Method  Determining the type of an Object  Inheritance and Polymorphism       Reading:   Chapter 6       &nbsp     [Week 8]   8    What are Exceptions  Type of Exceptions  Handling Exceptions  The try/catch Block  Define and Throw your own Exception       Reading:   Chapters 7         &nbsp     [Week 9]   9    Input and Output Streams  Using Readers, using Writers  Working with the File Object  Testing for Files and Directories  File Input and Output  Dealing with Buffers  Reading from Files, writing to Files       Reading:   Chapters 8-11       &nbsp     [Week 10]   10     - Final Exam -           &nbsp     [Extra]   Swing    Creating windows  Swing components  Menus, text, buttons & other components  Using containers  The Flow Layout Manager  Adding menus to windows  Event Handling, Event Listeners  Creating Applets  Displaying Applets in web pages       Reading:   Chapters 17-19               All contents &copy;   Sam Sultan.  For more information, send e-mail to:  sam.sultan@nyu.edu       &nbsp"}]},
{"detail": [{"content": "Certificate in Java Programming                                                                                          The NYU School of Professional Studies Website    Faculty    Degrees    Professional Certificates    Upcoming Events        Search Courses     Credit Course     Non-Credit Course          Site    Noncredit Courses    Faculty                                                                       Management and Information Technology                                                                                           About             Director's Message Faculty                   Admissions                 Academics             Graduate Programs Noncredit Offerings                   Career                 Events                 Alumni                                                   Certificate in Java Programming                                            Academics &rsaquo;                Graduate Programs            Noncredit Offerings                 Certificate in Advanced Project Management          Certificate in Advanced Web Development          Certificate in AMP Web Development          Certificate in Android App Development          Certificate in Business Intelligence          Certificate in Business Technology          Certificate in C++ Programming          Certificate in Data Science with R          Certificate in Healthcare Informatics          Certificate in Healthcare Technology          Certificate in iOS App Development          Certificate in Java Programming          Certificate in Microsoft SQL Server Specialist          Certificate in Oracle Application Express          Certificate in Oracle Database 12c Administrator Certified Associate (OCA)          Certificate in Oracle Database 12c Administrator Certified Professional (OCP)          Certificate in Oracle Database 12c Developer Certified Associate (OCA)          Certificate in Oracle Database 12c Developer Certified Professional (OCP)          Certificate in Project Management          Certificate in Ruby on Rails          Certificate in Web Development          Certificate in Web Development-Full Stack                                      Ready to Proceed?           Register Now        Request Information        Events                                                                Ready to Proceed?        Register for Courses Now                                                                         Don't see what you're looking for?                                                         Declare Your Certificate Candidacy                  Ready to Proceed?          Register Now      Request Information      Attend an Information Session                                                                                                      QUICK LINKS                        About Us          Student Affairs          Visit Us          School-wide Policies          Contact Us                       ATTEND THE SCHOOL                        Graduate Admissions          Undergraduate Admissions          Noncredit Registration          Veteran Resource Center                             ON THE WEB                         On Facebook          On Twitter          On YouTube          Browser Requirements                                                        NYU Homepage   &copy; New York University School of Professional Studies | Privacy Policy"}, {"content": "Introduction to Java - Professor: Sam Sultan               Introduction to Java     Course Number - INFO1-CE9238 / ELEC1-DC1007    Friday - 6:00-9:30pm       Announcement(s):            Instructor:   Sam Sultan   [ sam.sultan@nyu.edu ]      [ Featured Professor ]     Class web site:   [ samsultan.com/java ] (or)   [ oit.scps.nyu.edu/~sultans/java ]                +   syllabus     +   books          +   grades policy     +   student listing          +   examples & demos     +   other classes          +   student feedback     +   student evaluation   & comments                Session -   1 &nbsp   2 &nbsp  3 &nbsp  4 &nbsp  5/6 &nbsp  7 &nbsp  8 &nbsp  9 &nbsp   10 &nbsp  Extra:   Swing &nbsp               ITS -  Java Resources -  Java Download   MAC Install Tutorial -  Java Documentation -  Eclipse IDE -   Java*Tester &copy      Site Helpful?                   COURSE DESCRIPTION & OBJECTIVE:    This course is a foundation course for learning software programming using the Java language. The course will introduce the student to programming concepts, programming techniques, and other software development fundamentals. Students will learn the concepts of Object Oriented programming using Java. The course will present an extensive coverage of the Java programming language including how to write, compile and run Java applications.    The purpose of this course is to learn programming concept and Object Oriented fundamentals using Java. Students will receive a solid understanding of the Java language syntax and semantics including Java program structure, data types, program control flow, defining classes and instantiating objects, information hiding and encapsulations, inheritance, exception handling, input/output data streams, memory management, Applets and Swing window components.   The focus of the course will be on the following topics:     Procedural vs. Object Oriented Programming.   Java Data Types  Program control flow  Objects and Classes  Abstraction, encapsulation, inheritance and polymorphism  Method overriding and overloading  Exception handling  Input/output streams  Creating windows and applets           BOOKS - (Required / Suggested)     Required Books -     Beginning Java (Java 7 Edition)    Author - Ivor Horton   Publisher - Wrox Press Inc.      Recommended Books -     Just Java 2 (6th Edition)     Author - Peter Van Der Linden   Publisher - Sun Microsystems Press        Thinking in Java (4th Edition)     Author - Bruce Eckel   Publisher - Prentice Hall           GRADES AND GRADING POLICY    Your final grade will be based on the following:    For Non-Credit and 2 Credit Students     Midterm Exam - 30%   Final Exam - 30%   Homeworks & Class Participation - 20%   Student Object Homework - 10%   Attendance - 10%       For 4 Credit Students     Midterm Exam - 25%   Final Exam - 25%   Homeworks & Class Participation - 20%   Student Object Homework - 10%   Additional OO Homework - 10%   Attendance - 10%       How to Submit Homeworks .      - Homework assignments are always due the next session we meet. Late homeworks will not be accepted.  - Print out your homework code and resulting output and bring with you to class the next time we meet.  - I will either collect, or will ask students to discuss their solutions in class.  - I will not accept homework via email unless you are not able to attend the class.  - Proper indentation is a must. If not properly indented I may return it without grading it.  - Multiple pages should be stapled together. (PS. no paper clip, no folding the corner, etc.)    Grades are FINAL .    Please do not negotiate for a better grade. If you are expecting to receive a grade of an \" A \"  at the end of the semester, then I expect you to attend all sessions (unless I am notified ahead of time),  to participate in these sessions, to keep up with the class reading material, and to complete your homework assigments.  This will ensure that you stay current with the class content, and will ensure that you get a good  grade on your test(s), project as well as your final grade.   If you are a non-credit student, and you are not interested in a grade, or you do not submit your homeworks/project or take the exams,  then you will receive a grade of an \" NE \" (Non-Evaluative). A grade of NE is final, and cannot be changed. A grade of NE cannot be applied as partial fulfillment for any NYU certificate program.         To receive your final grade at the end of the semester,  follow these steps:     click on http://www.scps.nyu.edu/academics/noncredit-offerings/academic-noncredit-policies-and-procedures.html#Obtaining_Grades  Log into Albert using your net id, at: https://admin.portal.nyu.edu/psp/paprod/EMPLOYEE/EMPL/h/?tab   Click on \"Student Center\"  Within your student center, in the \"academics\" section click on the dropdown: \"other academic\"   From the dropdown select \"grades\"  For complete instructions click here               SYLLABUS          D ATE      S ESSION      T OPIC[s] COVERED         [Week 1]   1    Introduction to Programming  What is a Programming Language  Compiled vs. Interpreted Languages  Procedural vs. Object Oriented Languages  The Java Environment  The Java Compiler, The JVM Java Virtual Machine  Downloading and Installing the SDK  What is Path and Classpath  Compiling and running a Java Program  The Java Language Keywords       Reading:   Chapter 1        &nbsp     [Week 2]   2    Declaring Variables  Java Primitive Data Types  Variable Assignment  Casting to another Data Type  Automatic Data Type Promotion  Mathematical Operators  Operator Precedence  Comments and Documentation       Reading:   Chapter 2       &nbsp     [Week 3]   3    Decision Making  The if statement, and the switch statement  Loops and Iterations  The for and while statements  Boolean Expressions  Logical Operators  Conditional Operators  Variable Scope  Creating and Using Methods       Reading:   Chapter 3       &nbsp     [Week 4]   4    The String class  String and Substring Operations  Comparing Strings for equality and inequality  Array of Strings  StringBuffer Objects  Declaring Arrays  Array of Arrays (Multi-dimensional Arrays)  Iterating through arrays  Sorting arrays  Sorting arrays with a comparator object       Reading:   Chapter 4        &nbsp     [Week 5/6]   5/6    Object Oriented Concepts  Defining Classes  Defining Variables and Methods in a CLass  Instantiating Objects  Defining Contructors     - Midterm Exam (week 6) -    Method Overloading  Packages  Access Control to Class Members  Abstaction and Encapsulation       Reading:   Chapter 5       &nbsp     [Week 7]   7    Class Inheritance  Abstract Classes  Extending Classes  What is a Superclass, what is a Subclass  The Universal Superclass  The toString( ) Method  Determining the type of an Object  Inheritance and Polymorphism       Reading:   Chapter 6       &nbsp     [Week 8]   8    What are Exceptions  Type of Exceptions  Handling Exceptions  The try/catch Block  Define and Throw your own Exception       Reading:   Chapters 7         &nbsp     [Week 9]   9    Input and Output Streams  Using Readers, using Writers  Working with the File Object  Testing for Files and Directories  File Input and Output  Dealing with Buffers  Reading from Files, writing to Files       Reading:   Chapters 8-11       &nbsp     [Week 10]   10     - Final Exam -           &nbsp     [Extra]   Swing    Creating windows  Swing components  Menus, text, buttons & other components  Using containers  The Flow Layout Manager  Adding menus to windows  Event Handling, Event Listeners  Creating Applets  Displaying Applets in web pages       Reading:   Chapters 17-19               All contents &copy;   Sam Sultan.  For more information, send e-mail to:  sam.sultan@nyu.edu       &nbsp"}, {"content": "Interactive Web Programming Using Java                         New York  University       Computer  Science Department       Courant  Institute of Mathematical Sciences              Session 3:  Java Platform Component APIs              Course Title: Extreme Java  Course  Number: g22.3033-007      Instructor: Jean-Claude Franchitti Session: 3                  What is  the Java Platform?              The Java Platform is defined as a new operating  environment for delivering and running highly interactive, dynamic, distributed  and secure applications on network computers. It is a layer on top of existing  operating systems and hardware platforms that enables the compilation of  software programs to bytecodes, which are machine instructions for a virtual  machine contained in the Java Platform. The virtual machine is more than an  interpreter it provides additional services beyond the translation of byte  codes to native machine code, such as garbage collection, thread  synchronization and security management.              On the other hand, the Java Enterprise APIs are  Java's interface into business or enterprise computing. They are a category of  Java APIs that fall under the definition of the Java Platform APIs; i.e., the  Enterprise APIs are a subset of the Java Platform APIs.              Components  of the Java Platform         The Java Platform defines an environment that includes a virtual machine, a  programming language, core class libraries and class extension libraries. In  short, the Java Platform defines and encompasses Java. The greatest benefit of  Java is its software platform. This platform creates a virtual operating  environment that is capable of producing binary code that can be run virtually  on any hardware platform that implements the Java virtual machine. The Java  Platform has three basic parts:          The Java Virtual machine (JVM)       The Java Language (Language Syntax)       Java Class Libraries or Java Application  Programming Interface (API)              The Java class libraries, which is the interface  published by the Java Platform for interacting with the rest of the computing  world, comprises the following:          The Java Core API       The Java Standard Extension API      Non-standard Java APIs              The Java Enterprise APIs focuses on Java for the  Enterprise (these are APIs that extend the scope of Java to the world of  business computing). The current focus of this handout is not on the core and  extension APIs that are used for programming Java. This handout focusing on the  APIs that extend Java beyond its core environment. Figure 1 shows the Java  platform.                                                                                                We will first cover the APIs that are defined under  the scope of the Java Platform. Please note that we are, for the moment,  foregoing discussion on the Java APIs that focus on Java-related hardware  devices, embedded Java and Java operating system APIs (JavaOS). We will also  avoid discussions on Java products (Java Web Server, JavaBlend, etc.) or other  APIs (JavaMail, JavaSpaces, etc.).              The Java  Platform API Categories         The Java Platform APIs are a set of interfaces that are used by developers to  build Java applications and applets. All Java Platform APIs are created  primarily by JavaSoft with the help of industry-wide specialists in different  technologies and market areas.              The Java Platform APIs fall under the following  categories:          Java Base Platform       Commerce       Security       Media       Enterprise       Server       These API categories are described in Table 1. The next  section briefly examines the Java APIs that fall into each category.                                                             The Java  Platform Constituent APIs         The Enterprise APIs is beyond the scope of this session. The Java Base API will  not be discussed here, as information about it is widely available. The APIs  under the other four groups and some related products are listed in Table 2.  Subsequent sections of this article briefly describe the individual APIs.                                                                                                              Commerce  API (Java Commerce Client)         The Java Commerce Client (JCC) is an open, extensible framework, which provides  the ability to build electronic commerce applications. JCC offers a Wallet-like  user interface, a database and an extensible platform that enables the use of a  variety of payment instruments and protocols for E-commerce operations.              JCC provides the API for Java commerce applications.  Java Wallet, on the other hand, is a family of products that uses the JCC to  ensure secure electronic commerce operations. The Java Wallet incorporates the  JCC, Commerce JavaBeans components, the Gateway Security Model and Java  Commerce Messages to offer users an extensible platform for online commerce.              A Commerce JavaBean component is a reusable commerce  component that meets specific interface requirements to enable development of  commerce components that can extend the functionality of the JCC. The Commerce  JavaBeans model extends the JavaBeans model to provide interface typing and  support for the Gateway Security Model. JavaBeans components show some  functionality within standard JavaBeans builder tools, but they only manifest  full functionality in Commerce JavaBeans aware environments such as the JCC.              Commerce JavaBeans components are contained in  cassettes, which package these components. When a cassette is downloaded and  installed, the JCC can make use of the Commerce JavaBeans component(s) it  contains to perform commerce operations.              The Java SmartCard API is the final piece that  defines the building blocks for Java's electronic commerce domain. This API  enables communication between portable Java applications and smart cards,  independent of hardware devices. The Java Smart Card layer makes the card  reader and port transparent to the Java application communicating with the  smart card, providing a direct channel between application and smart card.             The Java Commerce APIs are  delivered separately from JDK. They constitute a standard extension to the JDK.  The Java SmartCard API is currently available as an early access release. The  Java Card API is available as a 2.0 specification. The Commerce JavaBeans API  specification has not been published yet.             Security  API         Security in the Java Platform is provided at different levels, via core APIs as  well as an extension API. JDK 1.1.x includes Javakey and Jar, which use the new  JDK security APIs provided with the JDK. Javakey is used to generate keys and  certificates and sign JAR files. Jar is a file archiving utility. The security  APIs support hashing, digital signatures, and parsing and generating X.509  certificates.              Security support is also included in the  client/server products. The Java Web Server includes security support for the  server-side. The HotJava Browser offers fine-grain control for signed applets  and built-in SSL support.              The Java Cryptography Extension (JCE) provides a framework  for encryption and key negotiation. It includes interfaces and implementations  of ciphers, secure Java streams, key generation and other features. The current  version of JCE, JCE1.2, is designed so that other crypto libraries can be  plugged in as service providers and new algorithms can be added. JCE1.2  supplements JDK1.2 (Java Development Kit), which already includes interfaces  and implementations of message digests and digital signatures. JCE1.2 requires  that you already have JDK1.2 installed.              Media APIs         The Java Media APIs support the integration of audio and video clips, animated  presentations, 2D fonts, graphics and images, as well as speech input/output,  3D models and telephony. By providing standard players and integrating these  supporting technologies, the Java Media APIs enable developers to distribute  compelling, media-rich content.              The Java 2D API is a set of classes for advanced 2D  graphics and imaging, encompassing line art, text and images in a single  comprehensive model. These classes will be provided as additions to packages in  the Java 1.2 AWT class libraries.              The Java 3D API is a set of classes for writing  three-dimensional graphics applications and 3D applets which provide high level  constructs for creating and manipulating 3D geometry and for constructing the  structures used in rendering that geometry. The early access Java 3D 1.1 Alpha  2 API is available for review.              The Java Advanced Imaging API allows sophisticated,  high-performance image processing to be incorporated in Java applets and  applications. This API will be available as a standard extension to the Java  platform. The Java Advanced Imaging API implements a set of core image  processing capabilities, such as image tiling, regions of interest and deferred  execution. The Java Advanced Imaging API is being developed by Sun, Autometric,  Kodak and Siemens.              The Java Media Framework API (JMF) specifies a  simple unified architecture, messaging protocol and programming interface for  media players, media capture and conferencing. JMF is in its first API release,  which supports the synchronization, control, processing and presentation of  compressed streaming and stored time-media, including video and audio. The JMF  1.0 API was developed by Sun, Silicon Graphics Inc. and Intel Corporation.              Java Sound is a very high quality 32 channel audio  rendering and MIDI controlled sound synthesis engine with a new Java Sound API.  Java Sound will be distributed in two phases. The first phase will be as an  engine that will be a core library in JDK1.2. The second phase will be the  release of a full featured Java Sound API.       The Java Speech API enables incorporation of speech  technology into user interfaces of Java applications. It has a cross-platform  API to support command and control recognizers, dictation systems and speech  synthesizers. The beta Java Speech API is available now for review. The Java  Speech API was developed by Sun, AT&amp;T, Dragon Systems, IBM, Novell and  Texas Instruments. Java Speech API is in 0.06 beta Specification.              The Java Telephony API (JTAPI) is a set of modular,  abstract interface specifications for computer-telephony integrated call  control. This specification was developed by Sun, Dialogic, IBM, Intel, Lucent,  Nortel, Novell and Siemens. The current version of JTAPI is 1.2.              Server API          The Server API enables development of server-side applications in Java.  Server-side development is done using Servlets, which are Java's server-side  counterparts for applets. The Servlet API is an extension to the standard JDK.  The Java Servlet Development Kit (JSDK) is used to program Java Servlets. JSDK  includes a servlet engine for running and testing servlets, and support for  Netscape, Microsoft and Apache Web servers.              The Java Web Server (JWS) is a product offered by  Sun Microsystems that supports Servlets. JWS is used for developing network  servers in the Java programming language.              The JavaServer Engine is a collection of reusable  Java classes that automates connection management, security and administration.  It's used for the development and deployment of network enabled, server-based  applications.              Conclusion               In this handout we examined the Java Platform and  its constituent APIs. We briefly examined the roles played by individual APIs  that make up the Java Platform. Links for detailed information on all these  APIs may be obtained from Sun's Java Web site at http://java.sun.com/products ."}]}]