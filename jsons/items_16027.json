[{"detail": [{"content": "Payroll Forms, AS | NYU                                                  Navigation       Arts and Science 2015                 About Arts and Science | Departments and Programs | The Faculty       About Arts and Science | Departments and Programs | Our Faculty                  Back to Home             Payroll Forms    Arts   &amp; Science Payroll Forms    For descriptions   of the forms, their uses, and instructions on how to submit them, please see   the Arts &amp; Science Payroll Policies page. FAS New Hire Checklists  Researchers, Adjuncts and Research Assistants (PDF) Full Time Faculty (PDF)     FAS New Hire Form Complete and Print the FAS New Hire Form (PDF format) *Note: We recommend downloading this PDF to your desktop so that required fields are highlighted in red New Appointment/Additional Compensation Form Complete and Print the Additional Compensation Form (PDF format)    Turnaround Document Form for changes to an existing appointment    The Department/Program Administrator can request Turnaround Documents for   personnel in their area by sending the person's name and ID number to Tamara Wills, Payroll/Budget Assistant ( tamara.wills@nyu.edu ).    Labor Law 195    The NYS Department of Labor requires the following form(s) before or on the first day of work. These forms are in addition to the appointment letters that are required to be sent. Please add the applicable form(s) to your new hire paperwork for all Academic and Student appointments (codes 102, 103, 112, 113, 115, 118, and 119). Adjunct (grading or other flat rate appointment, Code 112) Adjunct (contact hour appointment, Code 112) Faculty &amp; Staff Positions Monthly (Code 100-102) Research &amp; Staff Positions Nonexempt (Code 100-103) Semi-Monthly (Code 100-102-103 Semi-Monthly) Students Hourly (Code 118-119-115) Exhibits       Check locations    Building codes    Ethnicity codes    Education Level Table    Citizenship Table    Country Table    Personnel Action Codes    Attachments Chart    FAS Check Location Table                     AFRICANA       FI                   AMERICAN       CW                   ANIMAL       CM                   ANTHROPOLOGY       FP                   ARCHIVES       4S                   ARCE       FH                   ASIAN       AMERICAN       FF                   BIOLOGY       CN                   CAS       (DEAN)       5X                   CHEMISTRY       CP                   CLACS       CA                   CLASSICS       4H                   COMP       LIT       3D                   EAST       ASIAN       FG                   ECONOMICS       4J                   ENGLISH       4L                   EURO       STUDS       4N                   EXPO       WRIT       4K                   FINE       ART       CE                   FRENCH       4Z                   GER/D       HAUS       4P                   GSAS       5C                   GSAS       FIN AID       6J                   GSAS       STU/SVC       5C                   HEB       &amp; JUD       1B                   HISTORY       4R                   ICAS       CD                   IFS       4X                   IRISH       CI                   INTL       COOP       FC                   ITALIAN       4M                   JOURNAL       CF                   KING       JUAN       CH                   LAW       &amp; SOC                          LIB       STUD       CO                   LINGUIST       FX                   LA       MAISON       5Z                   M.A.P.       5X                   MED       RENN       CL                   M.E.S.       FH                   MET       STUD       FE                   MUS       STUD       CQ                   MUSIC       4V                   NR       EAST       FH                   NEU       SCI       5B                   NYU       FRAN       4Y                   NYU       SPAIN       CG                   ONASSIS       CB                   PHILOS       4W                   PHYSICS       4B                   POLITICS       CT                   PSYCH       5A                   REMARQUE       CK                   SLAVIC       CL                   SOCIO       5E                   SPAN/POR       FB                   STARR       CTR       4J                   SUMMER       CJ                   WAR,       PEACE       CF                     FAS Building Code Table                     CODE       BUILDING NAME                   BARNY       Barney       Bldg                   BASCI       Basic       Science Bldg                   BOBST       Bobst       Library, Bobst, 70 Wash. Sq. So.                   BRITT       Brittany       Hall, 55 E. 10 St.                   BRONF       Bronfman       Ctr Jewish Stu Life                   BROOM       Broom       Street                   BROWN       Brown       Building                   CARLY       Carlyle       Court, 25 Union Sq. West                   CARNG       Carnegie       Lab                   CASAI       Casa       Italiana, 24 W. 12 St.                   COLES       Coles       Sports &amp; Rec Center, 181 Mercer St.                   DAG       D'Agostino       Residence Hall, 110 W. 3 St.                   DHAUS       Deutsche       Haus                   E26       334       East 26th Street                   EAST       East       Building                   EDUC       Education       Building                   FAIR       Fairchild       Building                   GODD       Goddard       Residence Hall                   HAYDN       Hayden       Hall                   IFA       Institute       of Fine Arts                   IRLND       Ireland       House, 1 Wash. Mews                   IRM       Institute       of Rehab Medicine                   KEVOR       Kevorkian       Cntr, 1 Wash. Mews                   KIMBL       Kimball       Hall, 246 Greene St.                   KING       King       Juan Carlos I Spain Ctr, 82 Wash. Sq. East                   LAMAF       La       Maison Francaise                   LIBRT       Liberty       View                   LOEB       Loeb       Student Center, 566 La Guardia Pl.                   MAIN       Main       Bldg. 100 Wash. Sq. East                   MANHT       Manhattanville       College                   MEC       Management       Education Ctr                   MERRL       Merrill       Hall, 90 Trinity Pl.                   MEYER       Meyer       Hall of Physics                   NICH       Nichols       Hall                   NONE       No       NYU Address                   ONCTR       Onassis       Center, 58 W. 10 St.                   PLESS       Joseph       &amp; Violet Pless Hall, 82 Wash. Sq. East                   PRESA       Press       Annex                   RUBIN       Rubin       Residence Hall, 35 Fifth Ave.                   RUFUS       Rufus       D. Smith Hall                   SCHWZ       Schwartz       Hall                   SHIMK       Shimkin       Hall                   SOUTH       South       Bldg                   TEMP       Temporary       Building Code                   TISCH       Tisch       Hall                   UNCRT       University       Court                   VANDB       Vanderbilt       Hall                   WAVLY       Waverly       Bldg                   WEINS       Weinstein       Center, 5-11 University Pl.                   WWEAV       Warren       Weaver Hall, 251 Mercer St.                   1WPL       Safety       Center                   1WSN       School       of Social Work                   1WSV       1       Washington Square Village                   2UP       John       J. Creedon House                   2WSN       School       of Social Work                   2WSV       2       Washington Square Village                   3WPL       3-5       Washington Place                   3WSN       School       of Social Work                   3WSV       3       Washington Square Village                   4WSN       4       Washington Square North                   4WSV       4       Washington Square Village                   5WSN       Chase       Graduate House                   6WPL       Psychology       Building                   6WSN       Tasco       House, 6 Washington Square North                   7WPL       7       Washington Place                   7WSN       7-13       Washington Square                   8WPL       8       Washington Place                   10WPL       10       Washington Place                   10WVP       10       Waverly Place                   11W42       SCE       Midtown Center, 11 West 42nd St.                   11WAV       11       Waverly Place                   13UP       Health       Service Medical, 13 University Place                   14UP       University       Health Service, 14 University Place                   14WPL       14       Washington Place                   15MEW       Institute       of French Studies, 15 Wash. Mews                   15WPL       15       Washington Place                   16WVP       15       Waverly Place                   18WPL       Bookstore                   19REC       Stern       Business Bookstore                   19UP       19       University Place                   19W4       19       West Fourth Street                   21WPL       21       Washington Place                   22WSN       22       Washington Square North                   23W4       23       West Fourth Street                   25W4       25       West Fourth Street                   31W       31       West 11th Street                   33E3       Alumni       Hall                   40E7       Central       Plaza Annex                   44MEW       44       Washington Mews                   46MEW       46       Washington Mews                   48CSQ       48       Cooper Square                   58WSS       Catholic       Center                   64W3       64       West 3rd Street                   74TP       Placement                   75E3       Third       Ave North Residence Hall, 75 Third Ave., 100                   85W3       85       West Third Street                   87W3       Law       School, 87 West 3rd Street                   95TP       Graduate       Business Bookstore                   108W3       108       West Third Street                   110BL       110       Bleeker Street                   111SE       Center       Plaza                   113UP       113-115       University Place                   114LB       114       Liberty Street                   130MD       130       MacDougal Street                   137MD       137       MacDougal Street                   161-6       161       Avenue of the Americas                   240G       240       Greene Street                   240MR       Mercer       Street Dormitory, 240 Mercer Street                   242G       242       Greene Street                   249E       249       East 30th Street                   249SU       249       Sullivan Street                   269MR       269       Mercer Street                   285MR       285       Mercer Street                   360W       360       West 34th Street                   421FR       Dental       Center                   455FR       455       First Avenue                   466FR       466       First Avenue                   530LG       NYU       Prof Bookstore                   547LG       Mail       Services                   550FR       NYU       Medical Bookstore                   561LG       561       LaGuardia Place                   715BW       715       Broadway                   719BW       719       Broadway                   721BW       721       Broadway                   725BW       725       Broadway                   889W3       89       West Third Street                   915BW       915       Broadway                   33026       330       East 26th Street                   33425       334       East 25th Street                   33426       334       East 26th Street                   99999       Building       Missing/Illegible                      FAS Ethnicity Code Table                     ETHNICITY       CODE                   Asian       A                   Black       or African-American       B                   Native       American or Alaskan Native       N                   Native       Hawaiian or Other Pacific Islander       P                   White       W                   Hispanic       or Latino       H                                       About Us       Our Faculty       Departments and Programs       Research Centers, Institutes, and International Houses       News       Administrative Resources               Updated on 03&#047;04&#047;2015       Contact Us                             Contact Us"}]},
{"detail": [{"content": "Payroll Forms, AS | NYU                                                  Navigation       Arts and Science 2015                 About Arts and Science | Departments and Programs | The Faculty       About Arts and Science | Departments and Programs | Our Faculty                  Back to Home             Payroll Forms    Arts   &amp; Science Payroll Forms    For descriptions   of the forms, their uses, and instructions on how to submit them, please see   the Arts &amp; Science Payroll Policies page. FAS New Hire Checklists  Researchers, Adjuncts and Research Assistants (PDF) Full Time Faculty (PDF)     FAS New Hire Form Complete and Print the FAS New Hire Form (PDF format) *Note: We recommend downloading this PDF to your desktop so that required fields are highlighted in red New Appointment/Additional Compensation Form Complete and Print the Additional Compensation Form (PDF format)    Turnaround Document Form for changes to an existing appointment    The Department/Program Administrator can request Turnaround Documents for   personnel in their area by sending the person's name and ID number to Tamara Wills, Payroll/Budget Assistant ( tamara.wills@nyu.edu ).    Labor Law 195    The NYS Department of Labor requires the following form(s) before or on the first day of work. These forms are in addition to the appointment letters that are required to be sent. Please add the applicable form(s) to your new hire paperwork for all Academic and Student appointments (codes 102, 103, 112, 113, 115, 118, and 119). Adjunct (grading or other flat rate appointment, Code 112) Adjunct (contact hour appointment, Code 112) Faculty &amp; Staff Positions Monthly (Code 100-102) Research &amp; Staff Positions Nonexempt (Code 100-103) Semi-Monthly (Code 100-102-103 Semi-Monthly) Students Hourly (Code 118-119-115) Exhibits       Check locations    Building codes    Ethnicity codes    Education Level Table    Citizenship Table    Country Table    Personnel Action Codes    Attachments Chart    FAS Check Location Table                     AFRICANA       FI                   AMERICAN       CW                   ANIMAL       CM                   ANTHROPOLOGY       FP                   ARCHIVES       4S                   ARCE       FH                   ASIAN       AMERICAN       FF                   BIOLOGY       CN                   CAS       (DEAN)       5X                   CHEMISTRY       CP                   CLACS       CA                   CLASSICS       4H                   COMP       LIT       3D                   EAST       ASIAN       FG                   ECONOMICS       4J                   ENGLISH       4L                   EURO       STUDS       4N                   EXPO       WRIT       4K                   FINE       ART       CE                   FRENCH       4Z                   GER/D       HAUS       4P                   GSAS       5C                   GSAS       FIN AID       6J                   GSAS       STU/SVC       5C                   HEB       &amp; JUD       1B                   HISTORY       4R                   ICAS       CD                   IFS       4X                   IRISH       CI                   INTL       COOP       FC                   ITALIAN       4M                   JOURNAL       CF                   KING       JUAN       CH                   LAW       &amp; SOC                          LIB       STUD       CO                   LINGUIST       FX                   LA       MAISON       5Z                   M.A.P.       5X                   MED       RENN       CL                   M.E.S.       FH                   MET       STUD       FE                   MUS       STUD       CQ                   MUSIC       4V                   NR       EAST       FH                   NEU       SCI       5B                   NYU       FRAN       4Y                   NYU       SPAIN       CG                   ONASSIS       CB                   PHILOS       4W                   PHYSICS       4B                   POLITICS       CT                   PSYCH       5A                   REMARQUE       CK                   SLAVIC       CL                   SOCIO       5E                   SPAN/POR       FB                   STARR       CTR       4J                   SUMMER       CJ                   WAR,       PEACE       CF                     FAS Building Code Table                     CODE       BUILDING NAME                   BARNY       Barney       Bldg                   BASCI       Basic       Science Bldg                   BOBST       Bobst       Library, Bobst, 70 Wash. Sq. So.                   BRITT       Brittany       Hall, 55 E. 10 St.                   BRONF       Bronfman       Ctr Jewish Stu Life                   BROOM       Broom       Street                   BROWN       Brown       Building                   CARLY       Carlyle       Court, 25 Union Sq. West                   CARNG       Carnegie       Lab                   CASAI       Casa       Italiana, 24 W. 12 St.                   COLES       Coles       Sports &amp; Rec Center, 181 Mercer St.                   DAG       D'Agostino       Residence Hall, 110 W. 3 St.                   DHAUS       Deutsche       Haus                   E26       334       East 26th Street                   EAST       East       Building                   EDUC       Education       Building                   FAIR       Fairchild       Building                   GODD       Goddard       Residence Hall                   HAYDN       Hayden       Hall                   IFA       Institute       of Fine Arts                   IRLND       Ireland       House, 1 Wash. Mews                   IRM       Institute       of Rehab Medicine                   KEVOR       Kevorkian       Cntr, 1 Wash. Mews                   KIMBL       Kimball       Hall, 246 Greene St.                   KING       King       Juan Carlos I Spain Ctr, 82 Wash. Sq. East                   LAMAF       La       Maison Francaise                   LIBRT       Liberty       View                   LOEB       Loeb       Student Center, 566 La Guardia Pl.                   MAIN       Main       Bldg. 100 Wash. Sq. East                   MANHT       Manhattanville       College                   MEC       Management       Education Ctr                   MERRL       Merrill       Hall, 90 Trinity Pl.                   MEYER       Meyer       Hall of Physics                   NICH       Nichols       Hall                   NONE       No       NYU Address                   ONCTR       Onassis       Center, 58 W. 10 St.                   PLESS       Joseph       &amp; Violet Pless Hall, 82 Wash. Sq. East                   PRESA       Press       Annex                   RUBIN       Rubin       Residence Hall, 35 Fifth Ave.                   RUFUS       Rufus       D. Smith Hall                   SCHWZ       Schwartz       Hall                   SHIMK       Shimkin       Hall                   SOUTH       South       Bldg                   TEMP       Temporary       Building Code                   TISCH       Tisch       Hall                   UNCRT       University       Court                   VANDB       Vanderbilt       Hall                   WAVLY       Waverly       Bldg                   WEINS       Weinstein       Center, 5-11 University Pl.                   WWEAV       Warren       Weaver Hall, 251 Mercer St.                   1WPL       Safety       Center                   1WSN       School       of Social Work                   1WSV       1       Washington Square Village                   2UP       John       J. Creedon House                   2WSN       School       of Social Work                   2WSV       2       Washington Square Village                   3WPL       3-5       Washington Place                   3WSN       School       of Social Work                   3WSV       3       Washington Square Village                   4WSN       4       Washington Square North                   4WSV       4       Washington Square Village                   5WSN       Chase       Graduate House                   6WPL       Psychology       Building                   6WSN       Tasco       House, 6 Washington Square North                   7WPL       7       Washington Place                   7WSN       7-13       Washington Square                   8WPL       8       Washington Place                   10WPL       10       Washington Place                   10WVP       10       Waverly Place                   11W42       SCE       Midtown Center, 11 West 42nd St.                   11WAV       11       Waverly Place                   13UP       Health       Service Medical, 13 University Place                   14UP       University       Health Service, 14 University Place                   14WPL       14       Washington Place                   15MEW       Institute       of French Studies, 15 Wash. Mews                   15WPL       15       Washington Place                   16WVP       15       Waverly Place                   18WPL       Bookstore                   19REC       Stern       Business Bookstore                   19UP       19       University Place                   19W4       19       West Fourth Street                   21WPL       21       Washington Place                   22WSN       22       Washington Square North                   23W4       23       West Fourth Street                   25W4       25       West Fourth Street                   31W       31       West 11th Street                   33E3       Alumni       Hall                   40E7       Central       Plaza Annex                   44MEW       44       Washington Mews                   46MEW       46       Washington Mews                   48CSQ       48       Cooper Square                   58WSS       Catholic       Center                   64W3       64       West 3rd Street                   74TP       Placement                   75E3       Third       Ave North Residence Hall, 75 Third Ave., 100                   85W3       85       West Third Street                   87W3       Law       School, 87 West 3rd Street                   95TP       Graduate       Business Bookstore                   108W3       108       West Third Street                   110BL       110       Bleeker Street                   111SE       Center       Plaza                   113UP       113-115       University Place                   114LB       114       Liberty Street                   130MD       130       MacDougal Street                   137MD       137       MacDougal Street                   161-6       161       Avenue of the Americas                   240G       240       Greene Street                   240MR       Mercer       Street Dormitory, 240 Mercer Street                   242G       242       Greene Street                   249E       249       East 30th Street                   249SU       249       Sullivan Street                   269MR       269       Mercer Street                   285MR       285       Mercer Street                   360W       360       West 34th Street                   421FR       Dental       Center                   455FR       455       First Avenue                   466FR       466       First Avenue                   530LG       NYU       Prof Bookstore                   547LG       Mail       Services                   550FR       NYU       Medical Bookstore                   561LG       561       LaGuardia Place                   715BW       715       Broadway                   719BW       719       Broadway                   721BW       721       Broadway                   725BW       725       Broadway                   889W3       89       West Third Street                   915BW       915       Broadway                   33026       330       East 26th Street                   33425       334       East 25th Street                   33426       334       East 26th Street                   99999       Building       Missing/Illegible                      FAS Ethnicity Code Table                     ETHNICITY       CODE                   Asian       A                   Black       or African-American       B                   Native       American or Alaskan Native       N                   Native       Hawaiian or Other Pacific Islander       P                   White       W                   Hispanic       or Latino       H                                       About Us       Our Faculty       Departments and Programs       Research Centers, Institutes, and International Houses       News       Administrative Resources               Updated on 03&#047;04&#047;2015       Contact Us                             Contact Us"}, {"content": "CS470: Object Oriented Programming                           Object Oriented Programming    CSCI-UA.0470-001 Fall 2014 Mon/Wed 2:00 - 3:15, WWH 201       Instructor : Eric   Koskinen     Office Hours: Monday 4:00PM, WWH 402    Assistant : Avin Agrawal   Computer Science Department    Courant Institute of Mathematical Sciences ,   New York University                            Overview       Syllabus                                      Overview        Object-oriented (OO) programming has emerged as a significant  software development methodology. The goal of this course is  to learn how to build and evolve large-scale programs using  object-oriented programming. To this end, the course  introduces the important concepts of object-oriented languages  and design, and explores how these concepts are implemented.       Prerequisites: Computer Systems Organization (CSCI-UA 201).      Acknowledgments: This course is based on    the Object-Oriented    Programming course designed    by Robert Grimm .         Topics          In exploring object-oriented programming, we investigate three questions:               Design:     How do we think about a program in terms of objects? To    answer this question, we explore CRC cards, UML, and    design patterns.         Language Primitives:     How do we express object orientation? To answer this    question, we explore classes, interfaces, inheritance,    method dispatch, generics, operator overloading, and    reflection.              Language Implementation:     How do we realize object-oriented primitives? To answer    this question, we explore virtual method dispatch and    automatic memory management in detail.                  Design and primitives matter because they represent the    essence of object-oriented programming. Implementation    matters because it enables us to debug object-oriented    programs and tune their performance.         Project          The focus of our exploration of object-oriented programming   is a translator from Java to C++. You design, implement, and   evaluate your own translator as a term-long project, working   in teams of four to five students. In fact, you build two   versions of your translator, taking half a term for each   version and presenting your work in class on completion of   each version. To make the project manageable, your translator   only translates a restricted subset of Java into an even more   restricted subset of C++; though the second version covers   more functionality than the first version. I also provide you   with \"helper\" code, notably for parsing and pretty printing   program source files.             Each group elects a speaker, who coordinates with the    members of the group and with me. A new speaker is elected    at the middle of the term.             Your group's midterm and final project presentations address three main issues:               What are the design and implementation of your    translator?     How do you ensure that the translator meets the project    requirements? Notably, how do you convince yourself and    others that the translator actually works?     What was easy, hard, and/or surprising and how did that impact your translator?                 You have a 12 minute slot for your presentation, which    includes a demo of your translator and time to set up your    laptop.         Details      Group Meetings          Every project group meets with the instructor every other    week for an informal discussion of issues currently facing    the group. Group members will probably need additional    meetings amongst themselves to better coordinate their work.          Mailing List        All course-related announcements will be sent to the   course   mailing list . I encourage you to use this list to ask   questions and discuss issues related to the course. If you   have enrolled before the start of the term you are   automatically subscribed to the list. Otherwise, use the above   link to subscribe manually.         Grading     Group projects (50%), individual assignments (25%), final exam (25%).     Academic Integrity        Please review   the    departmental academic integrity policy . In this course,   you may discuss assignments with other students, but the   work you turn in must be your own. Do not copy another   student's work. You must do the projects as a group but not   with other groups and without consulting previous years'   students, code, etc. You should help other students and   groups on specific technical issues but you must acknowledge   such interactions. Copying code or other work without   giving appropriate acknowledgment is a serious offense with   consequences ranging from no credit to potential expulsion.       Textbooks     Required:      Object-Oriented   Design and Patterns, 2nd ed.    by Cay Horstmann, Wiley, 2005     C++ for Java Programmers by Mark Weiss,    Prentice Hall, 2003.         Recommended:        The C++ Programming Language, 4th ed. by Bjarne Stroustrup, Addison-Wesley, 2013.          Languages         This course relies on three different programming languages:          The source language is the language of programs serving    as inputs to the translator; it is a restricted version of    Java.     The target language is the language of outputs of the    translator; it is a restricted version of C++.     The translator language (for lack of a better term) is    the language of the translator itself; it is the full Java    5.0 JDK 1.5 language.              In more detail, the source language is    Java without nested classes, anonymous classes,    interfaces, enums, annotations, generics, the enhanced for    loop, varargs, and automatic boxing and    unboxing. Furthermore, the source language omits support    for synchronization, i.e., synchronized methods and    statements, and strict arithmetic operations, i.e. the     strictfp modifier. It also omits support for transient and     volatile fields as well as native methods. Finally, you    may omit method overloading but not method overriding for    the first version of the translator.             The target language is    C++ without virtual methods, inheritance, and, in    general, templates. It also omits features new to C++11,    notably lambda abstractions and type inference,    e.g., auto and decltype . It    does, however, include gcc's statement expressions,    i.e., ({ ... }) . When compared to C, the target    language does include support for basic classes,    exceptions, and name spaces. For the first version of the    translator, you can ignore memory management and assume an    infinite main memory. For the second version of the    translator, you need to automatically reclaim unused    memory through a so-called smart pointer. The smart    pointer library, as well as any library support for    implementing Java arrays, may use templates.             Most Java statements and expressions translate directly    into the corresponding C++ statements and expressions    (modulo minor language differences). As a result, the main    challenges for the course project are figuring out (1) how    to translate Java class hierarchies into C++ without    inheritance and (2) how to implement Java's virtual method    dispatch in C++ without virtual method dispatch, (3) how    to select the right overloaded method, and (4) how to    automatically manage memory without an existing garbage    collector. Note that we will explore how to approach each    challenge in class; we will also leave the latter two    challenges for the second version of the translator.             Besides the programming language itself, any version of    Java includes a rather extensive set of platform    libraries, with the facilities in    the java.lang package being tightly    integrated with Java's execution model. For our    translator, we only support    the hashCode() , equals() ,    and toString() methods in java.lang.Object     and the printing of numbers and strings through     out.print() and out.println() in     java.lang.System . Furthermore, we do not support the    dynamic loading of Java classes, but rather translate all    Java classes of the source program into one C++ program.             Please note that the translator need not perform any    correctness checks on source programs; in other words, you    can assume that source programs are free of compile-time    errors. At the same time, when writing your own Java test    programs, it seems prudent to test them with a regular    Java compiler.            Tools and Resources             For Java, we use the Java 2 Platform Standard Edition 5.0,    JDK 1.5, or    later. Oracle provides an    implementation for Linux. Apple provides an implementation    with Mac OS X, no installation required. In either case, you    need to separately install Java's API documentation. In the    case of Mac OS, the documentation is included    with Xcode ,    Apple's IDE.             For C++, we use gcc , the    GNU Compiler Collection, as our compiler. It is the default    compiler for Linux and included with Apple's Xcode for Mac    OS X.             If you are running Windows, please dual-boot into Linux or    use a virtual machine monitor such    as VirtualBox for    running Linux. Trying to get gcc and make work on Windows    (i.e., through a Unix emulation layer such as Cygwin) is not    recommended.             Like many large-scale software projects, we rely on a    version control system such    as git to manage program    sources and    on make to    automate the build management. If you are    using github or a similar    service, please make sure that your repository is not     publicly visible.             To simplify the task of reading source files in one    language, translating them into another language, and then    printing source files for that language, we use the xtc    toolkit for source-to-source translators . xtc includes a    parser for Java source files, which converts the external,    textual representation into an internal tree    representation. It also includes support for traversing,    modifying, and pretty-printing such trees.         You may also find the following resources useful:            Computing    facilities at Courant     Java    code conventions     A handy C++     quick reference .     Installation    instructions     for xtc     A detailed    guide to Git.     An overview of Git hosting    services . GitLab Cloud works well for our purposes.    JUnit : a framework for easily    performing unit tests on Java code."}]},
{"detail": [{"content": "Payroll Forms, AS | NYU                                                  Navigation       Arts and Science 2015                 About Arts and Science | Departments and Programs | The Faculty       About Arts and Science | Departments and Programs | Our Faculty                  Back to Home             Payroll Forms    Arts   &amp; Science Payroll Forms    For descriptions   of the forms, their uses, and instructions on how to submit them, please see   the Arts &amp; Science Payroll Policies page. FAS New Hire Checklists  Researchers, Adjuncts and Research Assistants (PDF) Full Time Faculty (PDF)     FAS New Hire Form Complete and Print the FAS New Hire Form (PDF format) *Note: We recommend downloading this PDF to your desktop so that required fields are highlighted in red New Appointment/Additional Compensation Form Complete and Print the Additional Compensation Form (PDF format)    Turnaround Document Form for changes to an existing appointment    The Department/Program Administrator can request Turnaround Documents for   personnel in their area by sending the person's name and ID number to Tamara Wills, Payroll/Budget Assistant ( tamara.wills@nyu.edu ).    Labor Law 195    The NYS Department of Labor requires the following form(s) before or on the first day of work. These forms are in addition to the appointment letters that are required to be sent. Please add the applicable form(s) to your new hire paperwork for all Academic and Student appointments (codes 102, 103, 112, 113, 115, 118, and 119). Adjunct (grading or other flat rate appointment, Code 112) Adjunct (contact hour appointment, Code 112) Faculty &amp; Staff Positions Monthly (Code 100-102) Research &amp; Staff Positions Nonexempt (Code 100-103) Semi-Monthly (Code 100-102-103 Semi-Monthly) Students Hourly (Code 118-119-115) Exhibits       Check locations    Building codes    Ethnicity codes    Education Level Table    Citizenship Table    Country Table    Personnel Action Codes    Attachments Chart    FAS Check Location Table                     AFRICANA       FI                   AMERICAN       CW                   ANIMAL       CM                   ANTHROPOLOGY       FP                   ARCHIVES       4S                   ARCE       FH                   ASIAN       AMERICAN       FF                   BIOLOGY       CN                   CAS       (DEAN)       5X                   CHEMISTRY       CP                   CLACS       CA                   CLASSICS       4H                   COMP       LIT       3D                   EAST       ASIAN       FG                   ECONOMICS       4J                   ENGLISH       4L                   EURO       STUDS       4N                   EXPO       WRIT       4K                   FINE       ART       CE                   FRENCH       4Z                   GER/D       HAUS       4P                   GSAS       5C                   GSAS       FIN AID       6J                   GSAS       STU/SVC       5C                   HEB       &amp; JUD       1B                   HISTORY       4R                   ICAS       CD                   IFS       4X                   IRISH       CI                   INTL       COOP       FC                   ITALIAN       4M                   JOURNAL       CF                   KING       JUAN       CH                   LAW       &amp; SOC                          LIB       STUD       CO                   LINGUIST       FX                   LA       MAISON       5Z                   M.A.P.       5X                   MED       RENN       CL                   M.E.S.       FH                   MET       STUD       FE                   MUS       STUD       CQ                   MUSIC       4V                   NR       EAST       FH                   NEU       SCI       5B                   NYU       FRAN       4Y                   NYU       SPAIN       CG                   ONASSIS       CB                   PHILOS       4W                   PHYSICS       4B                   POLITICS       CT                   PSYCH       5A                   REMARQUE       CK                   SLAVIC       CL                   SOCIO       5E                   SPAN/POR       FB                   STARR       CTR       4J                   SUMMER       CJ                   WAR,       PEACE       CF                     FAS Building Code Table                     CODE       BUILDING NAME                   BARNY       Barney       Bldg                   BASCI       Basic       Science Bldg                   BOBST       Bobst       Library, Bobst, 70 Wash. Sq. So.                   BRITT       Brittany       Hall, 55 E. 10 St.                   BRONF       Bronfman       Ctr Jewish Stu Life                   BROOM       Broom       Street                   BROWN       Brown       Building                   CARLY       Carlyle       Court, 25 Union Sq. West                   CARNG       Carnegie       Lab                   CASAI       Casa       Italiana, 24 W. 12 St.                   COLES       Coles       Sports &amp; Rec Center, 181 Mercer St.                   DAG       D'Agostino       Residence Hall, 110 W. 3 St.                   DHAUS       Deutsche       Haus                   E26       334       East 26th Street                   EAST       East       Building                   EDUC       Education       Building                   FAIR       Fairchild       Building                   GODD       Goddard       Residence Hall                   HAYDN       Hayden       Hall                   IFA       Institute       of Fine Arts                   IRLND       Ireland       House, 1 Wash. Mews                   IRM       Institute       of Rehab Medicine                   KEVOR       Kevorkian       Cntr, 1 Wash. Mews                   KIMBL       Kimball       Hall, 246 Greene St.                   KING       King       Juan Carlos I Spain Ctr, 82 Wash. Sq. East                   LAMAF       La       Maison Francaise                   LIBRT       Liberty       View                   LOEB       Loeb       Student Center, 566 La Guardia Pl.                   MAIN       Main       Bldg. 100 Wash. Sq. East                   MANHT       Manhattanville       College                   MEC       Management       Education Ctr                   MERRL       Merrill       Hall, 90 Trinity Pl.                   MEYER       Meyer       Hall of Physics                   NICH       Nichols       Hall                   NONE       No       NYU Address                   ONCTR       Onassis       Center, 58 W. 10 St.                   PLESS       Joseph       &amp; Violet Pless Hall, 82 Wash. Sq. East                   PRESA       Press       Annex                   RUBIN       Rubin       Residence Hall, 35 Fifth Ave.                   RUFUS       Rufus       D. Smith Hall                   SCHWZ       Schwartz       Hall                   SHIMK       Shimkin       Hall                   SOUTH       South       Bldg                   TEMP       Temporary       Building Code                   TISCH       Tisch       Hall                   UNCRT       University       Court                   VANDB       Vanderbilt       Hall                   WAVLY       Waverly       Bldg                   WEINS       Weinstein       Center, 5-11 University Pl.                   WWEAV       Warren       Weaver Hall, 251 Mercer St.                   1WPL       Safety       Center                   1WSN       School       of Social Work                   1WSV       1       Washington Square Village                   2UP       John       J. Creedon House                   2WSN       School       of Social Work                   2WSV       2       Washington Square Village                   3WPL       3-5       Washington Place                   3WSN       School       of Social Work                   3WSV       3       Washington Square Village                   4WSN       4       Washington Square North                   4WSV       4       Washington Square Village                   5WSN       Chase       Graduate House                   6WPL       Psychology       Building                   6WSN       Tasco       House, 6 Washington Square North                   7WPL       7       Washington Place                   7WSN       7-13       Washington Square                   8WPL       8       Washington Place                   10WPL       10       Washington Place                   10WVP       10       Waverly Place                   11W42       SCE       Midtown Center, 11 West 42nd St.                   11WAV       11       Waverly Place                   13UP       Health       Service Medical, 13 University Place                   14UP       University       Health Service, 14 University Place                   14WPL       14       Washington Place                   15MEW       Institute       of French Studies, 15 Wash. Mews                   15WPL       15       Washington Place                   16WVP       15       Waverly Place                   18WPL       Bookstore                   19REC       Stern       Business Bookstore                   19UP       19       University Place                   19W4       19       West Fourth Street                   21WPL       21       Washington Place                   22WSN       22       Washington Square North                   23W4       23       West Fourth Street                   25W4       25       West Fourth Street                   31W       31       West 11th Street                   33E3       Alumni       Hall                   40E7       Central       Plaza Annex                   44MEW       44       Washington Mews                   46MEW       46       Washington Mews                   48CSQ       48       Cooper Square                   58WSS       Catholic       Center                   64W3       64       West 3rd Street                   74TP       Placement                   75E3       Third       Ave North Residence Hall, 75 Third Ave., 100                   85W3       85       West Third Street                   87W3       Law       School, 87 West 3rd Street                   95TP       Graduate       Business Bookstore                   108W3       108       West Third Street                   110BL       110       Bleeker Street                   111SE       Center       Plaza                   113UP       113-115       University Place                   114LB       114       Liberty Street                   130MD       130       MacDougal Street                   137MD       137       MacDougal Street                   161-6       161       Avenue of the Americas                   240G       240       Greene Street                   240MR       Mercer       Street Dormitory, 240 Mercer Street                   242G       242       Greene Street                   249E       249       East 30th Street                   249SU       249       Sullivan Street                   269MR       269       Mercer Street                   285MR       285       Mercer Street                   360W       360       West 34th Street                   421FR       Dental       Center                   455FR       455       First Avenue                   466FR       466       First Avenue                   530LG       NYU       Prof Bookstore                   547LG       Mail       Services                   550FR       NYU       Medical Bookstore                   561LG       561       LaGuardia Place                   715BW       715       Broadway                   719BW       719       Broadway                   721BW       721       Broadway                   725BW       725       Broadway                   889W3       89       West Third Street                   915BW       915       Broadway                   33026       330       East 26th Street                   33425       334       East 25th Street                   33426       334       East 26th Street                   99999       Building       Missing/Illegible                      FAS Ethnicity Code Table                     ETHNICITY       CODE                   Asian       A                   Black       or African-American       B                   Native       American or Alaskan Native       N                   Native       Hawaiian or Other Pacific Islander       P                   White       W                   Hispanic       or Latino       H                                       About Us       Our Faculty       Departments and Programs       Research Centers, Institutes, and International Houses       News       Administrative Resources               Updated on 03&#047;04&#047;2015       Contact Us                             Contact Us"}, {"content": "CS470: Object Oriented Programming                           Object Oriented Programming    CSCI-UA.0470-001 Fall 2014 Mon/Wed 2:00 - 3:15, WWH 201       Instructor : Eric   Koskinen     Office Hours: Monday 4:00PM, WWH 402    Assistant : Avin Agrawal   Computer Science Department    Courant Institute of Mathematical Sciences ,   New York University                            Overview       Syllabus                                      Overview        Object-oriented (OO) programming has emerged as a significant  software development methodology. The goal of this course is  to learn how to build and evolve large-scale programs using  object-oriented programming. To this end, the course  introduces the important concepts of object-oriented languages  and design, and explores how these concepts are implemented.       Prerequisites: Computer Systems Organization (CSCI-UA 201).      Acknowledgments: This course is based on    the Object-Oriented    Programming course designed    by Robert Grimm .         Topics          In exploring object-oriented programming, we investigate three questions:               Design:     How do we think about a program in terms of objects? To    answer this question, we explore CRC cards, UML, and    design patterns.         Language Primitives:     How do we express object orientation? To answer this    question, we explore classes, interfaces, inheritance,    method dispatch, generics, operator overloading, and    reflection.              Language Implementation:     How do we realize object-oriented primitives? To answer    this question, we explore virtual method dispatch and    automatic memory management in detail.                  Design and primitives matter because they represent the    essence of object-oriented programming. Implementation    matters because it enables us to debug object-oriented    programs and tune their performance.         Project          The focus of our exploration of object-oriented programming   is a translator from Java to C++. You design, implement, and   evaluate your own translator as a term-long project, working   in teams of four to five students. In fact, you build two   versions of your translator, taking half a term for each   version and presenting your work in class on completion of   each version. To make the project manageable, your translator   only translates a restricted subset of Java into an even more   restricted subset of C++; though the second version covers   more functionality than the first version. I also provide you   with \"helper\" code, notably for parsing and pretty printing   program source files.             Each group elects a speaker, who coordinates with the    members of the group and with me. A new speaker is elected    at the middle of the term.             Your group's midterm and final project presentations address three main issues:               What are the design and implementation of your    translator?     How do you ensure that the translator meets the project    requirements? Notably, how do you convince yourself and    others that the translator actually works?     What was easy, hard, and/or surprising and how did that impact your translator?                 You have a 12 minute slot for your presentation, which    includes a demo of your translator and time to set up your    laptop.         Details      Group Meetings          Every project group meets with the instructor every other    week for an informal discussion of issues currently facing    the group. Group members will probably need additional    meetings amongst themselves to better coordinate their work.          Mailing List        All course-related announcements will be sent to the   course   mailing list . I encourage you to use this list to ask   questions and discuss issues related to the course. If you   have enrolled before the start of the term you are   automatically subscribed to the list. Otherwise, use the above   link to subscribe manually.         Grading     Group projects (50%), individual assignments (25%), final exam (25%).     Academic Integrity        Please review   the    departmental academic integrity policy . In this course,   you may discuss assignments with other students, but the   work you turn in must be your own. Do not copy another   student's work. You must do the projects as a group but not   with other groups and without consulting previous years'   students, code, etc. You should help other students and   groups on specific technical issues but you must acknowledge   such interactions. Copying code or other work without   giving appropriate acknowledgment is a serious offense with   consequences ranging from no credit to potential expulsion.       Textbooks     Required:      Object-Oriented   Design and Patterns, 2nd ed.    by Cay Horstmann, Wiley, 2005     C++ for Java Programmers by Mark Weiss,    Prentice Hall, 2003.         Recommended:        The C++ Programming Language, 4th ed. by Bjarne Stroustrup, Addison-Wesley, 2013.          Languages         This course relies on three different programming languages:          The source language is the language of programs serving    as inputs to the translator; it is a restricted version of    Java.     The target language is the language of outputs of the    translator; it is a restricted version of C++.     The translator language (for lack of a better term) is    the language of the translator itself; it is the full Java    5.0 JDK 1.5 language.              In more detail, the source language is    Java without nested classes, anonymous classes,    interfaces, enums, annotations, generics, the enhanced for    loop, varargs, and automatic boxing and    unboxing. Furthermore, the source language omits support    for synchronization, i.e., synchronized methods and    statements, and strict arithmetic operations, i.e. the     strictfp modifier. It also omits support for transient and     volatile fields as well as native methods. Finally, you    may omit method overloading but not method overriding for    the first version of the translator.             The target language is    C++ without virtual methods, inheritance, and, in    general, templates. It also omits features new to C++11,    notably lambda abstractions and type inference,    e.g., auto and decltype . It    does, however, include gcc's statement expressions,    i.e., ({ ... }) . When compared to C, the target    language does include support for basic classes,    exceptions, and name spaces. For the first version of the    translator, you can ignore memory management and assume an    infinite main memory. For the second version of the    translator, you need to automatically reclaim unused    memory through a so-called smart pointer. The smart    pointer library, as well as any library support for    implementing Java arrays, may use templates.             Most Java statements and expressions translate directly    into the corresponding C++ statements and expressions    (modulo minor language differences). As a result, the main    challenges for the course project are figuring out (1) how    to translate Java class hierarchies into C++ without    inheritance and (2) how to implement Java's virtual method    dispatch in C++ without virtual method dispatch, (3) how    to select the right overloaded method, and (4) how to    automatically manage memory without an existing garbage    collector. Note that we will explore how to approach each    challenge in class; we will also leave the latter two    challenges for the second version of the translator.             Besides the programming language itself, any version of    Java includes a rather extensive set of platform    libraries, with the facilities in    the java.lang package being tightly    integrated with Java's execution model. For our    translator, we only support    the hashCode() , equals() ,    and toString() methods in java.lang.Object     and the printing of numbers and strings through     out.print() and out.println() in     java.lang.System . Furthermore, we do not support the    dynamic loading of Java classes, but rather translate all    Java classes of the source program into one C++ program.             Please note that the translator need not perform any    correctness checks on source programs; in other words, you    can assume that source programs are free of compile-time    errors. At the same time, when writing your own Java test    programs, it seems prudent to test them with a regular    Java compiler.            Tools and Resources             For Java, we use the Java 2 Platform Standard Edition 5.0,    JDK 1.5, or    later. Oracle provides an    implementation for Linux. Apple provides an implementation    with Mac OS X, no installation required. In either case, you    need to separately install Java's API documentation. In the    case of Mac OS, the documentation is included    with Xcode ,    Apple's IDE.             For C++, we use gcc , the    GNU Compiler Collection, as our compiler. It is the default    compiler for Linux and included with Apple's Xcode for Mac    OS X.             If you are running Windows, please dual-boot into Linux or    use a virtual machine monitor such    as VirtualBox for    running Linux. Trying to get gcc and make work on Windows    (i.e., through a Unix emulation layer such as Cygwin) is not    recommended.             Like many large-scale software projects, we rely on a    version control system such    as git to manage program    sources and    on make to    automate the build management. If you are    using github or a similar    service, please make sure that your repository is not     publicly visible.             To simplify the task of reading source files in one    language, translating them into another language, and then    printing source files for that language, we use the xtc    toolkit for source-to-source translators . xtc includes a    parser for Java source files, which converts the external,    textual representation into an internal tree    representation. It also includes support for traversing,    modifying, and pretty-printing such trees.         You may also find the following resources useful:            Computing    facilities at Courant     Java    code conventions     A handy C++     quick reference .     Installation    instructions     for xtc     A detailed    guide to Git.     An overview of Git hosting    services . GitLab Cloud works well for our purposes.    JUnit : a framework for easily    performing unit tests on Java code."}, {"content": "Object-Oriented Programming                                       Object-Oriented Programming         (A.k.a. CSCI-UA.0470-001)    Fall 2012    Class: Tuesday/Thursday 2:00 &ndash; 3:15, WWH 312.    Instructor: Robert Grimm    Office hours: by appointment                 Robert Grimm         Overview     Details     Languages     Syllabus     Tools &amp; Resources         xtc                       Overview      Object-oriented programming is a form of &ldquo;computer  programming that emphasizes the structure of data and their  encapsulation with the procedures that operate upon it&rdquo;  (Britannica Concise Encyclopedia). Basically, &ldquo;an object is a  software bundle of related variables and methods. Software objects  are often used to model real-world objects you find in everyday  life&rdquo; (Sun&rsquo;s Java Tutorial). Object-oriented programming  is attractive because it &ldquo;promote[s] greater flexibility and  maintainability in programming, and is widely popular in large-scale  software engineering&rdquo; (Wikipedia).      Goal      To learn how to build and evolve large-scale programs using  object-oriented programming.      Topics      In exploring object-oriented programming, we investigate three  questions:           Design       How do we think about a program in terms of objects? To answer this   question, we explore CRC cards, UML, and design patterns.        Primitives       How do we express object orientation? To answer this question, we   explore classes, interfaces, inheritance, method dispatch, generics,   operator overloading, and reflection.        Implementation       How do we realize object-oriented primitives? To answer this   question, we explore virtual method dispatch and automatic memory   management in detail.             Design and primitives matter because they represent the essence of  object-oriented programming. Implementation matters because it  enables us to debug object-oriented programs and tune their  performance.      Project      The focus of our exploration of object-oriented programming is a  translator from Java to C++. You design, implement, and evaluate your  own translator as a term-long project, working in teams of four to  five students. In fact, you build two versions of your translator,  taking half a term for each version and presenting your work in class  on completion of each version. To make the project manageable, your  translator only translates a restricted subset of Java into an even  more restricted subset of C++; though the second version covers more  functionality than the first version. I also provide you with  &ldquo;helper&rdquo; code, notably for parsing and pretty printing  program source files.      Each group elects a speaker , who coordinates with the  members of the group and with me. A new speaker is elected at the  middle of the term.      Your group&rsquo;s midterm and final project presentations address  three main issues:           What are the design and implementation of your translator?      How do you ensure that the translator meets the project  requirements? Notably, how do you convince yourself and others that  the translator actually works?      What was easy, hard, and/or surprising and how did that impact  your translator?           You have a 15 minute slot for your presentation, which includes a  demo of your translator and time to set up your laptop.      You build a large-scale program because that is the domain with the  biggest promised impact of object-oriented programming. You build a  translator from Java to C++ for two reasons. First, how to translate  and transform programs is a real problem and a topic of active  research, including my own   and that  of several  other researchers . Second, the translator lets us explore both  Java and C++, but without a big break at the middle of the term as we  switch from one language to another. You build two versions of the  translator so that you can explore object-oriented programming with a  real program, learn what worked and what didn&rsquo;t work, and then  improve on your first experiences. I expect you to clearly improve  the second version; though I also expect you to reuse code from the  first version. Finally, you work in teams of students for two  reasons. First, it provides you with an opportunity for close  interaction with your peers in the face of a shared challenge.  Second, team work is the favored approach for building large-scale  programs both in academia and industry.     Class      Class is organized as part lecture and part guided discussion. I  provide a gentle introduction to individual topics and techniques,  usually illustrating them with the Java-to-C++ translator. Together,  we discuss alternatives and the reasoning behind the techniques.  Class also provides a good forum for asking questions and starting the  conversation of how to meet the challenges posed by your projects.      Contract      I provide the overall structure of the course, introducing topics  and techniques, sharing my experiences, and facilitating our  conversation. You actively participate in all aspects of the course,  sharing your ideas, questions, and concerns as well as realizing a  significant project. Together, we explore how to leverage  object-oriented programming to build large-scale programs.                  Details      Group Meetings      Every project group meets with the instructor every other week for  an informal discussion of issues currently facing the group. Group  members will probably need additional meetings amongst themselves to  better coordinate their work.      Class Notes      For each class, one student takes notes, which I will edit and post  on this web page. Depending on class size, we will rotate through  note takers a few times. Please  use this HTML template for writing  up your notes.      Textbooks      We rely on two textbooks:           Object-Oriented  Design &amp; Patterns (OODP), 2nd edition, by Cay Horstmann.      C++ for Java  Programmers (CFJP), by Mark Allen Weiss.           Additionally, The  C++ Programming Language , 3rd or special edition, by Bjarne  Stroustrup is a useful reference.      Mailing List      Please subscribe to the class mailing  list csci_ua_0470_001_fa12 .  Be sure to email your class-related questions to this list and not  just the instructor (unless, of course, they concern private rather  than technical or organizational issues). Note that messages sent to  this list from email accounts that are not subscribed to it  will be silently discarded.      Grading Policy      Approximately: 50% for projects; 25% for homework assignments and  note taking; 25% for final exams.                  Languages      This course relies on three different programming languages:         The source language is the language of programs serving  as inputs to the translator; it is a restricted version of Java.      The target language is the language of outputs of the  translator; it is a restricted version of C++.      The translator language (for lack of a better term) is  the language of the translator itself; it is the full Java 5.0  n&eacute;e JDK 1.5 language.           In more detail, the source language is  Java without nested classes, anonymous classes, interfaces,  enums, annotations, generics, the enhanced for loop, varargs, and  automatic boxing and unboxing. Furthermore, the source language omits  support for synchronization, i.e., synchronized methods and  statements, and strict arithmetic operations,  i.e. the strictfp modifier. It also omits support  for transient and volatile fields as well  as native methods. Finally, you may omit method  overloading but not method overriding for the first version of the  translator.       The target language is C++ without   virtual methods, inheritance, and, in general, templates. It also  omits features new to C++11, notably lambda functions and type  inference, e.g., auto and decltype . It  does, however, include gcc's statement expressions,  i.e., ({ &hellip; }) . When  compared to C, the target language does include support for basic  classes, exceptions, and name spaces. For the first version of the  translator, you can ignore memory management and assume an infinite  main memory. For the second version of the translator, you need to  automatically reclaim unused memory through a so-called smart pointer.  The smart pointer library, as well as any library support for  implementing Java arrays, may use templates.      Most Java statements and expressions translate directly into the  corresponding C++ statements and expressions (modulo minor language  differences). As a result, the main challenges for  the course project are figuring out (1) how to translate Java class  hierarchies into C++ without inheritance and (2) how to implement  Java&rsquo;s virtual method dispatch in C++ without virtual method  dispatch, (3) how to select the right overloaded method, and (4) how  to automatically manage memory without an existing garbage collector.  Note that we will explore how to approach each challenge in class; we  will also leave the latter two challenges for the second version of  the translator.      Besides the programming language itself, any version of Java  includes a rather extensive set of platform  libraries , with the facilities in the java.lang   package being tightly integrated with Java&rsquo;s execution model.  For our translator, we only support  the hashCode() , equals() ,  and toString() methods in java.lang.Object   and the printing of numbers and strings  through out.print() and out.println()   in java.lang.System . Furthermore, we do not support the  dynamic loading of Java classes, but rather translate all Java classes  of the source program into one C++ program.      Please note that the translator need not perform any correctness  checks on source programs; in other words, you can assume that source  programs are free of compile-time errors. At the same time, when  writing your own Java test programs, it seems prudent to test them  with a regular Java compiler.                  Syllabus      Please be sure to regularly check this page for updates.           Sep 4    Introductions &mdash; to the course and to each other.   Slides .        Sep 6    Our first Java class: a four-dimensional point.      Read OODP chapter 1 before class.    Point.java .   Notes .            Sep 11    Our first C++ class: a four-dimensional point.      Read CFJP chapters 0, 1, 2, and 4 up to   and excluding 4.6 before class.    Names, sources, and binaries .   Notes .    Point.h ,   Point.cc , and   Main.cc .            Sep 13    Designing our translator: CRC cards and UML at work.      Read OODP chapters 2 and 3 before class.    Notes .            Sep 18    Tools of our trade: make, version control, and xtc.      Notes  on installing xtc . Test your xtc installation with &ldquo; make  check-rats check-c check-java &rdquo;.    Translator.java .    Notes .            Sep 20    Q &amp; A on design and tools.      Homework 1 . Due 9/27 before class.   My solution .    Notes .            Sep 25    Inheritance, method overriding, and virtual method  dispatch.      Read OODP chapters 4 and 6 before class.    Polymorphism .   Notes .    Code .            Sep 27    Implementing inheritance and virtual method dispatch by hand.      Notes .    skeleton.h ,   java_lang.h ,   java_lang.cc ,  and main.cc .            Oct 2    Q &amp; A on inheritance and virtual method dispatch.   Notes .        Oct 4    Object-oriented design revisited.   Notes .        Oct 9    All about arrays, incl. how to translate Java arrays into C++.   Notes .      Array.java .    java_lang.h ,   java_lang.cc ,  and main.cc .            Oct 11    Generics: a better translation of Java arrays into C++.   Notes .      Read OODP chapter 8.3 and CFJP chapter 7 before class.    From a list of objects to a   generic list and back again.    A better translation for arrays:   java_lang.h ,   java_lang.cc ,  and main.cc .            Oct 16    Fall recess. No class .        Oct 18    Traversing graphs: the visitor design pattern.   Calculator.java .   Notes .      Read OODP chapters 5 and 10 before class.            Oct 23    Q &amp; A on generics and the visitor design pattern.   Notes .        Oct 25    In-class midterm project presentations.        Oct 30    Frankenstorm. No class .        Nov 1    Frankenblackout. No class . &mdash; You may want to read  OODP chapter 7 anyway and explore xtc.tree.Visitor   with last  year's notes as a guide. You are not responsible for  this material on the final exam.        Nov 6    Will the real method please stand up? Method overloading  in Java. Notes .      Overloaded.java .    Java Language Specification (2nd edition) .            Nov 8    Operators are methods: operator overloading in C++.   Notes .      Read CFJP chapter 5 before class.    Operator [] and &lt;&lt; :   java_lang.h ,   java_lang.cc , and   main.cc .    Operator = , * , and -&gt; :   ptr.h and ptr.cc .            Nov 13    Q &amp; A on method and operator overloading.   Notes .        Nov 15    Explicit memory management in C++: the Law of the Big Three.   Notes .      Read CFJP chapters 3.3, 4.6, and 6.3 before class.    stringval.h and   stringval.cc .            Nov 20    Smart pointers in C++: a reference-counting garbage  collector in (little more than) one screen of code.      Read this  article before class.    Notes .    ptr.h .    java_lang.h ,   java_lang.cc , and   main.cc .            Nov 22    Thanksgiving. No class .        Nov 27    The casts of C++: hurling our smart pointer from type to type.      Read CFJP chapters 1.4.1 and 6.7 before class.    Notes .    cast.cc .    ptr.h .    java_lang.h ,   java_lang.cc (unchanged), and   main.cc .            Nov 29    Q &amp; A on explicit memory management and casts.   Notes .        Dec 4    Traits and iterators in C++.      Notes .    ptr.h   and main.cc .            Dec 6    Performance considerations: getting it done versus getting it done  quickly. Notes .        Dec 11    Q &amp; A &mdash; the object-oriented programming potpurri.        Dec 13    In-class final exams. Study guide .        Dec 18    2:00 &ndash; 3:50, WWH 312. Final project presentations.                         Tools and Resources      For Java , we use the Java 2 Platform Standard  Edition 5.0, n&eacute;e JDK 1.5, or  later. Oracle provides an  implementation for Linux. Apple provides an implementation with Mac  OS X, no installation required. In either case, you need to  separately install Java&rsquo;s API documentation. In the case of Mac  OS, the documentation is included with   Xcode ,  Apple&rsquo;s IDE.      For C++ , we  use gcc , the GNU Compiler  Collection, as our compiler. It is the default compiler for Linux and  included with Apple&rsquo;s Xcode for Mac OS X.      If you are running Windows , please dual-boot into  Linux or use a virtual machine monitor such as  as VirtualBox for running  Linux. Trying to make gcc and make work on Windows (i.e., through a  Unix emulation layer such as Cygwin) is an exercise in pointless pain  and suffering.      Like many large-scale software projects, we rely on  a version control system such  as git to manage program sources and  on make to automate  the build management . If you are using   github or a similar service, please  make sure that your repository is not publicly visible.      To simplify the task of reading source files in one language,  translating them into another language, and then printing source files  for that language, we use  the xtc toolkit for  source-to-source translators . xtc includes a parser for  Java source files, which converts the external, textual representation  into an internal tree representation. It also includes support for  traversing, modifying, and pretty-printing such trees.      You may also find the following resources useful:           Computing  facilities at Courant.      Clark Barrett&rsquo;s introduction to CVS   and instructions for remote CVS access .      A detailed guide to  git.      An article   on using Eclipse&rsquo;s CDT (C Development Tools).      Oracle&rsquo;s Java  generics tutorial .      Angelika  Langer&rsquo;s Java  generics FAQ .      JUnit : a framework for easily  performing unit tests on Java code.      The C++  FAQ Lite .      A  handy C++  quick reference .      A handy C++ and STL  reference .      While C++ does not support super , there is a nice   work-around   for single inheritance.      An in-depth discussion  of smart  pointers .      O&rsquo;Reilly&rsquo;s &ldquo;What Is an Iterator in  C++?&rdquo;, part  1 and   part  2 ."}]}]