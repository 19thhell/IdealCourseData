[{"detail": [{"content": "Distributed Systems (Fall 2010)                            Distributed Systems      (G22.3033-001, Fall 2010)                [ Home ]   [ Schedule ]   [ Labs ]     [ 2009 site ]   [ 2008 site ]   [ 2007 site ]          Announcements     Sample final quiz from Fall09 , Fall08 .  Mid-term quiz solution is here .  Mid-term is open-book, open-notes. You may also bring a printed copy of your labs. Laptop usage is not allowed.  Sample midterm quiz from Fall08 , from Fall09 .  --!>       Class schedule: Thursdays 5:00 - 6:50pm (CIWW 201) .   Class instructor: Jinyang Li (Office hour: Wed 5-6pm. Please email ahead if you'd like to see me at any other time)   Instructional assistance: Nguyen Tran (Office hour: Wed 4-5pm)   Discussions: http://groups.google.com/group/nyu-ds10    Course information  Distributed systems help programmers aggregate the resource of many networked computers to construct highly available and scalable services. This class teaches the abstractions, design and implementation techniques that allow you to build fast, scalable, fault-tolerant distributed systems. Topics include multithreading, network programming, consistency,  naming, fault tolerance, and security and several case studies of distributed systems.    This class is a graduate-level course, but undergraduate students are welcome! The course consists of lectures, a series of programming labs and a (small) final project.      This class satisfies  the Ph.D. breadth requirement in Systems and also serves as a M.S. capstone course .      Why should you take this class?  If you are curious about the nuts and bolts of computer systems, you will enjoy this class. The last offering of this class has an overall class rating of 4.72 and overall instructor rating of 4.74. Here are some (carefully selected) quotes from students: ``The level of rigor is what makes us learn the concepts'', ``Awesome. I feel I became a much better engineer through this class and more employable as well. worth the sweat and tears''.     Prerequisites:  1. Undergraduate Operating Systems  2. Programming experience in C/C++ is important for the programming labs     Useful Books   The following books may help provide background help with lab programming. None of them are required. They are listed in rough order of usefulness.    Principles of Computer System Design. Jerome Saltzer and M. Frans Kaashoek, Morgan Kaufmann.  Distributed Systems: Principles and Paradigms, Andrew Tanenbaum and Maarten van Steen, Prentice Hall.  Advanced Programming in the UNIX Environment. W. Richard Stevens.   The C++ Programming Language. Bjarne Stroustrup. Addison Wesley.  UNIX Network Programming. Volume 1: Networking APIs: Sockets and XTI. W. Richard Stevens.  Modern Operating Systems. Andrew Tanenbaum. Prentice Hall.     Questions or comments? email dss-staff@cs.nyu.edu   Policy on academic integrity"}]},
{"detail": [{"content": "Distributed Systems (Fall 2010)                            Distributed Systems      (G22.3033-001, Fall 2010)                [ Home ]   [ Schedule ]   [ Labs ]     [ 2009 site ]   [ 2008 site ]   [ 2007 site ]          Announcements     Sample final quiz from Fall09 , Fall08 .  Mid-term quiz solution is here .  Mid-term is open-book, open-notes. You may also bring a printed copy of your labs. Laptop usage is not allowed.  Sample midterm quiz from Fall08 , from Fall09 .  --!>       Class schedule: Thursdays 5:00 - 6:50pm (CIWW 201) .   Class instructor: Jinyang Li (Office hour: Wed 5-6pm. Please email ahead if you'd like to see me at any other time)   Instructional assistance: Nguyen Tran (Office hour: Wed 4-5pm)   Discussions: http://groups.google.com/group/nyu-ds10    Course information  Distributed systems help programmers aggregate the resource of many networked computers to construct highly available and scalable services. This class teaches the abstractions, design and implementation techniques that allow you to build fast, scalable, fault-tolerant distributed systems. Topics include multithreading, network programming, consistency,  naming, fault tolerance, and security and several case studies of distributed systems.    This class is a graduate-level course, but undergraduate students are welcome! The course consists of lectures, a series of programming labs and a (small) final project.      This class satisfies  the Ph.D. breadth requirement in Systems and also serves as a M.S. capstone course .      Why should you take this class?  If you are curious about the nuts and bolts of computer systems, you will enjoy this class. The last offering of this class has an overall class rating of 4.72 and overall instructor rating of 4.74. Here are some (carefully selected) quotes from students: ``The level of rigor is what makes us learn the concepts'', ``Awesome. I feel I became a much better engineer through this class and more employable as well. worth the sweat and tears''.     Prerequisites:  1. Undergraduate Operating Systems  2. Programming experience in C/C++ is important for the programming labs     Useful Books   The following books may help provide background help with lab programming. None of them are required. They are listed in rough order of usefulness.    Principles of Computer System Design. Jerome Saltzer and M. Frans Kaashoek, Morgan Kaufmann.  Distributed Systems: Principles and Paradigms, Andrew Tanenbaum and Maarten van Steen, Prentice Hall.  Advanced Programming in the UNIX Environment. W. Richard Stevens.   The C++ Programming Language. Bjarne Stroustrup. Addison Wesley.  UNIX Network Programming. Volume 1: Networking APIs: Sockets and XTI. W. Richard Stevens.  Modern Operating Systems. Andrew Tanenbaum. Prentice Hall.     Questions or comments? email dss-staff@cs.nyu.edu   Policy on academic integrity"}, {"content": "Jinyang's homepage              Jinyang Li &#26446;&#37329;&#25196;    Associate Professor     715 Broadway Room 708  New York, NY 10003  Fax: 212-9954123  Phone: 212-9983098  Contact: firstname at cs nyu edu                     [ Home | Publications | Teaching | CV ]         Recent software release:     Piccolo  is a programming model for writing large-scale distributed computations. It is  a lot faster than Hadoop!  Kaleidoscope  is a hard-to-block censorship circumvention system.               My research interests are in distributed systems and computer networks.  Specifically, I am building storage and communication infrastructures that are fast, reliable and easy to use. I work with a group of amazing students in the  NYU systems group .     My research is supported in part by the National Science Foundation, Google, and the Sloan Fellowship. I am also proud to be  part of the newly founded NYU WIRELESS center.   I am teaching grad-level distributed systems in Fall 2014.   Current Projects     Piccolo , a  programming paradigm for writing distributed in-memory computations.  Walter, geo-replicated transactional storage.  Kaleidoscope , a web cen s or s hip circumvention system.  ROMA/Hermes, high performance wireless networking.      Older projects:     SumUp , Sybil-resilient content voting.  WheelFS , a wide-area file system.  Friendstore , a cooperative backup system   The OverCite cooperative digital library.  searchy , a fast and flexible search engine   Distributed Hash Tables and p2psim , a simulator for DHTs.   Grid multihop mesh networks .     Service     2014: USENIX ATC, OSDI (light), SoCC  2013: Eurosys, HotOS, SoCC, APSys, LADIS  2012: OSDI   2011: HotCloud, NSDI  2010: SIGCOMM, IPTPS, NetEcon, WOSN, APSys  2009: IPTPS   2008: NSDI (light)  2007: NSDI     About me   I got a B.S. in computer science from National University of Singapore (1998). My undergraduate adviser is Y.C. Tay . I got a Ph.D. from MIT (2005), working  under the guidance of Robert Morris and Frans Kaashoek as a lucky PDOS member. From 2005-2006, I was a postdoc at Berkeley with Scott Shenker ."}]},
{"detail": [{"content": "Distributed Systems (Fall 2010)                            Distributed Systems      (G22.3033-001, Fall 2010)                [ Home ]   [ Schedule ]   [ Labs ]     [ 2009 site ]   [ 2008 site ]   [ 2007 site ]          Announcements     Sample final quiz from Fall09 , Fall08 .  Mid-term quiz solution is here .  Mid-term is open-book, open-notes. You may also bring a printed copy of your labs. Laptop usage is not allowed.  Sample midterm quiz from Fall08 , from Fall09 .  --!>       Class schedule: Thursdays 5:00 - 6:50pm (CIWW 201) .   Class instructor: Jinyang Li (Office hour: Wed 5-6pm. Please email ahead if you'd like to see me at any other time)   Instructional assistance: Nguyen Tran (Office hour: Wed 4-5pm)   Discussions: http://groups.google.com/group/nyu-ds10    Course information  Distributed systems help programmers aggregate the resource of many networked computers to construct highly available and scalable services. This class teaches the abstractions, design and implementation techniques that allow you to build fast, scalable, fault-tolerant distributed systems. Topics include multithreading, network programming, consistency,  naming, fault tolerance, and security and several case studies of distributed systems.    This class is a graduate-level course, but undergraduate students are welcome! The course consists of lectures, a series of programming labs and a (small) final project.      This class satisfies  the Ph.D. breadth requirement in Systems and also serves as a M.S. capstone course .      Why should you take this class?  If you are curious about the nuts and bolts of computer systems, you will enjoy this class. The last offering of this class has an overall class rating of 4.72 and overall instructor rating of 4.74. Here are some (carefully selected) quotes from students: ``The level of rigor is what makes us learn the concepts'', ``Awesome. I feel I became a much better engineer through this class and more employable as well. worth the sweat and tears''.     Prerequisites:  1. Undergraduate Operating Systems  2. Programming experience in C/C++ is important for the programming labs     Useful Books   The following books may help provide background help with lab programming. None of them are required. They are listed in rough order of usefulness.    Principles of Computer System Design. Jerome Saltzer and M. Frans Kaashoek, Morgan Kaufmann.  Distributed Systems: Principles and Paradigms, Andrew Tanenbaum and Maarten van Steen, Prentice Hall.  Advanced Programming in the UNIX Environment. W. Richard Stevens.   The C++ Programming Language. Bjarne Stroustrup. Addison Wesley.  UNIX Network Programming. Volume 1: Networking APIs: Sockets and XTI. W. Richard Stevens.  Modern Operating Systems. Andrew Tanenbaum. Prentice Hall.     Questions or comments? email dss-staff@cs.nyu.edu   Policy on academic integrity"}, {"content": "Jinyang's homepage              Jinyang Li &#26446;&#37329;&#25196;    Associate Professor     715 Broadway Room 708  New York, NY 10003  Fax: 212-9954123  Phone: 212-9983098  Contact: firstname at cs nyu edu                     [ Home | Publications | Teaching | CV ]         Recent software release:     Piccolo  is a programming model for writing large-scale distributed computations. It is  a lot faster than Hadoop!  Kaleidoscope  is a hard-to-block censorship circumvention system.               My research interests are in distributed systems and computer networks.  Specifically, I am building storage and communication infrastructures that are fast, reliable and easy to use. I work with a group of amazing students in the  NYU systems group .     My research is supported in part by the National Science Foundation, Google, and the Sloan Fellowship. I am also proud to be  part of the newly founded NYU WIRELESS center.   I am teaching grad-level distributed systems in Fall 2014.   Current Projects     Piccolo , a  programming paradigm for writing distributed in-memory computations.  Walter, geo-replicated transactional storage.  Kaleidoscope , a web cen s or s hip circumvention system.  ROMA/Hermes, high performance wireless networking.      Older projects:     SumUp , Sybil-resilient content voting.  WheelFS , a wide-area file system.  Friendstore , a cooperative backup system   The OverCite cooperative digital library.  searchy , a fast and flexible search engine   Distributed Hash Tables and p2psim , a simulator for DHTs.   Grid multihop mesh networks .     Service     2014: USENIX ATC, OSDI (light), SoCC  2013: Eurosys, HotOS, SoCC, APSys, LADIS  2012: OSDI   2011: HotCloud, NSDI  2010: SIGCOMM, IPTPS, NetEcon, WOSN, APSys  2009: IPTPS   2008: NSDI (light)  2007: NSDI     About me   I got a B.S. in computer science from National University of Singapore (1998). My undergraduate adviser is Y.C. Tay . I got a Ph.D. from MIT (2005), working  under the guidance of Robert Morris and Frans Kaashoek as a lucky PDOS member. From 2005-2006, I was a postdoc at Berkeley with Scott Shenker ."}, {"content": "NYU Computer Science Department &gt; Networks, Operating and Distributed Systems                                                                                                                                 Search                                                  go                         Location          Contacts      Directions      NYC Information            Admissions          Undergraduate Admissions      Graduate Admissions           People           Faculty        Researchers/Visitors      Administration/Staff      Students: PhD / MS      Alumni / In Memoriam             Research           Research Areas      Tech Reports      Theses: PhD / MS        Faculty Recognition      Student Recognition           Education           Undergraduate Program      Graduate Program : PhD / MS        Courses      Office Hours           News / Events           Colloquia        Calendar: Grad / Undergrad           Job Openings           Faculty Positions             Links           Libraries      Student Organizations      CIMS Computing                                                                                                                                                                               Networks, Operating and Distributed Systems   Edit Title                Edit Body      Faculty    Robert Grimm  Zvi M. Kedem  Jinyang Li  Dennis E. Shasha  Lakshminarayanan Subramanian  Michael Walfish    Systems and networking research explores how to structure the basic software running on individual computers and how to coordinate between different computers. Significant challenges include how to support increasing numbers of processors in modern computer systems, leverage the many embedded and mobile computing devices, and build services that scale to a global audience.    Robert Grimm is interested in the interaction of programming languages and systems. The focus of his research is on exploring how to leverage programming language technologies for making operating and distributed systems easier to build, extend, and administer. Current efforts include Na Kika, a platform for securely extending web applications and scaling them to a global audience through edge-side hosting, and xtc, a toolkit for making programming languages and their compilers easily extensible. He is using the xtc toolkit to realize the Jeannie language, which combines all of Java and all of C into a new language that eliminates verbose boiler-plate code, enables static error detection across the language boundary, and simplifies dynamic resource management.    Zvi Kedem has conducted research in computational complexity (algebraic complexity, VLSI complexity); computer graphics (surface reconstruction, BSP tree algorithm); database, knowledge-based systems, and data mining (concurrency control, relational discrete event systems, pincer-search algorithm); parallel and distributed systems (parallel algorithms, compilation for special-purpose parallel machines, reliable parallel computations on LANs and the WWW). His research focus is algorithmic techniques for designing computer-based systems.    Jinyang Li 's research interests are in distributed systems and computer networks, and information retrieval systems. Large-scale distributed systems increasingly rely on grassroot deployments, as demonstrated by the popular peer-to-peer file sharing applications and community wireless mesh networks. It is difficult to ensure robustness and security in such distributed systems since the hundreds of nodes comprising these systems are typically unreliable, selfish and potentially malicious. One of the goals of Jinyang's research is to design and build reliable and secure peer-to-peer systems and wireless networks.    Dennis Shasha 's research interests are focused on three areas: algorithmic and visualization support for computational biology, time series analysis, and tree and graph pattern matching. In computational biology, Dennis Shasha works on tools and algorithms for plant genomics and proteomics research. Time series analysis is needed in many areas ranging from physics to finance to music. Dennis Shasha and collaborators are working on efficient algorithms for performing online windowed correlation analysis on very large time series datasets (thousands or even millions of numbers). Graph pattern matching problems also arise in many areas from XML querying to chemistry; Denis Shasha's group developed a number of algorithms and software tools for various graph matching problems. Dennis Shasha also works on several themes in databases: privacy-protection (when the server cannot be trusted as in out-sourcing cases), database tuning, and testing.    Lakshminarayanan Subramanian 's research interests span the areas of networking, distributed systems, security and technologies for developing countries. He is exploring a range of topics including routing protocol design, security issues in routing protocols, quality of service, congestion control, overlay networks and wireless networks. His current focus is on practical security problems in network protocols and distributed systems (enterprise security and byzantine fault tolerant systems) and systems/networking challenges in developing country settings (issues of low cost connectivity solutions for rural villages and how to make distributed systems operate in environments with intermittent power). He is one of the designers of WiLDNet, a lo-cost network deployed in parts of the world from Ghana to Philippines.    Michael Walfish 's research interests are in systems, security, and networking. He has worked on untrusted computation, untrusted storage, failure detection in distributed systems, naming, network architecture, verifiable auctions, and denial-of-service defense.    Related Web Pages    Networks and Wide-Area Systems Group  eXTensible C  Na Kika          Edit All                   top | contact webmaster"}]}]