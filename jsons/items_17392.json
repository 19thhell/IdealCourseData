[{"detail": [{"content": "Curriculum - Computer Science, BS | Computer Science, BS | NYU Polytechnic School of Engineering                                                                                                 NYU Abu Dhabi | NYU Shanghai         QuickLinks Bulletin   Directory   Employment and Career Development   Events Calendar   Human Resources / Careers   Information Technology Systems   Library   Make a Gift   NYU Classes   NYUAlbert (PS DATA)   NYUHome   Records and Registration   Services and Resources   Students   Alumni   Faculty   Staff                          Admissions  Undergraduate Admissions Graduate Admissions Online Learning Financial Aid Accepted Undergraduates Accepted Graduates  Academics  Majors and Programs Departments Honors Program BS/MS Program Study Abroad Online Learning Support + Services Graduate School  Records and Registration Class Schedule Course Textbooks School Calendar Code of Conduct Bulletin Women in Engineering  Research  Message from the Associate Provost Sponsored Research Centers + Institutes Labs + Groups CITE Game Innovation Lab Cross-Institution \u201cSeed\u201d Research Undergraduate Summer Research Bern Dibner Library Institutional Research Bioengineering IT + Media Urban Systems  Outreach  Incubators NYC Media Lab NYC Seed Enterprise Learning Center for K12 STEM Education Employment and Career Development PowerBridgeNY  Student Life  Athletics Student Affairs Public Safety Graduate Student Life and Services International Students + Scholars Residence Life and Housing Services Student Activities and Resource Center Students with Disabilities Student Resources Student Orientation  About  Directions Manhattan Directions Hours Leadership and Administration Mission News and Publications Campus Transformation Middle States Self-Study NYU Merger Past, Present, Future Giving                                          Home / Academics / Majors and Programs / Computer Science, BS                         Computer Science, BS                                                             Curriculum - Computer Science, BS                       Here we provide an overview of the of the new Computer Science, BS curriculum. The full description of the program and its requirements can be obtained from the Computer Science and Engineering Department. To see what your 4-year schedule of classes might look like if you pursued this degree, visit the Typical Course Schedule page.   On this page, you&#39;ll find:     Prerequisites for Computer Science Courses for Computer Science BS Degree   Required Computer Science Courses   Required Mathematics Courses   Required Engineering Courses   Science Requirement   Humanities and Social Sciences Requirement   Elective Requirement   Additional Requirements   Elective Offerings     Prerequisites for Computer Science Courses for Computer Science BS Degree     Flowchart explaining prerequisites for Computer Science courses (Click to enlarge)     Required Computer Science Courses   4.00 Credits Introduction to Programming & Problem Solving CS-UY 1114 This course introduces problem solving and computer programming and is for undergraduate Computer Science and Computer Engineering majors who have limited prior experience in programming in any language. The course covers fundamentals of computer programming and its underlying principles using the Python programming language. Concepts and methods introduced in the course are illustrated by examples from various disciplines. ABET competencies: a,b,c, e, f, g, k Corequisite: EX-UY 1 2.00 Credits Introduction to Computer Science CS-UY 1122 This is a breadth-first course that introduces computer-science majors to several subdisciplines in the computer-science field. The course is built around the theme that computer science is the study of algorithms and includes much more than programming. The course introduces hardware, virtual machines, software, applications and social issues in computing. Prerequisite: CS-UY 1114 and only first-year Computer Science students are permitted to enroll in this introductory level course 4.00 Credits Object Oriented Programming CS-UY 1124 This intermediate-level programming course teaches object-oriented programming in C++. Topics: Pointers, dynamic memory allocation and recursion. Classes and objects including constructors, destructors, methods (member functions) and data members. Access and the interface to relationships of classes including composition, association and inheritance. Polymorphism through function overloading operators. Inheritance and templates. The standard template library is used to introduce elementary data structures and their use. Grade of C- or better required of computer science and computer engineering majors. Prerequisite: CS-UY 1114 (C- or better) or CS-UY 1133 (A- or better). ABET competencies: c, e, k. Corequisite: EX-UY 1 4.00 Credits Data Structures and Algorithms CS-UY 2134 This course covers abstract data types and the implementation and use of standard data structures. Topics: Fundamental algorithms and the basics of algorithm analysis. A grade of C- or better is required of undergraduate computer science and computer-engineering majors. Prerequisites: CS-UY 1124 (C- or better) and MA-UY 1024. ABET competencies: a, b, c, e. 4.00 Credits Computer Architecture and Organization CS-UY 2214 This course covers is a top-down approach to computer design. Topics: Computer architecture, introduction to assembly language programming and machine language set design. Computer organization, logical modules; CPU, memory and I/O units. Instruction cycles, the datapath and control unit. Hardwiring and microprogramming. The memory subsystem and timing. I/O interface, interrupts, programmed I/O and DMA. Introduction to pipelining and memory hierarchies. Fundamentals of computer networks. Prerequisites: CS-UY 2204 for computer engineering majors; CS-UY 2134 (C- or better) and MA-UY 2314 for computer science majors. Students who are neither computer engineering majors nor computer science majors must take either CS-UY 2204 OR CS-UY 2134 (C- or better) and MA-UY 2314. ABET competencies: a, c, e. 3.00 Credits Design & Analysis of Algorithms CS-UY 2413 This course covers fundamental principles of the design and analysis of algorithms. Topics include asymptotic notation, recurrences, randomized algorithms, sorting and selection, balanced binary search trees, augmented data structures, advanced data structures, algorithms on strings, graph algorithms,geometric algorithms, greedy algorithms, dynamic programming and NP completeness. Prerequisites: CS-UY 2134 (C- or better) and MA-UY 2312/2322. 4.00 Credits Introduction to Operating Systm CS-UY 3224 3.00 Credits Software Engineering CS-UY 4513 Focusing on software engineering, the course introduces techniques to specify, design, test and document medium and large software systems. Design techniques include information engineering, object orientation and complexity measures. Also covered are testing methods, such as path testing, exhaustive test models and construction of test data. An introduction to software tools and project management techniques is presented. Student projects involve team software development and tracking. Prerequisites: CS-UY 2134(C- or better), CS-UY 3224 and senior status. 3.00 Credits Design Project CS-UY 4523 Students or several students work with a faculty member and/or graduate students on a current topic in computer science. Each term, a project course with a particular theme is offered by the Department of Computer and Information Science. A faculty member assigns individual or group projects. The project course is highly structured and supervised closely by faculty. Students are expected to use the design and project-management skills they learned in CS-UY 4513 Software Engineering. Alternatively, students may work with a faculty member on an individual project of mutual interest. A written report and oral presentation are required. Prerequisite: CS-UY 4513 or CS-UY 3513.   Required Mathematics Courses   4.00 Credits Calculus I MA-UY 1024 This course covers library of Functions: functions of one variable. Limits, derivatives of functions defined by graphs, tables and formulas, differentiation rules for power, polynomial, exponential and logarithmic functions, derivatives of trigonometric functions, the product and quotient rule, the chain rule, applications of the chain rule, maxima and minima, optimization. MA 1324 is for students who wish to take MA 1024 but need more review of precalculus. MA1324 covers the same material as MA1024 but with more contact hours a week, incorporating a full discussion of the required precalculus topics. Prerequisite: Placement Exam or MA-UY 912 or MA-UY 914. Corequisite: EX-UY 1 4.00 Credits Calculus II MA-UY 1124 This course covers definite integrals, theorems about integrals, anti-derivatives, second fundamental theorem of calculus, techniques of integration, introduction to ordinary differential equations, improper integrals, numerical methods of integration, applications of integration, sequences, series, power series, approximations of functions via Taylor polynomials, Taylor series. Corequisite: EX-UY 1. 4.00 Credits Data Analysis MA-UY 2224 An introductory course to probability and statistics. It affords the student some acquaintance with both probability and statistics in a single term. Topics in Probability include mathematical treatment of chance; combinatorics; binomial, Poisson, and Gaussian distributions; the Central Limit Theorem and the normal approximation. Topics in Statistics include sampling distribution of sample mean and sample variance; normal, t-, and Chi-square distributions; confidence intervals; testing of hypotheses; least square regression model. Applications to scientific, industrial, and financial data are integrated into the course. NOTE: Cannot be taken if student is also taking or has already taken MA-UY 3012 or MA-UY 3022. Prerequisite: MA-UY 1124, MA-UY1424, or MA-UY 1132 4.00 Credits Discrete Mathematics MA-UY 2314 Logic, proofs, set theory, functions, relations, asymptotic notation, recurrences, modeling computation, graph theory. Prerequisite: Math Diagnostic Exam or MA-UY 912 or MA-UY 914 (minimum calculus level required). Note: This course and CS-GY 6003 cannot both be taken for credit.   Note that MA 2034 Linear Algebra and Differential Equations or another linear algebra course is recommended, but not required. Some CS electives have knowledge of linear algebra as a prerequisite. Students planning to take such electives should plan accordingly.   Required Engineering Courses   1.00 Credits Engineering and Technology Forum EG-UY 1001 In this course the notion of invention, innovation and entrepreneurship (i2e) is introduced to the students\u2019 educational experience. Students will be exposed to elements of a research-intensive institution and diverse research performed by leading engineers, scientists, inventors and entrepreneurs. 3.00 Credits Introduction to Engineering and Design EG-UY 1003 This course introduces selected aspects of the history, philosophy, methodology, tools and contemporary topics in engineering. Also included are basic engineering experimentation and data analysis, a team design project and analysis and presentation of engineering data and designs.   Science Requirement   You may choose any 3 science courses (each at least 3 credits) from the courses offered for credit to engineering or natural science majors. For example, you might choose to take a sequence of 3 physics courses, 3 biology courses, or 3 chemistry courses, or you might choose to take introductory courses in physics, chemistry, and biology, or you might choose to take 2 courses in one science and another course in a different science.   Humanities and Social Sciences Requirement   You are required to take 6 courses in humanities and social sciences. Three of these courses are specified below; the remaining 3 courses are electives.   HUSS-UY 1013W ( Please refer to the bulletin ) HUSS-UY 1023W ( Please refer to the bulletin ) PL-UY 2143 ( Please refer to the bulletin )   Students may take any Ethics course instead of PL2143 with approval of the advisor.   Electives     18 additional credits in computer science electives   26 credits of totally free electives     Additional Requirements     A grade of at least C- is required in CS-1114, CS-1124, and CS-2134.   Students must satisfy the Polytechnic School of Engineering requirements for the Bachelor of Science Degree     Elective Offerings   The following is a list of electives offered by the Computer Science and Engineering department. They consist of undergraduate courses, as well as graduate courses open to undergraduates. Please note that in order to enroll in graduate courses, juniors and seniors must have a 3.0 GPA or better and adviser approval.   Undergraduate Courses   4.00 Credits Digital Logic and State Machine Design CS-UY 2204 This course covers combinational and sequential digital circuits. Topics: Introduction to digital systems. Number systems and binary arithmetic. Switching algebra and logic design. Error detection and correction. Combinational integrated circuits, including adders. Timing hazards. Sequential circuits, flipflops, state diagrams and synchronous machine synthesis. Programmable Logic Devices, PLA, PAL and FPGA. Finite-state machine design. Memory elements. A grade of C or better is required of undergraduate computer-engineering majors. Prerequisite: CS-UY 1114 (C- or better) or CS-UY 1133 (C- or better). ABET competencies: a, c, e, k. 3.00 Credits Introduction to Databases CS-UY 3083 This course introduces database systems and their approach as a mechanism to model the real world. The course covers data models (relational, object-oriented), physical database design, query languages, query processing and optimization, as well as transaction management techniques. Implementation issues, object oriented and distributed databases also are introduced. Prerequisites: CS 2134 (C- or better) 4.00 Credits Introduction to Parallel and Distributed Systems CS-UY 3254 This course offers a solid grounding in the basic issues and techniques of parallel and distributed computing. The material covers the spectrum from theoretical models of parallel and distributed systems to actual programming assignments. Prerequisite: CS-UY 2134. 3.00 Credits Unix System Programming CS-UY 3393 This course covers programming and system administration of UNIX systems. Also covered: Shell programming, special purpose languages, UNIX utilities, UNIX programming tools, systems programming and system administration. Prerequisites: CS 3224 and junior status. 3.00 Credits Java and Web Design CS-UY 3913 Programmers familiar with C or C++ learn to develop Java applications and applets. This course teaches the syntax of the Java language, object-oriented programming in Java, creating graphical user interfaces (GIU) using the Java 2 Platform technology event model, Java exceptions, file input/output (I/O) using Java Foundation Class threads and networking. Prerequisite: CS 2134. 3.00 Credits Computer Security CS-UY 3923 This course covers cryptographic systems. Topics: Capability and access control mechanisms, authentication models, protection models. Database and operating system security issues, mobile code, security kernels. Malicious code, Trojan horses and computer viruses. Security policy formation and enforcement enforcement, legal aspects and ethical aspects. Prerequisites: CS 2214 and MA 2312. Corequisite: CS 3224. 3.00 Credits Network Security CS-UY 3933 This course covers reviews networking. Topics: Basic notations of confidentiality, integrity, availability; cryptographic systems, coding and decoding messages. Cryptographic protocols for privacy, integrity, key exchange and access control. TCP/IP security; Firewalls, IPSec; secure ecommerce. Intrusion detection, prevention, response. Advanced topics are included. Prerequisites: CS 3224 and CS 6843, or EE 136, EL 5363 or EL 5373. CS-UY 394X ( Please refer to the bulletin ) 3.00 Credits Interactive Computer Graphics CS-UY 4533 An introduction to the field of computer graphics: displays, image formation, visual perception, images, transformations (viewing and projection), programmable pipelines (vertex and fragment programs), modeling (primitives, polygon meshes, smooth curves and surfaces), animation (keyframing, procedural), rendering and realism (visibility, lighting, shading, shadows, texturing, ray tracing). Prerequisites: CS-UY 2134 and MA-UY 2034 3.00 Credits Human Computer Interaction CS-UY 4543 Designing a successful interactive experience or software system takes more than technical savvy and vision--it also requires a deep understanding of how to serve people&#039;s needs and desires through the experience of the system, and knowledge about how to weave this understanding into the development process. This course introduces key topics and methods for creating and evaluating human-computer interfaces/digital user experiences. Students apply these practices to a system of their choosing (I encourage application to prototype systems that students are currently working on in other contexts, at any stage of development). The course builds toward a final write-up and presentation in which students detail how they tackled HCI/user experience design and evaluation of their system, and results from their investigations. Some experience creating/participating in the production of interactive experiences/software is recommended. 3.00 Credits Game Design CS-UY 4553 This course is about experimental game design. Design in this context pertains to every aspect of the game, and these can be broadly characterized as the game system, control, visuals, audio, and resulting theme. We will explore these aspects through the creation of a few very focused game prototypes using a variety of contemporary game engines and frameworks, high-level programming languages, and physical materials. This will allow us to obtain a better understanding of what makes games appealing, and how game mechanics, systems, and a variety of player experiences can be designed and iteratively improved by means of rapid prototyping and play-testing. The course combines the technology, design, and philosophy in support of game creation, as well as the real-world implementation and design challenges faced by practicing game designers. Students will learn design guidelines and principles by which games can be conceived, prototyped, and fully developed within a one-semester course, and will create a game from start to finish. The course is a lot of (team)work, but it\u2019s also a lot of fun. Programming skills are helpful, but not a hard requirement. Artistic skills, or a willingness to learn them are a plus. Prerequisites: CS-UY 3113, CS-UY 4533, or CS-UY 4613 (C- or better) for CS students; OART-UT 1600 and OART-UT 1605 for Game Center MFA students. Instructor permission required otherwise. 3.00 Credits Artificial Intelligence CS-UY 4613 Artificial Intelligence (AI) is an important topic in computer science that has many diversified applications. It addresses one of the ultimate puzzles human are trying to solve \u2013 How is it possible for a slow, tiny brain, whether biological or electronic, to perceive, understand, predict, and manipulate a world far larger and more complicated than itself? And, how do we go about creating a machine (or computer) with those properties? To this end, researchers in the AI field have been trying to understand how seeing, learning, remembering, and reasoning could, or should be done. This course introduces students to the many concepts and techniques in artificial intelligence. Prerequisite: CS-UY 2134 3.00 Credits Information Systems Security Engineering and Management CS-UY 4763 The primary goal of this course is to present a system and management view of information security: what it is, what drives the requirements for information security, how to integrate it into the systems design process, and life cycle security management of information systems. This course will not be about the technologies of information security, but how those technologies are integrated into a system and managed. Corequisite: CS-UY 3933 3.00 Credits Penetration Testing and Vulnerability Analysis CS-UY 4773 The course will start off with an in-depth review of the exploitation mitigations introduced in modern operating systems. The instructors will demonstrate their limitations through simple examples and gradually develop the basic exploitation techniques into more complicated methods applicable to real-world exploitation. Unlike most other exploitation courses, we will focus on approaching exploitation as a creative problem-solving process rather than an exercise of applying cookbook techniques to common types of vulnerabilities. Most of the course will focus on the hands-on application of the material through exercises and leading the students through the development of reliable exploits for recently patched vulnerabilities in widely used software. Prerequisite: CS-UY 3933 3.00 Credits Applied Cryptography CS-UY 4783 This course examines Modern Cryptography from a both theoretical and applied perspective, with emphasis on \u201cprovable security\u201d and \u201capplication case studies\u201d. The course looks particularly at cryptographic primitives that are building blocks of various cryptographic applications. The course studies notions of security for a given cryptographic primitive, its various constructions and respective security analysis based on the security notion. The cryptographic primitives covered include pseudorandom functions, symmetric encryption (block ciphers), hash functions and random oracles, message authentication codes, asymmetric encryption, digital signatures and authenticated key exchange. The course covers how to build provably secure cryptographic protocols (e.g., secure message transmission, identification schemes, secure function evaluation, etc.), and various number-theoretic assumptions upon which cryptography is based. Also covered: implementation issues (e.g., key lengths, key management, standards, etc.) and, as application case studies, a number of real-life scenarios currently using solutions from modern cryptography. Prerequisite: CS-UY 1124 3.00 Credits Computer Networking CS-UY 4793 This course takes a top-down approach to computer networking. After an overview of computer networks and the Internet, the course covers the application layer, transport layer, network layer and link layers. Topics at the application layer include client-server architectures, P2P architectures, DNS and HTTP and Web applications. Topics at the transport layer include multiplexing, connectionless transport and UDP, principles or reliable data transfer, connection-oriented transport and TCP and TCP congestion control. Topics at the network layer include forwarding, router architecture, the IP protocol and routing protocols including OSPF and BGP. Topics at the link layer include multiple-access protocols, ALOHA, CSMA/CD, Ethernet, CSMA/CA, wireless 802.11 networks and link-layer switches. The course includes simple quantitative delay and throughput modeling, socket programming and network application development and Ethereal labs. Prerequisite: CS-UY 2134 or equivalent.                                Computer Science, BS      Curriculum   Typical Course Schedule                                    Engineering is NYU  Follow Us:  Facebook Twitter Vimeo YouTube        Undergraduate   Admissions   How to Apply   Apply Now   admissions@nyu.edu   Graduate   Admissions   Requirements   Apply Now   engineering.gradinfo@nyu.edu   Site Links   Press   Directory   Directions   Event Calendar   Careers/HR   Support    Email/Network help@poly.edu Website Report a Problem Login (Faculty + Staff)  NYU School of Engineering 6 MetroTech Center, Brooklyn, NY 11201 Tel: 718.260.3600 Fax: 718.260.3136 &copy; NYU School of Engineering"}]}]